{"version":3,"sources":["store/UserStore/type.js","store/UserStore/action.js","store/AdminStore/action.js","store/CenterOnboardStore/action.js","store/AdminStore/type.js","store/CenterOnboardStore/type.js","components/config/config.js","components/centerRegistration/Api/api.js","components/centerComponent/api/api.js","assets/IndianStates.js","pages/PublicTicketBooking.js","pages/publicTicketBookingQr.js","pages/CenterRegistration.js","components/technicianComponent/api/api.js","pages/Technicians.js","components/AdminApi/Api/api.js","components/AdminApi/ticketEditPincodePopup.js","components/common/datepicker.js","components/FileUploadErrors.js","pages/Admin/Tickets.js","components/centerRegistration/Api/const.js","components/NavBar/navbar.js","pages/login.js","components/AdminApi/ViewActions.js","pages/Admin/Centers.js","pages/AddTechnician.js","pages/AddTicket.js","pages/Admin/technician.js","pages/Admin/adminLogin.js","helper/privateRoute.js","helper/publicRoute.js","helper/privateRouteAdmin.js","helper/adminPublicRoute.js","helper/privateRouteCenterOnboarding.js","components/centerComponent/assignTechnicianPopup.js","components/Components/CloseTicketRemark.js","components/Components/AddRemarksPopup.js","pages/ticketCenter.js","pages/CenterDashboard.js","components/broadCastCenter/api/api.js","pages/broadcastedRequests.js","pages/ticketCreatedByYou.js","components/NavBar/adminPannel.js","components/NavBar/CenterOnboardNavbar.js","components/Components/AddServiceModal.js","components/Components/ServicesList.js","pages/Admin/AdminDashboard.js","pages/Admin/BroadcastTickets.js","pages/Admin/AddClient.js","pages/Admin/AdminClients.js","components/Components/ViewFeedBackPopup.js","pages/Admin/Roles/ViewRole.js","pages/Admin/Roles/AdminRoles.js","pages/Admin/AddNewTicket.js","pages/Admin/broadcastedList.js","pages/Admin/AddCenter.js","components/payments/api/api.js","pages/payments.js","pages/Admin/veiwTicket.js","pages/feedBack.js","pages/Admin/FeedBack.js","pages/Admin/Roles/AddRole.js","pages/Admin/Users/ViewUser.js","pages/Admin/Users/AdminUsers.js","pages/Admin/Users/AddUser.js","pages/Admin/AdminCenterOnboarders/AdminCenterOnboarders.js","pages/CenterOnboarding/components/chips.js","pages/Admin/AdminCenterOnboarders/AddCenterOnboarder.js","components/CenterOnboardApi/Api/api.js","pages/CenterOnboarding/CenterOnboardRegistration.js","pages/CenterOnboarding/CenterOnboardLogin.js","pages/CenterOnboarding/components/CenterOnboardAddCenter.js","pages/CenterOnboarding/components/CentersList.js","routes.js","app.js","helper/setAuthToken.js","store/UserStore/reducer.js","store/AdminStore/reducer.js","store/CenterOnboardStore/reducer.js","store/sync_storage.js","store/store.js","index.jsx"],"names":["SET_LOGIN_DETAILS","SET_LOGOUT_DETAILS","SET_UPDATED_USER_DETAILS","setLoginDetails","payload","dispatch","type","BASE_URL","TripsModule","this","base_url","data","Promise","resolve","reject","axios","method","url","params","then","res","catch","err","file_identifier_name","centerListing","IndianStates","label","value","Item","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","stylesCss","inputBox","width","marginBottom","gridStyle","margin","paddingInnerGrids","paddingRight","paddingLeft","paddingTop","AVAILABLE_TIME_PREFERENCES","PublicTicketBooking","props","showDialog","open","msg","setState","toast","duration","closeDialog","handleChange","e","target","name","console","log","state","length","pincode","handleRegister","serviceRequired","specificRequirement","phoneNumber","alternatePhoneNumber","houseNumber","locality","city","country","timePreference","offerCode","isFormValid","isRegistering","specific_date_time","personal_details","primary_phone","country_code","mobile_number","alternate_phone","specific_requirement","service_provided_for","address_details","house_number","time_preference","time_preference_type","offers_applied","offer_code","CenterComponentApi","setTimeout","response","message","Date","servicesList","getAllServicesExists","CenterRegistrationApi","getAllActiveServices","newValue","snackBarValues","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","sx","className","Grid","container","item","md","style","FormControl","minWidth","InputLabel","id","Select","labelId","onChange","error","map","ite","MenuItem","_id","service_name","TextField","InputProps","startAdornment","InputAdornment","position","Typography","inputProps","maxLength","disabled","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","onChangeSpecificDateAndTime","minDate","minTime","maxTime","Button","variant","onClick","Component","isCenterExist","center_obj_id","centerDetails","centerName","qrId","window","location","hash","split","getCenterByQrid","qr_id","getCenterByQrId","doesCenterExists","center_name","CenterRegistration","handleChangeInputOuter","secondary_services","secondary_services_id","handleChangePersonalDetails","phone","handleChangeAddressDetails","additional_pincode","handleChangeSecondaryServiceDetails","handleSendOtp","primary_services","address_line","no_of_technicians","sendingOtp","sendOtp","action","isOtpSentSuccess","handleVerifyOtp","otpEntered","otp","isVerifyingOtp","verifyOtp","isOtpVerfied","priority","center_on_boarder_object","registerCenter","history","push","email","user_name","about","center_on_boarder_id","match","centerOnboarderId","getCenterOnboarderDetails","center_onboarder_id","getCenterOnboarderObjectId","helperText","withRouter","TechnicianApi","options","filterType","download","print","Technicians","getAssociatedCenters","centersList","centers_list","qr_details","join","handleEditTechnician","technicianList","columns","filter","sort","customBodyRender","tableMeta","updateValue","getAllTechnicians","getAllTechnician","mappedTechnician","profile_created_by","referenceDetails","reference_person_name","address_details_permanent","associatedWith","center_id","title","AdminApiModule","top","left","transform","bgcolor","border","boxShadow","p","ariaLabel","TicketEditPincodePopup","handleClose","isPincodeUpdating","handleUpdatePincode","isEditOpenTicketDetails","useState","newPincode","setnewPincode","Modal","Box","component","Input","BasicDateRangePicker","onClickFilter","refreshData","React","setValue","DateRangePicker","startText","endText","height","startProps","endProps","mx","marginRight","overflowY","styleListDivider","maxWidth","styleListItem","textAlignLeft","textAlignEnd","ListDividers","roleObject","List","Object","keys","key","ListItem","button","ListItemText","Divider","FileUploadErrors","doesFileUploadErrorExists","handleCloseFileUploadErrors","errorsList","display","Tickets","handleEditTicket","handleViewTicket","startLoading","start_date","end_date","getAllTickets","parsedData","getParsedData","ticketsList","stopLoading","isLoading","handleBroadCastTicket","ticket_obj_id","adminBroadCast","handleOpenEditPincodePopup","isEditOpenAddressPincode","handleCloseEditPincodePopup","componentDidMount","getFormattedAddress","addressObject","Created_at","moment","createdAt","format","ticket_id","assigned_ids","assigned_center_id","technician_id","assigned_technician_id","service_required","address","toLocaleDateString","year","month","day","specific_requirements","bstatus","broadcast_status","tstatus","ticket_status","tcreatedby","ticket_created_by","updatePincode","onUploadCsvFile","event","stateValue","files","aadharSideName","fileOriginalName","formData","FormData","append","uploadTicketsCsv","doesErrorExists","errorRowWise","Backdrop","zIndex","drawer","CircularProgress","reduxState","adminDetails","role_id","permissions","view_ticket","full_access","htmlFor","accept","connect","userReducer","PLEASE_ENTER_MOBILE_NUMBER","MOBILE_NUMBER_TEN_CHARACTERS","OTP_SENT_SUCCESSFULLY","OTP_NOT_ENTERED","LOGGED_IN_SUCCESSFULLY","drawerWidth","drawerItemsResponsive","path","ResponsiveDrawer","mobileOpen","setMobileOpen","handleDrawerToggle","globalState","useSelector","useHistory","useDispatch","Toolbar","index","ListItemIcon","primary","onClickLogout","userDetails","isUserLoggedIn","userTokens","accessToken","undefined","document","body","CssBaseline","AppBar","sm","ml","IconButton","edge","mr","noWrap","flexShrink","Drawer","ModalProps","keepMounted","xs","boxSizing","styles","layout","marginTop","btnLayout","btnHorLayout","marginLeft","Login","mobileNumber","setMobileNumber","setSnackBarValues","isOtpSent","setIsOtpSent","setOtpEntered","isOtpSending","setIsOtpSending","isLoggingIn","setIsLoggingIn","onClickSendOtp","toString","Card","CardContent","fontSize","align","gutterBottom","CardActions","loginCenter","token","centerDetailsPopulated","populatedCenterDetails","onClickLogin","ViewActions","isAuthorizedForPopupOpen","clientsList","toggleAuthorizedForPopup","saveAuthorizedCenters","centersSelected","setCentersSelected","multiple","client_name","activeStatus","Centers","getAllCenters","getAllClients","getFormattedServices","services","secondary_services_list","getFormattedClients","clients","clients_list","dateFormat","qrCode","status","is_active","onboarded_by","authorizedFor","clients_ids_list","closedTickets","count_details","closed_ticket_count","centerId","selectedCenterId","prevState","adminUpdateCenter","redirectToEditCenter","view_center_details","ENGAGEMENT_TYPES","AddTechnician","secondaryServices","additionalPinCode","whatsAppNumber","primaryService","engagementType","aadharCardNumber","permanentAddress","permanentCity","permanentState","permanentCountry","currentAddress","currentCity","currentState","currentCountry","referenceFirstPerson","referenceSecondPerson","firstPersonPhoneNumber","secondPersonPhoneNumber","pan_card_document","pan_number","aadharBackImage","test","isEditDetailsExists","technician_obj_id","getTechnicianObjIdForEdit","service_area_secondary_pincode","updateObject","centerUpdateTechnician","createTechnician","onUploadImage","uploadImage","fileSavedUrl","doesTechnicianExists","listOfServices","i","flags","output","l","editTechnicianId","URLSearchParams","search","get","getTechnicianDetails","updateTechnicianDetails","sArr","result","technicianDetails","getSecondaryServicesFormatted","service_area_main_pincode","engagement_type","document_details","aadhar_number","address_details_temporary","reference_person_mobile","emergency_details","emergency_person_name","emergency_person_phone","required","src","alt","AddTicket","createTicket","getAllServices","technicianId","selectedTechnicianId","saveAuthorizedTechnicians","techniciansSelected","adminUpdateTechnician","view_technician_details","AdminLogin","password","adminValues","setAdminValues","handleChangeUserNamePassword","isLogginIn","AdminApi","login","isAdminLoggedIn","PrivateRoute","rest","useEffect","render","PublicRoute","restricted","AdminReducer","AdminPrivate","centerOnboardReducer","isCenterOnboardLoggedIn","AssignTechnician","isForChange","handleAssignTechnician","handleChangeTechnician","isTechnicianAssigning","technicianSelected","setTechnicianSelected","fullWidth","flex","dialogInputBox","justifyContent","dialogAlignBox","feedBackOptionList","handleCloseTicket","closingTicketRemarks","setClosingTicketRemarks","closingPrice","setClosingPrice","placeholder","AddRemarksPopup","ticketObj","additionalRemarks","setAdditionalRemarks","remarks","date","CenterApi","addTicketRemarks","onClickSave","handleOpenTechnicianPopup","ticketDetails","isForChangeValue","isAssignTechnicianPopupOpen","ticketDetailsForAssignTechnician","handleCloseAssignTechnicianPopup","handleOpenCloseTicketRemarksModal","isCloseTicketRemarksModalOpen","handleCloseCloseTicketRemarksModal","amount","closingTicketId","close_ticket_remarks","closeTicket","clickCloseTicket","openAddRemarksPopup","isOpenAddRemarksPopup","closeAddRemarksPopup","assignTechnician","changeTechnician","ticketStatus","is_technician_assigned","CenterDashboard","CardActionArea","CardMedia","image","BroadCastListing","is_loading","broadCastList","status_of_ticket","acceptTicket","admin_setting","is_paid","rejectTicket","broadCastId","a","broadcast_obj_id","BroadCastApi","acceptBroadCastWithoutPayment","getAllBroadCastTicket","acceptFreeTicketWithoutPayment","acceptBroadCast","razorPayOptions","payment_response","description","order_id","handler","acceptTicketAfterPayment","responseAfterPayment","alert","reload","prefill","contact","notes","hide_topbar","Razorpay","date_created","Service","Action","ticketCreatedByList","getAllTicketCreatedByYou","created_by","assigned_center_name","centerOnboardDetails","AddServiceModal","isUpdate","serviceId","serviceNameProp","setOpen","serviceName","setServiceName","capitalText","toUpperCase","service_object_id","updateService","onClickUpdate","addService","ServicesList","onDeleteService","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","scope","FormGroup","FormControlLabel","control","Switch","checked","isActive","updateServiceStatus","handleChangeCheckBox","AdminDashboard","setServicesList","add_new_services","view_services_list","deleteService","BroadcastTickets","clientName","officialEmail","clientPocPersonName","clientPocPersonDesignation","clientPocPhone","addressLine","gstNumber","addClient","Clients","clientId","client_id","official_email","pocName","client_poc","person_name","pocDesignation","person_designation","pocPhone","gst_number","deleteClient","columnsList","bind","view_clients","add_clients","AddClient","ViewTicketFeedBack","viewfeedback","ListItemAvatar","Avatar","question","answer","ViewRole","isViewRoleOpen","handleCloseViewRole","Roles","parseRoleObject","addCenter","add_center","updateCenterFullAccess","update_center","deleteCenter","delete_center","viewCenterDetailsFullAccess","viewCenterDetailsViewPincode","view_pincode","addTechnician","add_technician","updateTechnicianFullAccess","update_technician","deleteTechnician","delete_technician","viewTechnicianDetailsFullAccess","viewTechnicianDetailsTechnicianPhone","technician_phone","viewDashboardFullAccess","view_dashboard_full_access","addNewServices","updateServicesFullAccess","update_services","inActiveActive","inactive_active","viewServicesListFullAccess","addTicket","add_ticket","editTicketFullAccess","edit_ticket","deleteTicket","delete_ticket","viewTicketFullAccess","addClients","editClientsFullAccess","edit_clients","viewClientsFullAccess","viewBroadcastedListFullAccess","view_broadcastedList","addRole","add_role","editRoleFullAccess","edit_role_permissions","deleteRole","delete_role","viewRoleFullAccess","view_role","handleViewRole","roleObjectValue","selectedRole","toggleOpenFeedBackPopup","isOpenFeedBackPopup","toggleCloseFeedBackPopup","getAllAvailableRoles","technicianName","technicianPhone","Address","customer_name","customer_number","FeedBack","JSON","stringify","feedBackResponse","over_all_rating","is_aldready_submitted","View_ticket","handleAddRole","isRoleEdit","handleEditRole","rolesList","role_name","authorizedForClient","getTicketObjIdForEdit","closing_ticket_price","admin_remarks","authorized_client_id","updateTicket","handleResetValues","doesTicketExists","editTicketId","getTicketDetails","updateTicketDetails","BroadCastedList","getAllBroadCastedList","center_phone","status_of_broadcast","broadCastedList","handleInputChangeClients","handleResetStateValues","qr_code","upi_id","getCenterIdForEdit","login_into_application","accepting_broadcast_ticket","updateCenterAdmin","automate_qr_code","adminCreateCenter","allClientsList","editCenterId","getCenterDetails","updateStateOfEditData","payment_details","disabled_for","input","OutlinedInput","paymentModule","Orders","mappedOrdersList","getAllOrders","OrdersApi","mappedOrders","ticketId","ticketAddress","sumPriceToPay","receipt","payment_status","ViewTicket","useLocation","setIsLoading","setDoesTicketExists","setTicketDetails","feedBackList","setFeedBackList","setBroadCastList","getSingleTicket","results","flexGrow","Chip","alignItems","Fragment","subheader","ListSubheader","fontWeight","additional_remarks","Feedback","setDisabled","invalidFeedBackLink","setInvalidFeedbackLink","setIsFeedBackAldreadySubmitted","setSubmitFeedBack","is_link_expired","setis_link_expired","setOfQuestions","setsetOfQuestions","loading","setLoading","checkIfFeedBackExists","FeedBackApi","checkIfFeedBackExistsForThisId","isFeedBackAldreadySubmitted","submitFeedBack","isFeedBackExists","checkIfItsValidToSubmit","answered","temp","ans","onChangeOfAnswer","defaultValue","submitFeedBackOnClick","getAllFeedBack","AddRole","roleName","role_created_user","role_obj_id","getRoleObjIdForEdit","adminUpdateRole","adminAddRole","doesRoleExists","editRoleId","getRoleDetails","updateRoleDetails","roleDetails","edit_role_full_access","ViewUser","AdminUsers","parseUserObject","userObject","userName","handleViewUser","userObjectValue","isViewUserOpen","selectedUser","handleCloseViewUser","getAllUsers","handleAddUser","isUserEdit","handleDeleteUser","user_object_id","adminRemoveUser","usersList","allUsers","AddUser","roleChosenId","phone_number","user_obj_id","getUserObjIdForEdit","adminCreateUser","doesUserExists","getAllRolesExists","editUserId","getUserDetails","updateUserDetails","AdminCenterOnboarders","getAllCenterOnBoarders","getFormattedList","array","handleAddCenterOnboarder","isCenterOnboarderEdit","handleUpdateOnboarder","centerOnboardersList","isViewCenterOnboarderOpen","selectedCenterOnboarder","getAllCenterOnBoarder","phone_details","allowed_states","allowed_cities","ChipsArray","chipData","handleDelete","flexWrap","listStyle","m","onDelete","AddCenterOnboarder","mapArrayToKeyLabel","arr","handleChangeStates","allowedStates","getArrayOfStrings","getCenterOnboarderObjIdForEdit","adminUpdateCenterOnBoarder","adminCreateCenterOnBoarder","handleDeleteChipData","chipToDelete","elementName","chip","allowedCities","handleAddAllowedCities","find","cityValue","countryCode","uniqueId","doesCenterOnboarderExists","editCenterOnboarderId","updateCenterOnboarderDetails","centerOnboarderDetails","CenterOnboardApiModule","CenterOnboardRegistration","CenterOnboardApi","SendOtpOnboarder","RegisterOnboarder","endAdornment","CenterOnboardLogin","SendOtpOnboarderLogin","VerifyOtpOnboarder","latest_details","OnboarderCreateCenter","CenterOnboardCenters","OnboarderGetAllCenters","element","handleAddCenter","isCenterEdit","handleDeleteCenter","stylesSheet","styleForDiv","Routes","exact","to","FeedBackComponent","PublicTicketBookingQr","AdminClients","AdminRoles","CenterOnboardAddCenter","wrapper","withRedux","store","useStore","setAuthToken","process","browser","persistor","__persistor","SetAuthToken","adminState","centerOnboardState","interceptors","use","axiosInterceptorError","axiosError","includes","AdminSetLoginDetails","replace","CenterOnboardSetLoginDetails","UserSetLoginDetails","axiosInterceptor","defaults","headers","common","initialState","storage","createWebStorage","getItem","_key","setItem","removeItem","combinedReducer","combineReducers","bindMiddleware","middleware","applyMiddleware","createWrapper","isServer","createStore","thunkMiddleware","require","persistStore","persistedReducer","persistReducer","whitelist","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6b854283.chunk.js","sourcesContent":["export const SET_LOGIN_DETAILS = \"setLoginDetails\";\r\nexport const SET_LOGOUT_DETAILS = \"setLogoutDetails\";\r\nexport const SET_UPDATED_USER_DETAILS = \"setUpdatedUserDetails\";\r\n","import { SET_LOGIN_DETAILS, SET_LOGOUT_DETAILS , SET_UPDATED_USER_DETAILS} from \"./type\";\r\n\r\nexport const setLoginDetails = (payload) => (dispatch) => {\r\n  return dispatch({\r\n    type: SET_LOGIN_DETAILS,\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setLogoutDetails = (payload) => (dispatch) => {\r\n  return dispatch({\r\n    type: SET_LOGOUT_DETAILS,\r\n    payload: payload,\r\n  });\r\n};\r\n\r\n\r\nexport const setUpdatedUserDetails = (payload) => (dispatch) => {\r\n  return dispatch({\r\n    type: SET_UPDATED_USER_DETAILS,\r\n    payload: payload,\r\n\r\n  })\r\n}\r\n\r\n\r\n","import { SET_LOGIN_DETAILS, SET_LOGOUT_DETAILS} from \"./type\";\r\n\r\nexport const setLoginDetails = (payload) => (dispatch) => {\r\n  return dispatch({\r\n    type: SET_LOGIN_DETAILS,\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setLogoutDetails = (payload) => (dispatch) => {\r\n  return dispatch({\r\n    type: SET_LOGOUT_DETAILS,\r\n    payload: payload,\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n","import { SET_LOGIN_DETAILS, SET_LOGOUT_DETAILS} from \"./type\";\r\n\r\nexport const setLoginDetails = (payload) => (dispatch) => {\r\n  return dispatch({\r\n    type: SET_LOGIN_DETAILS,\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setLogoutDetails = (payload) => (dispatch) => {\r\n  return dispatch({\r\n    type: SET_LOGOUT_DETAILS,\r\n    payload: payload,\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n","export const SET_LOGIN_DETAILS = \"setLoginDetails\";\r\nexport const SET_LOGOUT_DETAILS = \"setLogoutDetails\";\r\n","export const SET_LOGIN_DETAILS = \"setLoginDetails\";\r\nexport const SET_LOGOUT_DETAILS = \"setLogoutDetails\";\r\n","// export const BASE_URL = \"https://assa.herokuapp.com/\";\r\n// export const BASE_URL = \"https://api.onit.services/\";\r\nexport const BASE_URL = \"https://api.onit.fit/\"\r\n// export const BASE_URL = \"http://localhost:8000/\";\r\n\r\nexport const RAZORPAY_KEY = 'rzp_test_fikJImuKNrlwfG'\r\nexport const PAYMENT_NAME = 'onit'\r\nexport const PAYMENT_DESCRIPTION = 'Ticket acceptance'","import axios from \"axios\";\r\nimport { BASE_URL } from \"../../config/config\";\r\n\r\nclass TripsModule {\r\n  constructor() {\r\n    this.base_url = BASE_URL;\r\n  }\r\n\r\n  getCenterOnboarderObjectId(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}common/get-center-onboarder-objectId`,\r\n        params: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  updateCenterAdmin(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-center`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  getAllClients(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-clients`,\r\n        params: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  getCenterDetails(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-centers`,\r\n        params: payload,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  uploadImage(data, file_identifier_name) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}common/upload-image/${file_identifier_name}`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  submitFeedBack(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}common/submit-feedback`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  checkIfFeedBackExistsForThisId(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}common/check-feedback-link-valid`,\r\n        params: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  sendOtp(data, params) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/sent-otp`,\r\n        data: data,\r\n        params: params\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getCenterByQrId(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        params: data,\r\n        url: `${this.base_url}center/get-center-based-on-qr`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  getAllServices() {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-services`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  getAllActiveServices() {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-active-services`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  verifyOtp(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/verify-otp`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  registerCenter(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/register-center-via-web`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  adminCreateCenter(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/create-center`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  loginCenter(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/login-with-otp`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\nexport default TripsModule;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../../config/config\";\r\n\r\nclass centerListing {\r\n  constructor() {\r\n    this.base_url = BASE_URL;\r\n  }\r\n\r\n  getAllTickets() {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}center/get-all-ticket`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  createTechnician(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/create-technician`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  PublicTicketBooking(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/public-ticket-booking`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  createTicket(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/create-ticket`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  getAllTechnician(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}center/get-all-technician`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  closeTicket(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/close-ticket`,\r\n        data: data,\r\n\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  assignTechnician(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        data: data,\r\n        url: `${this.base_url}center/assigning-ticket-technician`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  changeTechnician(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        data: data,\r\n        url: `${this.base_url}center/change-ticket-technician`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  addTicketRemarks(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        data: data,\r\n        url: `${this.base_url}center/add-remarks-ticket`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  centerUpdateTechnician(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}center/update-technician`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default centerListing;","export const IndianStates = [\r\n    { label: 'AN', value: 'Andaman and Nicobar Islands' },\r\n    { label: 'AP', value: 'Andhra Pradesh' },\r\n    { label: 'AR', value: 'Arunachal Pradesh' },\r\n    { label: 'AS', value: 'Assam' },\r\n    { label: 'BR', value: 'Bihar' },\r\n    { label: 'CG', value: 'Chandigarh' },\r\n    { label: 'CH', value: 'Chhattisgarh' },\r\n    { label: 'DN', value: 'Dadra and Nagar Haveli' },\r\n    { label: 'DD', value: 'Daman and Diu' },\r\n    { label: 'DL', value: 'Delhi' },\r\n    { label: 'GA', value: 'Goa' },\r\n    { label: 'GJ', value: 'Gujarat' },\r\n    { label: 'HR', value: 'Haryana' },\r\n    { label: 'HP', value: 'Himachal Pradesh' },\r\n    { label: 'JK', value: 'Jammu and Kashmir' },\r\n    { label: 'JH', value: 'Jharkhand' },\r\n    { label: 'KA', value: 'Karnataka' },\r\n    { label: 'KL', value: 'Kerala' },\r\n    { label: 'LA', value: 'Ladakh' },\r\n    { label: 'LD', value: 'Lakshadweep' },\r\n    { label: 'MP', value: 'Madhya Pradesh' },\r\n    { label: 'MH', value: 'Maharashtra' },\r\n    { label: 'MN', value: 'Manipur' },\r\n    { label: 'ML', value: 'Meghalaya' },\r\n    { label: 'MZ', value: 'Mizoram' },\r\n    { label: 'NL', value: 'Nagaland' },\r\n    { label: 'OR', value: 'Odisha' },\r\n    { label: 'PY', value: 'Puducherry' },\r\n    { label: 'PB', value: 'Punjab' },\r\n    { label: 'RJ', value: 'Rajasthan' },\r\n    { label: 'SK', value: 'Sikkim' },\r\n    { label: 'TN', value: 'Tamil Nadu' },\r\n    { label: 'TS', value: 'Telangana' },\r\n    { label: 'TR', value: 'Tripura' },\r\n    { label: 'UP', value: 'Uttar Pradesh' },\r\n    { label: 'UK', value: 'Uttarakhand' },\r\n    { label: 'WB', value: 'West Bengal' }\r\n];","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../Styles/style.css';\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n\r\n\r\nimport CenterRegistrationApi from '../components/centerRegistration/Api/api';\r\nimport CenterComponentApi from '../components/centerComponent/api/api';\r\nimport { IndianStates } from '../assets/IndianStates';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nconst AVAILABLE_TIME_PREFERENCES = [\r\n    'IMMEDIATELY',\r\n    'WITHIN_24_HOURS',\r\n    'SPECIFIC_DATE_AND_TIME',\r\n]\r\n\r\nclass PublicTicketBooking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serviceRequired: '',\r\n            specificRequirement: '',\r\n            name: '',\r\n            phoneNumber: '',\r\n            alternatePhoneNumber: '',\r\n            houseNumber: '',\r\n            locality: '',\r\n            city: '',\r\n            state: '',\r\n            country: 'INDIA',\r\n            pincode: '',\r\n            timePreference: '',\r\n            offerCode: 'OniT 2022',\r\n            specific_date_time: new Date(),\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n            servicesList: [],\r\n\r\n            isRegistering: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllServicesExists()\r\n    }\r\n\r\n    getAllServicesExists() {\r\n        new CenterRegistrationApi().getAllActiveServices().then(res => {\r\n            this.setState({\r\n                servicesList: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    onChangeSpecificDateAndTime(newValue) {\r\n        this.setState({ specific_date_time: newValue })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n\r\n        if (name == \"pincode\") {\r\n            if (value.length <= 6) {\r\n                this.setState({\r\n                    pincode: value\r\n                })\r\n            }\r\n\r\n            return\r\n        }\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { serviceRequired, specificRequirement, name, phoneNumber, alternatePhoneNumber,\r\n            houseNumber, locality, city, state, country, pincode, timePreference, offerCode } = this.state;\r\n\r\n\r\n        if (!(serviceRequired &&\r\n            name &&\r\n            phoneNumber &&\r\n            houseNumber &&\r\n            pincode &&\r\n            timePreference &&\r\n            offerCode\r\n        )) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n        if (this.state.timePreference == \"SPECIFIC_DATE_AND_TIME\") {\r\n            if (!this.state.specific_date_time) {\r\n                this.showDialog(true, \"error\", \"Please fill in Specific date and time\")\r\n                return\r\n\r\n            }\r\n        }\r\n        let payload = {\r\n            personal_details: {\r\n                primary_phone: {\r\n                    country_code: \"+91\",\r\n                    mobile_number: phoneNumber\r\n                },\r\n                alternate_phone: {\r\n                    country_code: alternatePhoneNumber.length > 0 ? \"+91\" : \"\",\r\n                    mobile_number: alternatePhoneNumber\r\n                },\r\n                name: name,\r\n            },\r\n            specific_requirement: specificRequirement,\r\n            service_provided_for: serviceRequired,\r\n            address_details: {\r\n                house_number: houseNumber,\r\n                locality: locality,\r\n                city: city,\r\n                state: state,\r\n                pincode: pincode,\r\n                country: country,\r\n            },\r\n            time_preference: {\r\n                time_preference_type: timePreference,\r\n                specific_date_time: this.state.specific_date_time,\r\n            },\r\n            offers_applied: {\r\n                offer_code: offerCode\r\n            }\r\n        }\r\n\r\n        new CenterComponentApi().PublicTicketBooking(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Ticket Created successfully\");\r\n\r\n            this.setState({\r\n                isRegistering: false,\r\n\r\n                serviceRequired: '',\r\n                specificRequirement: '',\r\n                name: '',\r\n                phoneNumber: '',\r\n                alternatePhoneNumber: '',\r\n                houseNumber: '',\r\n                locality: '',\r\n                city: '',\r\n                state: '',\r\n                country: 'INDIA',\r\n                pincode: '',\r\n                timePreference: '',\r\n                offerCode: '',\r\n            });\r\n\r\n            setTimeout(() => {\r\n                this.showDialog(true, \"info\", \"Add more ticket\");\r\n            }, 2000);\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues, isFormValid,\r\n            serviceRequired, specificRequirement, name, phoneNumber, alternatePhoneNumber,\r\n            houseNumber, locality, city, state, country, pincode, timePreference, offerCode } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">Namaste !</h2>\r\n                <h4 className=\"text-align-center\">Please help us understand your need</h4>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Service You Required</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Service You Required\"\r\n                                    name=\"serviceRequired\"\r\n                                    onChange={this.handleChange}\r\n                                    value={serviceRequired}\r\n                                    error={isFormValid && !serviceRequired}\r\n\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Specific Requirement - it helps\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"specificRequirement\"\r\n                                value={specificRequirement}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !specificRequirement}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Name (Contact Person)\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"phoneNumber\"\r\n                                value={phoneNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !phoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Alternate Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"alternatePhoneNumber\"\r\n                                value={alternatePhoneNumber}\r\n                                onChange={this.handleChange}\r\n                                // error={isFormValid && !alternatePhoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"House Number / Street\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"houseNumber\"\r\n                                value={houseNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !houseNumber}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Locality\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"locality\"\r\n                                value={locality}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !locality}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"City\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"city\"\r\n                                value={city}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !city}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"State\"\r\n                                    name=\"state\"\r\n                                    onChange={this.handleChange}\r\n                                    value={state}\r\n                                    error={isFormValid && !state}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Country\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"country\"\r\n                                value={country}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !country}\r\n                                disabled\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Pincode\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"pincode\"\r\n                                type=\"number\"\r\n                                value={pincode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !pincode}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Time Preference</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Time Preference\"\r\n                                    name=\"timePreference\"\r\n                                    onChange={this.handleChange}\r\n                                    value={timePreference}\r\n                                    error={isFormValid && !timePreference}\r\n\r\n                                >\r\n                                    {AVAILABLE_TIME_PREFERENCES?.map(ite => {\r\n                                        return <MenuItem value={ite}>\r\n                                            {ite}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {\r\n                            this.state.timePreference == \"SPECIFIC_DATE_AND_TIME\" ? <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n\r\n                                    <DateTimePicker\r\n                                        renderInput={(params) => <TextField {...params} />}\r\n                                        label=\"Select date and time\"\r\n                                        value={this.state.specific_date_time}\r\n                                        onChange={(newValue) => {\r\n                                            this.onChangeSpecificDateAndTime(newValue);\r\n                                        }}\r\n                                        minDate={new Date()}\r\n                                        minTime={new Date(0, 0, 0, 8)}\r\n                                        maxTime={new Date(0, 0, 0, 20)}\r\n                                    />\r\n                                </LocalizationProvider>\r\n\r\n                            </Grid> : \"\"\r\n                        }\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Offer Code\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"offerCode\"\r\n                                value={offerCode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !offerCode}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >SUBMIT\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PublicTicketBooking;","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../Styles/style.css';\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n\r\n\r\nimport CenterRegistrationApi from '../components/centerRegistration/Api/api';\r\nimport CenterComponentApi from '../components/centerComponent/api/api';\r\nimport { IndianStates } from '../assets/IndianStates';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nconst AVAILABLE_TIME_PREFERENCES = [\r\n    'IMMEDIATELY',\r\n    'WITHIN_24_HOURS',\r\n    'SPECIFIC_DATE_AND_TIME',\r\n]\r\n\r\nclass PublicTicketBooking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serviceRequired: '',\r\n            specificRequirement: '',\r\n            name: '',\r\n            phoneNumber: '',\r\n            alternatePhoneNumber: '',\r\n            houseNumber: '',\r\n            locality: '',\r\n            city: '',\r\n            state: '',\r\n            country: 'INDIA',\r\n            pincode: '',\r\n            timePreference: '',\r\n            offerCode: 'OniT 2022',\r\n            specific_date_time: new Date(),\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n            servicesList: [],\r\n\r\n            isRegistering: false,\r\n\r\n            isCenterExist: false,\r\n            centerDetails: {},\r\n            centerName: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllServicesExists()\r\n\r\n        let qrId = window.location.hash.split('/')[2]\r\n        console.log(qrId, \"qr id\")\r\n\r\n        this.getCenterByQrid(qrId)\r\n    }\r\n\r\n\r\n    getCenterByQrid(qrId) {\r\n\r\n        let payload = {\r\n            qr_id: qrId\r\n        }\r\n\r\n        new CenterRegistrationApi().getCenterByQrId(payload).then(res => {\r\n\r\n            this.setState({\r\n                isCenterExist: res.data.isCenterExist,\r\n                centerDetails: res.data.doesCenterExists,\r\n                centerName: res.data.doesCenterExists?.center_name\r\n            })\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    getAllServicesExists() {\r\n        new CenterRegistrationApi().getAllActiveServices().then(res => {\r\n            this.setState({\r\n                servicesList: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        if (name == \"pincode\") {\r\n            if (value.length <= 6) {\r\n                this.setState({\r\n                    pincode: value\r\n                })\r\n            }\r\n\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n    onChangeSpecificDateAndTime(newValue) {\r\n        this.setState({ specific_date_time: newValue })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { serviceRequired, specificRequirement, name, phoneNumber, alternatePhoneNumber,\r\n            houseNumber, locality, city, state, country, pincode, timePreference, offerCode } = this.state;\r\n\r\n\r\n        if (!(serviceRequired &&\r\n            name &&\r\n            phoneNumber &&\r\n            houseNumber &&\r\n            pincode &&\r\n            timePreference &&\r\n            offerCode\r\n        )) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n\r\n        if (this.state.timePreference == \"SPECIFIC_DATE_AND_TIME\") {\r\n            if (!this.state.specific_date_time) {\r\n                this.showDialog(true, \"error\", \"Please fill in Specific date and time\")\r\n                return\r\n\r\n            }\r\n        }\r\n\r\n        let payload = {\r\n            personal_details: {\r\n                primary_phone: {\r\n                    country_code: \"+91\",\r\n                    mobile_number: phoneNumber\r\n                },\r\n                alternate_phone: {\r\n                    country_code: alternatePhoneNumber.length > 0 ? \"+91\" : \"\",\r\n                    mobile_number: alternatePhoneNumber\r\n                },\r\n                name: name,\r\n            },\r\n            specific_requirement: specificRequirement,\r\n            service_provided_for: serviceRequired,\r\n            address_details: {\r\n                house_number: houseNumber,\r\n                locality: locality,\r\n                city: city,\r\n                state: state,\r\n                pincode: pincode,\r\n                country: country,\r\n            },\r\n            time_preference: {\r\n                time_preference_type: timePreference,\r\n                specific_date_time: this.state.specific_date_time,\r\n            },\r\n            offers_applied: {\r\n                offer_code: offerCode\r\n            }\r\n        }\r\n\r\n        if (this.state.isCenterExist) {\r\n            payload = {\r\n                ...payload,\r\n                center_obj_id: this.state.centerDetails?._id\r\n            }\r\n        }\r\n\r\n\r\n        new CenterComponentApi().PublicTicketBooking(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Ticket Created successfully\");\r\n\r\n            this.setState({\r\n                isRegistering: false,\r\n\r\n                serviceRequired: '',\r\n                specificRequirement: '',\r\n                name: '',\r\n                phoneNumber: '',\r\n                alternatePhoneNumber: '',\r\n                houseNumber: '',\r\n                locality: '',\r\n                city: '',\r\n                state: '',\r\n                country: 'INDIA',\r\n                pincode: '',\r\n                timePreference: '',\r\n                offerCode: '',\r\n            });\r\n\r\n            setTimeout(() => {\r\n                this.showDialog(true, \"info\", \"Add more ticket\");\r\n            }, 2000);\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues, isFormValid,\r\n            serviceRequired, specificRequirement, name, phoneNumber, alternatePhoneNumber,\r\n            houseNumber, locality, city, state, country, pincode, timePreference, offerCode } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">Namaste !</h2>\r\n                <h4 className=\"text-align-center\">Please help us understand your need</h4>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Service You Required</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Service You Required\"\r\n                                    name=\"serviceRequired\"\r\n                                    onChange={this.handleChange}\r\n                                    value={serviceRequired}\r\n                                    error={isFormValid && !serviceRequired}\r\n\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Specific Requirement - it helps\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"specificRequirement\"\r\n                                value={specificRequirement}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !specificRequirement}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Name (Contact Person)\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"phoneNumber\"\r\n                                value={phoneNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !phoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Alternate Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"alternatePhoneNumber\"\r\n                                value={alternatePhoneNumber}\r\n                                onChange={this.handleChange}\r\n                                // error={isFormValid && !alternatePhoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"House Number / Street\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"houseNumber\"\r\n                                value={houseNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !houseNumber}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Locality\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"locality\"\r\n                                value={locality}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !locality}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"City\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"city\"\r\n                                value={city}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !city}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"State\"\r\n                                    name=\"state\"\r\n                                    onChange={this.handleChange}\r\n                                    value={state}\r\n                                    error={isFormValid && !state}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Country\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"country\"\r\n                                value={country}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !country}\r\n                                disabled\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Pincode\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"pincode\"\r\n                                value={pincode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !pincode}\r\n                                type=\"number\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Time Preference</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Time Preference\"\r\n                                    name=\"timePreference\"\r\n                                    onChange={this.handleChange}\r\n                                    value={timePreference}\r\n                                    error={isFormValid && !timePreference}\r\n\r\n                                >\r\n                                    {AVAILABLE_TIME_PREFERENCES?.map(ite => {\r\n                                        return <MenuItem value={ite}>\r\n                                            {ite}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        {\r\n                            this.state.timePreference == \"SPECIFIC_DATE_AND_TIME\" ? <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n\r\n                                    <DateTimePicker\r\n                                        renderInput={(params) => <TextField {...params} />}\r\n                                        label=\"Select date and time\"\r\n                                        value={this.state.specific_date_time}\r\n                                        onChange={(newValue) => {\r\n                                            this.onChangeSpecificDateAndTime(newValue);\r\n                                        }}\r\n                                        minDate={new Date()}\r\n                                        minTime={new Date(0, 0, 0, 8)}\r\n                                        maxTime={new Date(0, 0, 0, 20)}\r\n                                    />\r\n                                </LocalizationProvider>\r\n\r\n                            </Grid> : \"\"\r\n                        }\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Offer Code\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"offerCode\"\r\n                                value={offerCode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !offerCode}\r\n                            />\r\n                        </Grid>\r\n                        {\r\n                            this.state.isCenterExist && <>\r\n                                <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                    <TextField\r\n                                        id=\"demo-helper-text-misaligned\"\r\n                                        label=\"Partner Name\"\r\n                                        style={stylesCss.inputBox}\r\n                                        name=\"offerCode\"\r\n                                        value={this.state.centerName}\r\n                                        // onChange={this.handleChange}\r\n                                        // error={isFormValid && !offerCode}\r\n                                        disabled={true}\r\n                                    />\r\n                                </Grid>\r\n                            </>\r\n                        }\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >SUBMIT\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PublicTicketBooking;","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../Styles/style.css';\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\n\r\nimport CenterRegistrationApi from '../components/centerRegistration/Api/api'\r\nimport { IndianStates } from '../assets/IndianStates';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nclass CenterRegistration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            center_name: \"\",\r\n            personal_details: {\r\n                phone: {\r\n                    country_code: \"+91\",\r\n                    mobile_number: \"\",\r\n                },\r\n                email: \"\",\r\n                name: \"\",\r\n                user_name: \"\",\r\n                about: \"\",\r\n            },\r\n            primary_services: \"\",\r\n            secondary_services: {\r\n                secondary_services_id: \"\",\r\n                priority: \"\",\r\n            },\r\n            address_details: {\r\n                // longitude: \"\",\r\n                // latitude: \"\",\r\n                address_line: \"\",\r\n                city: \"\",\r\n                state: \"\",\r\n                pincode: \"\",\r\n                additional_pincode: \"\",\r\n                country: \"INDIA\",\r\n                // short_code_for_place: \"\",\r\n                // google_geo_location: \"\",\r\n            },\r\n            no_of_technicians: \"\",\r\n            center_on_boarder_object: {},\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n            servicesList: [],\r\n\r\n            sendingOtp: false,\r\n            isOtpSentSuccess: false,\r\n            otpEntered: '',\r\n\r\n            isVerifyingOtp: false,\r\n            isOtpVerfied: false,\r\n\r\n            isRegistering: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllServicesExists()\r\n\r\n        let center_on_boarder_id = this?.props?.match?.params?.centerOnboarderId\r\n\r\n        if (center_on_boarder_id != null) {\r\n            this.getCenterOnboarderDetails(center_on_boarder_id)\r\n        }\r\n    }\r\n\r\n    getCenterOnboarderDetails(centerOnboarderId) {\r\n        let payload = {\r\n            center_onboarder_id: centerOnboarderId\r\n        }\r\n\r\n        new CenterRegistrationApi().getCenterOnboarderObjectId(payload).then(res => {\r\n            if (res?.data?.length) {\r\n                this.setState({ center_on_boarder_object: res.data?.[0] });\r\n            }\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getAllServicesExists() {\r\n        new CenterRegistrationApi().getAllActiveServices().then(res => {\r\n            this.setState({\r\n                servicesList: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChangeInputOuter = (e) => {\r\n        let { name, value } = e.target\r\n\r\n        if (name === \"primary_services\") {\r\n            this.setState({\r\n                secondary_services: {\r\n                    ...this.state.secondary_services,\r\n                    secondary_services_id: value\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleChangePersonalDetails = (e) => {\r\n        let { name, value } = e.target\r\n\r\n        this.setState({\r\n            personal_details: {\r\n                phone: {\r\n                    ...this.state.personal_details.phone,\r\n                    [name]: value\r\n\r\n                }\r\n            }\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleChangeAddressDetails = (e) => {\r\n\r\n        let { name, value } = e.target\r\n\r\n        if (name === \"pincode\") {\r\n            if (value.length <= 6) {\r\n                this.setState({\r\n                    address_details: {\r\n                        ...this.state.address_details,\r\n                        additional_pincode: value\r\n                    }\r\n                }, () => {\r\n                    this.setState({\r\n                        address_details: {\r\n                            ...this.state.address_details,\r\n                            [name]: value\r\n                        }\r\n                    })\r\n                })\r\n\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            address_details: {\r\n                ...this.state.address_details,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeSecondaryServiceDetails = (e) => {\r\n\r\n        let { name, value } = e.target\r\n\r\n        this.setState({\r\n            secondary_services: {\r\n                ...this.state.secondary_services,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleSendOtp = () => {\r\n\r\n\r\n        if (!(this.state.center_name &&\r\n            this.state.personal_details.phone.mobile_number &&\r\n            this.state.primary_services &&\r\n            this.state.secondary_services.secondary_services_id &&\r\n            this.state.address_details.address_line &&\r\n            this.state.address_details.city &&\r\n            this.state.address_details.state &&\r\n            this.state.address_details.pincode &&\r\n            this.state.address_details.country &&\r\n            (this.state.no_of_technicians === 0 || this.state.no_of_technicians) &&\r\n            this.state.address_details.additional_pincode)) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            sendingOtp: true,\r\n\r\n        })\r\n\r\n        let payload = {\r\n            country_code: this.state.personal_details.phone.country_code,\r\n            mobile_number: this.state.personal_details.phone.mobile_number,\r\n\r\n        }\r\n\r\n        let params = {\r\n            action: \"registration\"\r\n        }\r\n\r\n        new CenterRegistrationApi().sendOtp(payload, params).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"otp sent successfully\");\r\n\r\n            this.setState({\r\n                sendingOtp: false,\r\n                isOtpSentSuccess: true\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                sendingOtp: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    handleVerifyOtp = () => {\r\n\r\n        let { otpEntered } = this.state\r\n        if (!otpEntered) {\r\n            this.showDialog(true, \"error\", \"otp not entered\")\r\n            return\r\n        }\r\n\r\n        let payload = {\r\n            country_code: \"+91\",\r\n            mobile_number: this.state.personal_details.phone.mobile_number,\r\n            otp: otpEntered\r\n        }\r\n\r\n        this.setState({\r\n            isVerifyingOtp: true,\r\n\r\n        })\r\n\r\n\r\n        new CenterRegistrationApi().verifyOtp(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"otp verified successfully , register \");\r\n\r\n            this.setState({\r\n                isVerifyingOtp: false,\r\n                isOtpVerfied: true\r\n            })\r\n\r\n            this.handleRegister()\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isVerifyingOtp: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleRegister = () => {\r\n\r\n        let payload = {\r\n            center_name: this.state.center_name,\r\n            personal_details: this.state.personal_details,\r\n            primary_services: this.state.primary_services,\r\n            secondary_services: [\r\n                {\r\n                    secondary_services_id: this.state.secondary_services.secondary_services_id,\r\n                    priority: 1,\r\n\r\n                }\r\n            ],\r\n            address_details: this.state.address_details,\r\n            no_of_technicians: this.state.no_of_technicians,\r\n\r\n        }\r\n\r\n        if (this.state.center_on_boarder_object && this.state.center_on_boarder_object._id) {\r\n            payload[\"onboarded_by\"] = this.state.center_on_boarder_object._id\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n        new CenterRegistrationApi().registerCenter(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Registered successfully , Please Login \");\r\n\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n\r\n            setTimeout(() => {\r\n                this.props.history.push(\"/login\")\r\n            }, 5000);\r\n            // this.handleRegister()\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { toast: snackBarValues, isFormValid } = this.state\r\n\r\n        return (\r\n            <div>\r\n\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">\r\n                    Center Registration\r\n                </h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please provide your Shop / Center (Name)\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Shop / Center (Name)\"\r\n                                name=\"center_name\"\r\n                                onChange={this.handleChangeInputOuter}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !this.state.center_name}\r\n                                value={this.state.center_name}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please provide your Shop / Center (Name)\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"What's App Number\"\r\n                                name=\"mobile_number\"\r\n                                disabled={this.state.isOtpSentSuccess}\r\n                                onChange={this.handleChangePersonalDetails}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !this.state.personal_details.phone.mobile_number}\r\n                                value={this.state.personal_details.phone.mobile_number}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Main Service You Offer / Need</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Main Service You Offer / Need\"\r\n                                    name=\"primary_services\"\r\n                                    onChange={this.handleChangeInputOuter}\r\n                                    error={isFormValid && !this.state.primary_services}\r\n                                    value={this.state.primary_services}\r\n\r\n\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Other Service You Offer / Need</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Other Service You Offer / Need\"\r\n                                    name=\"secondary_services_id\"\r\n                                    onChange={this.handleChangeSecondaryServiceDetails}\r\n                                    error={isFormValid && !this.state.secondary_services.secondary_services_id}\r\n                                    value={this.state.secondary_services.secondary_services_id}\r\n\r\n                                // multiple\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your address\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Address\"\r\n                                name=\"address_line\"\r\n                                onChange={this.handleChangeAddressDetails}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !this.state.address_details.address_line}\r\n                                value={this.state.address_details.address_line}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your city\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"City\"\r\n                                name=\"city\"\r\n                                onChange={this.handleChangeAddressDetails}\r\n                                error={isFormValid && !this.state.address_details.city}\r\n                                value={this.state.address_details.city}\r\n\r\n                                style={stylesCss.inputBox}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"State\"\r\n                                    name=\"state\"\r\n                                    onChange={this.handleChangeAddressDetails}\r\n                                    value={this.state.address_details.state}\r\n                                    error={isFormValid && !this.state.address_details.state}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Country\"\r\n                                name=\"country\"\r\n                                onChange={this.handleChangeAddressDetails}\r\n                                error={isFormValid && !this.state.address_details.country}\r\n                                value={this.state.address_details.country}\r\n                                style={stylesCss.inputBox}\r\n                                disabled\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your pincode\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Service Area Pincode (main)\"\r\n                                name=\"pincode\"\r\n                                type=\"number\"\r\n                                onChange={this.handleChangeAddressDetails}\r\n                                error={isFormValid && !this.state.address_details.pincode}\r\n                                value={this.state.address_details.pincode}\r\n\r\n                                style={stylesCss.inputBox}\r\n                                inputProps={{ maxLength: 6 }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your additional pincode\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Addtional Service Area Pincode (other)\"\r\n                                name=\"additional_pincode\"\r\n                                onChange={this.handleChangeAddressDetails}\r\n                                error={isFormValid && !this.state.address_details.additional_pincode}\r\n                                value={this.state.address_details.additional_pincode}\r\n\r\n                                style={stylesCss.inputBox}\r\n                                inputProps={{ maxLength: 6 }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Technician Associate</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Technician Associate\"\r\n                                    name=\"no_of_technicians\"\r\n                                    onChange={this.handleChangeInputOuter}\r\n                                    error={isFormValid && this.state.no_of_technicians === \"\"}\r\n                                    value={this.state.no_of_technicians}\r\n\r\n                                >\r\n                                    {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(ite => {\r\n                                        return <MenuItem value={ite}>{ite}</MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        {\r\n                            this.state.isOtpSentSuccess && !this.state.isOtpVerfied ? <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                                <TextField\r\n                                    id=\"demo-helper-text-misaligned\"\r\n                                    label=\"Enter otp\"\r\n                                    name=\"otpEntered\"\r\n                                    onChange={this.handleChangeInputOuter}\r\n                                    value={this.state.otpEntered}\r\n\r\n                                    style={stylesCss.inputBox}\r\n                                />\r\n                            </Grid> : ''\r\n                        }\r\n\r\n\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            {!this.state.isOtpSentSuccess && <Button\r\n                                onClick={() => this.handleSendOtp()}\r\n                                variant=\"contained\"\r\n                                disabled={this.state.sendingOtp}\r\n                            >{this.state.sendingOtp ? \"Sending otp\" : \"Send Otp\"}</Button>}\r\n\r\n                            {this.state.isOtpSentSuccess && !this.state.isOtpVerfied ? <Button\r\n                                onClick={() => this.handleVerifyOtp()}\r\n                                variant=\"contained\"\r\n                                disabled={this.state.isVerifyingOtp}\r\n\r\n                            >{this.state.isVerifyingOtp ? \"Verifying otp\" : \"Verify Otp\"}</Button> : ''}\r\n\r\n                            {this.state.isOtpVerfied && <Button\r\n                                onClick={() => this.handleRegister()}\r\n                                variant=\"contained\"\r\n                                disabled={this.state.isRegistering}\r\n                            >{this.state.isRegistering ? \"Registering\" : \"Register\"}</Button>}\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CenterRegistration);","import axios from \"axios\";\r\nimport { BASE_URL } from \"../../config/config\";\r\n\r\nclass TechnicianApi {\r\n    constructor() {\r\n        this.base_url = BASE_URL;\r\n    }\r\n\r\n\r\n    getAllTicketCreatedByYou() {\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: \"get\",\r\n                url: `${this.base_url}center/get-all-tickets-created-not-assigned`,\r\n            })\r\n                .then((res) => {\r\n                    resolve(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n    getAllTechnician() {\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: \"get\",\r\n                url: `${this.base_url}center/get-all-technician`,\r\n            })\r\n                .then((res) => {\r\n                    resolve(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n    }\r\n}\r\n\r\nexport default TechnicianApi;","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../Styles/style.css';\r\n\r\nimport TechnicianApi from '../components/technicianComponent/api/api'\r\nimport Button from '@mui/material/Button';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n    download: false,\r\n    print: false\r\n};\r\n\r\nclass Technicians extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            technicianList: [],\r\n            columns: [\r\n                {\r\n                    name: \"name\",\r\n                    label: \"Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"email\",\r\n                    label: \"email\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"phone\",\r\n                    label: \"phone\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"profile_created_by\",\r\n                    label: \"profile created by\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"referenceDetails\",\r\n                    label: \"reference Details\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"address_details_permanent\",\r\n                    label: \"address details permanent\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"associatedWith\",\r\n                    label: \"Associated CenterCode\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"action\",\r\n                    label: \"Actions\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            console.log({\r\n                                value, tableMeta, updateValue\r\n                            })\r\n                            return <>\r\n                                <Button onClick={() => this.handleEditTechnician(value?._id)} variant=\"contained\" color=\"primary\" >Edit Technician</Button>\r\n                            </>\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllTechnicians()\r\n    }\r\n\r\n    getAllTechnicians() {\r\n        new TechnicianApi().getAllTechnician().then(res => {\r\n\r\n            let mappedTechnician = res?.data?.map(ite => {\r\n                return {\r\n                    name: ite?.personal_details?.name,\r\n                    email: ite?.personal_details?.email,\r\n                    phone: ite?.personal_details?.phone?.country_code + ite?.personal_details?.phone?.mobile_number,\r\n                    profile_created_by: ite?.profile_created_by,\r\n                    referenceDetails: ite?.referenceDetails?.reference_person_name,\r\n                    address_details_permanent: ite?.address_details_permanent?.address_line + \"  \" + ite?.address_details_permanent?.city + \" \" + ite?.address_details_permanent?.country,\r\n                    associatedWith: this.getAssociatedCenters(ite?.center_id),\r\n                    action: ite\r\n                }\r\n            })\r\n\r\n            this.setState({ technicianList: mappedTechnician })\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n\r\n        })\r\n    }\r\n\r\n    getAssociatedCenters = (centersList) => {\r\n        let centers_list = [];\r\n        centersList && centersList.length > 0 && centersList.map((item) => {\r\n            centers_list.push(item?.qr_details?.qr_id);\r\n        })\r\n        return centers_list.length > 0 ? centers_list.join(\", \") : \"\";\r\n    }\r\n\r\n    handleEditTechnician = (id) => {\r\n        this.props.history.push('/AddTechnician?edit=' + id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MUIDataTable\r\n                    title={\"Technicians\"}\r\n                    data={this.state.technicianList}\r\n                    columns={this.state.columns}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Technicians);","import axios from \"axios\";\r\nimport { BASE_URL } from \"../../config/config\";\r\n\r\nclass AdminApiModule {\r\n  constructor() {\r\n    this.base_url = BASE_URL;\r\n  }\r\n\r\n  getAllBroadCastedList() {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-broadCasted-ticket`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  updateTicket(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-ticket`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  createTicket(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/create-ticket`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n\r\n  getAllFeedBack() {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-feedBacks`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  getAllCenters(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-centers`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  login(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/login`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  getAllTickets(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-ticket`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  getSingleTicket(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-single-ticket`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  adminBroadCast(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/admin-broadcast`,\r\n        data: data\r\n\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  updatePincode(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-ticket`,\r\n        data: data\r\n\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  getAllTechnician(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-technician`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  addService(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/create-services`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  deleteService(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/delete-service`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  updateService(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-service`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  updateServiceStatus(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-service-status`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  addClient(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/add-client`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  getAllClients() {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-clients`,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  deleteClient(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/delete-client`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  adminUpdateCenter(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-center`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  adminUpdateTechnician(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-technician`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  getAllAvailableRoles(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-available-roles`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  adminAddRole(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/add-role`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  adminUpdateRole(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-role`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  getAllUsers(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin/get-all-users`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  adminCreateUser(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/create-user`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  adminRemoveUser(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/remove-user`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  getAllCenterOnBoarder(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}admin//get-all-onboarder`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  adminCreateCenterOnBoarder(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/create-centerOnBoarder`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  adminUpdateCenterOnBoarder(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/update-centerOnBoarder`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  uploadTicketsCsv(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}admin/upload-csv-for-ticket`,\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default AdminApiModule;","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\nexport default function TicketEditPincodePopup({\r\n    open,\r\n    handleClose,\r\n    isPincodeUpdating,\r\n    handleUpdatePincode,\r\n    isEditOpenTicketDetails\r\n}) {\r\n\r\n    const [newPincode, setnewPincode] = useState(isEditOpenTicketDetails?.address_details?.pincode)\r\n\r\n    const handleChange = (e) => {\r\n        setnewPincode(e.target.value)\r\n    }\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box sx={style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Edit pincode\r\n                </Typography>\r\n                <br />\r\n\r\n                <br />\r\n\r\n                <Box sx={{ minWidth: 120 }}>\r\n                    <Input value={newPincode} type=\"number\" onChange={handleChange} label=\"Enter pincode\" inputProps={ariaLabel} />\r\n\r\n                </Box>\r\n                <br />\r\n                <br />\r\n\r\n\r\n                <Button\r\n                    onClick={() => handleUpdatePincode(newPincode)}\r\n                    variant=\"contained\"\r\n                    disabled={isPincodeUpdating}\r\n                >\r\n                    {isPincodeUpdating ? \"updating \" : \"update pincode\"}\r\n                </Button>\r\n\r\n            </Box>\r\n\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DateRangePicker } from '@mui/x-date-pickers-pro/DateRangePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nexport default function BasicDateRangePicker({ onClickFilter, refreshData }) {\r\n  const [value, setValue] = React.useState([null, null]);\r\n\r\n  return (\r\n    <>\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DateRangePicker\r\n          startText=\"Start date\"\r\n          endText=\"End date\"\r\n          style={{ height: \"100px\" }}\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(startProps, endProps) => (\r\n            <React.Fragment>\r\n              <TextField {...startProps} />\r\n              <Box sx={{ mx: 2 }}> to </Box>\r\n              <TextField {...endProps} />\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n      </LocalizationProvider>\r\n      <br />\r\n      <Button onClick={() => onClickFilter(value)} style={{ marginBottom: \"30px\", marginRight: \"20px\" }} variant=\"contained\">Filter</Button>\r\n      <Button onClick={() => {\r\n        setValue([null, null])\r\n        // refreshData()\r\n      }} style={{ marginBottom: \"30px\" }} variant=\"contained\">Clear</Button>\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '65%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    height: '80%',\r\n    overflowY: 'scroll'\r\n};\r\n\r\nconst styleListDivider = {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    bgcolor: 'background.paper',\r\n};\r\n\r\nconst styleListItem = {\r\n    textAlignLeft: {\r\n        textAlign: 'left'\r\n    },\r\n    textAlignEnd: {\r\n        textAlign: 'end'\r\n    }\r\n}\r\n\r\nconst ListDividers = ({ roleObject }) => {\r\n    console.log(\"roleObject is\", roleObject)\r\n\r\n    return (\r\n        <List sx={styleListDivider} component=\"nav\" aria-label=\"mailbox folders\">\r\n            {Object.keys(roleObject).map((key) => (\r\n\r\n                <div>\r\n                    <ListItem button>\r\n                        \r\n                        <ListItemText sx={styleListItem.textAlignLeft}>Row {key}</ListItemText>\r\n                        {/* <ListItemText>{(roleObject[key]).toString()}</ListItemText> */}\r\n                        <ListItemText sx={styleListItem.textAlignLeft}>\r\n                            {roleObject[key]?.map((item)=>{\r\n                                return <>{item} <br/></>;\r\n                            }) }                           \r\n                        </ListItemText>\r\n\r\n\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            ))}\r\n\r\n        </List>\r\n    );\r\n}\r\nexport default function FileUploadErrors({ doesFileUploadErrorExists, handleCloseFileUploadErrors, errorsList }) {\r\n\r\nconsole.log(\"errorsList is\", errorsList);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={doesFileUploadErrorExists}\r\n                onClose={handleCloseFileUploadErrors}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <h2>Errors List</h2>\r\n                    <ListDividers roleObject={errorsList} />\r\n                </Box>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../../Styles/style.css';\r\nimport AdminApiModule from '../../components/AdminApi/Api/api';\r\nimport { Button } from '@mui/material';\r\nimport TicketEditPincodePopup from '../../components/AdminApi/ticketEditPincodePopup'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport BasicDateRangePicker from '../../components/common/datepicker'\r\nimport { withRouter } from \"react-router\";\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport FileUploadErrors from '../../components/FileUploadErrors';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n};\r\n\r\nclass Tickets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticketsList: [],\r\n            columns: [\r\n                {\r\n                    name: \"Created_at\",\r\n                    label: \"Created on\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"ticket_id\",\r\n                    label: \"Ticket Id\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"center_id\",\r\n                    label: \"Assigned Center\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"technician_id\",\r\n                    label: \"Assigned technician\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"service_required\",\r\n                    label: \"Service Required\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"specific_requirements\",\r\n                    label: \"Specific  Requirements\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"name\",\r\n                    label: \"Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"phone\",\r\n                    label: \"Phone\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"address\",\r\n                    label: \"Address\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"pincode\",\r\n                    label: \"Pincode\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"createdAt\",\r\n                    label: \"Created At\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"bstatus\",\r\n                    label: \"Broadcast status\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"tstatus\",\r\n                    label: \"Ticket status\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"tcreatedby\",\r\n                    label: \"ticket created by\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"action\",\r\n                    label: \"Actions\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            console.log({\r\n                                value, tableMeta, updateValue\r\n                            })\r\n                            return <>\r\n                                {\r\n                                    value.broadcast_status == \"no_match_found\" ? <>\r\n                                        <Button style={{ marginRight: \"10px\" }} onClick={() => this.handleOpenEditPincodePopup(value)} variant=\"contained\" >Edit Pincode</Button>\r\n\r\n                                        <Button variant=\"contained\" onClick={() => this.handleBroadCastTicket(value)}  >BroadCast</Button>\r\n\r\n                                    </> : \"\"\r\n                                }\r\n                                <Button variant=\"contained\" onClick={() => this.handleViewTicket(value?._id)}  >View Ticket</Button>\r\n                                <Button variant=\"contained\" onClick={() => this.handleEditTicket(value?._id)}  >Edit Ticket</Button>\r\n\r\n                            </>\r\n                        }\r\n                    }\r\n                },\r\n            ],\r\n            isEditOpenAddressPincode: false,\r\n            isEditOpenTicketDetails: {},\r\n            isPincodeUpdating: false,\r\n\r\n            isLoading: false,\r\n\r\n            doesFileUploadErrorExists: false,\r\n            errorsList: {}\r\n        };\r\n    }\r\n\r\n    handleEditTicket = (id) => {\r\n        this.props.history.push('/admin-ticket?edit=' + id)\r\n\r\n    }\r\n\r\n    handleViewTicket = (id) => {\r\n        this.props.history.push('/view-ticket?ticketId=' + id)\r\n\r\n    }\r\n\r\n\r\n    onClickFilter = (value) => {\r\n        this.startLoading()\r\n\r\n        let payload = {\r\n            start_date: value[0],\r\n            end_date: value[1]\r\n        }\r\n\r\n        new AdminApiModule().getAllTickets(payload).then(res => {\r\n            let parsedData = [];\r\n            if (res?.data?.length) {\r\n                parsedData = this.getParsedData(res.data);\r\n            }\r\n            this.setState({\r\n                ticketsList: parsedData\r\n            })\r\n\r\n            this.stopLoading()\r\n        }).catch(err => {\r\n            this.stopLoading()\r\n\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    startLoading = () => {\r\n        this.setState({ isLoading: true });\r\n    }\r\n\r\n    stopLoading = () => {\r\n        this.setState({ isLoading: false });\r\n    }\r\n\r\n    handleBroadCastTicket = (value) => {\r\n        let payload = {\r\n            ticket_obj_id: value?._id\r\n\r\n        }\r\n        new AdminApiModule().adminBroadCast(payload).then(res => {\r\n            this.getAllTickets();\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    handleOpenEditPincodePopup = (value) => {\r\n        this.setState({\r\n            isEditOpenAddressPincode: true,\r\n            isEditOpenTicketDetails: value\r\n        })\r\n    }\r\n\r\n    handleCloseEditPincodePopup = () => {\r\n        this.setState({\r\n            isEditOpenAddressPincode: false,\r\n            isEditOpenTicketDetails: {}\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.getAllTickets();\r\n    }\r\n\r\n    getFormattedAddress = (addressObject) => {\r\n        let addressLine = addressObject?.house_number + ', ' + addressObject?.locality + ', ' +\r\n            addressObject?.city + ', ' + addressObject?.state;\r\n        return addressLine;\r\n    }\r\n\r\n    getParsedData = (data) => {\r\n        let parsedData = data?.map((item) => {\r\n            return {\r\n                Created_at: moment(item?.createdAt).format(\r\n                    'Do MMM, hh:ss A',\r\n                ),\r\n                ticket_id: item?.ticket_id || '-',\r\n                center_id: item?.assigned_ids?.assigned_center_id?.center_name,\r\n                technician_id: item?.assigned_ids?.assigned_technician_id?.personal_details?.name,\r\n                service_required: item?.service_provided_for?.service_name,\r\n                name: item.personal_details.name,\r\n                phone: item.personal_details.primary_phone.mobile_number,\r\n                address: this.getFormattedAddress(item?.address_details),\r\n                pincode: item.address_details.pincode,\r\n                createdAt: new Date(item?.createdAt).toLocaleDateString('en-us', { year: \"numeric\", month: \"short\", day: \"numeric\" }),\r\n                specific_requirements: item?.specific_requirement ? item?.specific_requirement : \"-\",\r\n                bstatus: item?.broadcast_status,\r\n                tstatus: item?.ticket_status,\r\n                tcreatedby: item?.ticket_created_by,\r\n                action: item\r\n            }\r\n        });\r\n\r\n        return parsedData;\r\n    }\r\n\r\n    getAllTickets() {\r\n\r\n        this.startLoading()\r\n\r\n        new AdminApiModule().getAllTickets().then(res => {\r\n            let parsedData = [];\r\n            if (res?.data?.length) {\r\n                parsedData = this.getParsedData(res.data);\r\n            }\r\n            this.setState({\r\n                ticketsList: parsedData\r\n            })\r\n\r\n            this.stopLoading()\r\n        }).catch(err => {\r\n            this.stopLoading()\r\n\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleUpdatePincode = (newPincode) => {\r\n        if (!newPincode) {\r\n            return\r\n        }\r\n        let payload = {\r\n            address_details: {\r\n                pincode: newPincode\r\n            },\r\n            ticket_obj_id: this.state.isEditOpenTicketDetails?._id\r\n\r\n        }\r\n\r\n        this.setState({ isPincodeUpdating: true })\r\n        new AdminApiModule().updatePincode(payload).then(res => {\r\n            this.setState({ isPincodeUpdating: false })\r\n            this.getAllTickets();\r\n            this.handleCloseEditPincodePopup()\r\n        }).catch(err => {\r\n            this.setState({ isPincodeUpdating: false })\r\n        })\r\n\r\n    }\r\n\r\n    onUploadCsvFile = (event, stateValue) => {\r\n        let files = event.target.files;\r\n        let aadharSideName = event.target.name;\r\n        let fileOriginalName = files[0]?.name?.split('.')[0];\r\n        console.log('files', files, aadharSideName, fileOriginalName, typeof (fileOriginalName));\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append(\r\n            \"ticketsCsvFile\",\r\n            files[0],\r\n            fileOriginalName\r\n        );\r\n\r\n        new AdminApiModule().uploadTicketsCsv(formData).then(res => {\r\n            console.log(\"res is\", res);\r\n            if(res && res.data && res.data.doesErrorExists){\r\n                this.setState({ doesFileUploadErrorExists: true, errorsList: res.data.errorRowWise });\r\n\r\n            } else {\r\n                this.getAllTickets();\r\n            }\r\n            // this.setState({ [stateValue]: res.data?.fileSavedUrl }, () => {\r\n            //     console.log(this.state, \"sssssss\", stateValue)\r\n            // });\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleCloseFileUploadErrors = () => {\r\n        this.setState({ doesFileUploadErrorExists: false, errorsList: {} })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isEditOpenAddressPincode && <TicketEditPincodePopup\r\n                    open={this.state.isEditOpenAddressPincode}\r\n                    isPincodeUpdating={this.state.isPincodeUpdating}\r\n                    handleUpdatePincode={this.handleUpdatePincode}\r\n                    handleClose={this.handleCloseEditPincodePopup}\r\n                    isEditOpenTicketDetails={this.state.isEditOpenTicketDetails}\r\n                />}\r\n\r\n                <Backdrop\r\n                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={this.state.isLoading}\r\n                    onClick={this.stopLoading}\r\n                >\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n\r\n\r\n\r\n                {\r\n                    this.props.reduxState?.adminDetails?.role_id?.permissions?.view_ticket?.full_access ? <>\r\n\r\n\r\n                        <Grid container  >\r\n                            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n\r\n                                <BasicDateRangePicker\r\n                                    onClickFilter={this.onClickFilter}\r\n                                    refreshData={this.getAllTickets}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <div className=\"aadhar-upload-button\">\r\n                                    <div>\r\n                                        <label htmlFor=\"contained-button-file\">\r\n                                            <Input name=\"ticketsCsvFile\"\r\n                                                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                                                id=\"contained-button-file\" type=\"file\" onChange={(e) => this.onUploadCsvFile(e)} />\r\n                                            <Button variant=\"contained\" component=\"span\">\r\n                                                Upload Tickets File\r\n                                            </Button>\r\n                                        </label>\r\n                                        <div>\r\n                                            <div>Upload csv file for tickets</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <MUIDataTable\r\n                            title={\"Tickets\"}\r\n                            data={this.state.ticketsList}\r\n                            columns={this.state.columns}\r\n                            options={options}\r\n                        />\r\n                        \r\n                        {this.state.doesFileUploadErrorExists &&\r\n                            <FileUploadErrors doesFileUploadErrorExists={this.state.doesFileUploadErrorExists}\r\n                                errorsList={this.state.errorsList}\r\n                                handleCloseFileUploadErrors={this.handleCloseFileUploadErrors}\r\n                            />\r\n                        }\r\n\r\n                    </> : \"No permission , contact admin\"\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    reduxState: state.userReducer,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(Tickets));","export const PLEASE_ENTER_MOBILE_NUMBER = 'Please enter mobile number'\r\nexport const MOBILE_NUMBER_TEN_CHARACTERS = 'Mobile number should be exact 10 numbers'\r\nexport const OTP_SENT_SUCCESSFULLY = 'Otp is sent successfully'\r\nexport const OTP_NOT_ENTERED = 'Otp is not entered'\r\nexport const LOGGED_IN_SUCCESSFULLY = 'Logged in successfully'","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { setLoginDetails, setLogoutDetails } from '../../store/UserStore/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst drawerWidth = 240;\r\n\r\nlet drawerItemsResponsive = [\r\n    {\r\n        name: 'Dashboard',\r\n        path: '/center-dashboard'\r\n    },\r\n    {\r\n        name: 'Technicians',\r\n        path: '/Technicians'\r\n    },\r\n    {\r\n        name: 'Tickets',\r\n        path: '/tickets-center'\r\n    },\r\n    {\r\n        name: 'AddTechnician',\r\n        path: '/AddTechnician'\r\n    },\r\n    {\r\n        name: 'Ticket created by you and broadcasted',\r\n        path: '/ticket-created-by-you'\r\n    },\r\n    {\r\n        name: 'AddTicket',\r\n        path: '/AddTicket'\r\n    }, {\r\n        name: 'New Tickets',\r\n        path: '/brodcast-requests'\r\n    }, {\r\n        name: 'Payments',\r\n        path: '/payments'\r\n    }\r\n]\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const { window } = props;\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const globalState = useSelector((state) => state.userReducer)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const drawer = (\r\n        <div>\r\n            <Toolbar />\r\n            <Divider />\r\n            <List>\r\n                {drawerItemsResponsive.map((text, index) => (\r\n                    <ListItem onClick={() => {\r\n\r\n                        history.push(text.path)\r\n\r\n                    }} button key={text.name}>\r\n                        <ListItemIcon>\r\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text.name} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem onClick={() => {\r\n\r\n                    onClickLogout()\r\n\r\n                }} button>\r\n                    <ListItemIcon>\r\n                        {<InboxIcon />}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={\"Logout\"} />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const onClickLogout = () => {\r\n        dispatch(\r\n            setLoginDetails({\r\n                userDetails: {},\r\n                isUserLoggedIn: false,\r\n                userTokens: {\r\n                    accessToken: \"\",\r\n                },\r\n            }),\r\n        )\r\n\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                sx={{\r\n                    width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n                    ml: { sm: `${drawerWidth}px` },\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        sx={{ mr: 2, display: { sm: 'none' } }}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\">\r\n                        Welcome {globalState.userDetails.center_name}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box\r\n                component=\"nav\"\r\n                sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n                aria-label=\"mailbox folders\"\r\n            >\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Drawer\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    open={mobileOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                    }}\r\n                    sx={{\r\n                        display: { xs: 'block', sm: 'none' },\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    sx={{\r\n                        display: { xs: 'none', sm: 'block' },\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                    open\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material'\r\n\r\nimport CenterRegistrationApi from '../components/centerRegistration/Api/api'\r\n\r\nimport { PLEASE_ENTER_MOBILE_NUMBER, MOBILE_NUMBER_TEN_CHARACTERS, OTP_SENT_SUCCESSFULLY, OTP_NOT_ENTERED, LOGGED_IN_SUCCESSFULLY } from '../components/centerRegistration/Api/const'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport NavBar from '../components/NavBar/navbar'\r\n/**\r\n * redux -> import details\r\n */\r\nimport { setLoginDetails, setLogoutDetails } from '../store/UserStore/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setLoginDetails as adminSetLoginDetails } from '../store/AdminStore/action'\r\n\r\nconst styles = {\r\n    layout: {\r\n        width: 400,\r\n        textAlign: 'center',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        margin: 'auto',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n    inputBox: {\r\n        width: 350,\r\n        textAlign: 'center',\r\n        marginTop: 10,\r\n\r\n    },\r\n    btnLayout: {\r\n        width: 350,\r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        height: 50,\r\n        marginBottom: 20,\r\n    },\r\n    btnHorLayout: {\r\n        width: 350,\r\n        textAlign: 'center',\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        height: 40,\r\n        marginBottom: 20,\r\n    },\r\n}\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [mobileNumber, setMobileNumber] = useState(\"\");\r\n\r\n    const [snackBarValues, setSnackBarValues] = useState({\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n    })\r\n\r\n    const globalState = useSelector((state) => state.userReducer)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n\r\n    const showDialog = (open, type, msg) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: msg,\r\n            duration: 5000,\r\n            type: type\r\n        })\r\n\r\n    }\r\n\r\n    const closeDialog = (open = false) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: \"\",\r\n            duration: 5000,\r\n            type: \"\"\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleOnChangeMobile = (e) => {\r\n        let value = e.target.value\r\n        console.log(value.length, \" value \")\r\n        if (value.length > 10) {\r\n            return\r\n        }\r\n        setMobileNumber(e.target.value);\r\n    }\r\n\r\n\r\n    const [isOtpSent, setIsOtpSent] = useState(false)\r\n    const [otpEntered, setOtpEntered] = useState('')\r\n    const [isOtpSending, setIsOtpSending] = useState(false)\r\n    const [isLoggingIn, setIsLoggingIn] = useState(false)\r\n\r\n    const handleOnChangeOtp = (e) => {\r\n        setOtpEntered(e.target.value)\r\n    }\r\n\r\n    const onClickSendOtp = () => {\r\n\r\n        if (!mobileNumber) {\r\n            showDialog(true, \"error\", PLEASE_ENTER_MOBILE_NUMBER)\r\n            return\r\n        }\r\n\r\n        if (!(mobileNumber.toString().length == 10)) {\r\n            showDialog(true, \"error\", MOBILE_NUMBER_TEN_CHARACTERS)\r\n            return\r\n\r\n        }\r\n\r\n        let payload = {\r\n            country_code: \"+91\",\r\n            mobile_number: mobileNumber\r\n        }\r\n        let params = {\r\n            action: \"login\"\r\n        }\r\n\r\n        setIsOtpSending(true)\r\n\r\n        new CenterRegistrationApi().sendOtp(payload, params).then(res => {\r\n\r\n            showDialog(true, \"success\", OTP_SENT_SUCCESSFULLY)\r\n            setIsOtpSent(true)\r\n            setIsOtpSending(false)\r\n        }).catch(err => {\r\n            console.log(err)\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n            setIsOtpSending(false)\r\n\r\n\r\n        })\r\n    }\r\n\r\n    const onClickLogin = () => {\r\n\r\n        if (!otpEntered) {\r\n            showDialog(true, \"error\", OTP_NOT_ENTERED)\r\n            return\r\n        }\r\n\r\n        let payload = {\r\n            country_code: \"+91\",\r\n            mobile_number: mobileNumber,\r\n            otp: otpEntered\r\n        }\r\n        setIsLoggingIn(true)\r\n\r\n        new CenterRegistrationApi().loginCenter(payload).then(res => {\r\n\r\n            showDialog(true, \"success\", LOGGED_IN_SUCCESSFULLY)\r\n            dispatch(\r\n                setLoginDetails({\r\n                    userDetails: res.data.centerDetails,\r\n                    isUserLoggedIn: true,\r\n                    userTokens: {\r\n                        accessToken: res.data.token,\r\n                    },\r\n                    centerDetailsPopulated: res?.data?.populatedCenterDetails\r\n                }),\r\n            )\r\n            history.push('/brodcast-requests')\r\n\r\n            setIsOtpSent(true)\r\n            setIsLoggingIn(false)\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n            setIsLoggingIn(false)\r\n\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card style={styles.layout} sx={{ minWidth: 200 }}>\r\n\r\n            {\r\n                snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={closeDialog}>\r\n                    <Alert onClose={closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                        {snackBarValues.msg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n\r\n            {/* <NavBar /> */}\r\n\r\n            <CardContent>\r\n                <Typography sx={{ fontSize: 25 }} color=\"text.secondary\" align=\"center\" gutterBottom>\r\n                    Login\r\n                </Typography>\r\n                <TextField\r\n                    // helperText=\"Enter mobile\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"Enter registered Phone Number *\"\r\n                    style={styles.inputBox}\r\n                    type=\"number\"\r\n                    disabled={isOtpSent}\r\n                    onChange={handleOnChangeMobile}\r\n                    value={mobileNumber}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Typography >\r\n                                    +91\r\n                                </Typography>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n\r\n                {\r\n                    isOtpSent && <>\r\n                        <TextField\r\n                            // helperText=\"Enter Otp\"\r\n                            id=\"demo-helper-text-misaligned\"\r\n                            label=\"Enter Otp\"\r\n                            style={styles.inputBox}\r\n                            type=\"number\"\r\n                            onChange={handleOnChangeOtp}\r\n                        />\r\n                    </>\r\n                }\r\n            </CardContent>\r\n            <CardActions>\r\n                {!isOtpSent && <Button style={styles.btnLayout}\r\n                    onClick={() => onClickSendOtp()}\r\n                    disabled={isOtpSending}\r\n                    variant=\"contained\">{isOtpSending ? \"Sending otp\" : \"Send otp\"}\r\n                </Button>}\r\n                {isOtpSent && <Button style={styles.btnHorLayout}\r\n                    onClick={() => onClickSendOtp()}\r\n                    disabled={isOtpSending}\r\n                    variant=\"contained\">\r\n                    {isOtpSending ? \"Resending\" : \"Resend otp\"}</Button>}\r\n\r\n                {isOtpSent && <Button style={styles.btnHorLayout}\r\n                    onClick={() => onClickLogin()}\r\n                    disabled={isLoggingIn}\r\n                    variant=\"contained\">\r\n                    {isLoggingIn ? \"Logging In , please wait\" : \"Login\"}</Button>}\r\n\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material'\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nimport AdminApi from './Api/api'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nexport default function ViewActions({\r\n    isAuthorizedForPopupOpen,\r\n    clientsList,\r\n    toggleAuthorizedForPopup,\r\n    saveAuthorizedCenters\r\n}) {\r\n\r\n    const [centersSelected, setCentersSelected] = React.useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        let value = event.target.value;\r\n        setCentersSelected(value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={isAuthorizedForPopupOpen}\r\n                onClose={toggleAuthorizedForPopup}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Authorized Center For Clients\r\n                    </Typography>\r\n                    <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                        <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                            <InputLabel id=\"demo-simple-select-helper-label\">Authorized For</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-helper-label\"\r\n                                id=\"demo-simple-select-helper\"\r\n                                label=\"Authorized For\"\r\n                                name=\"centersSelected\"\r\n                                onChange={handleChange}\r\n                                value={centersSelected}\r\n                                multiple\r\n                            // error={isFormValid && !centersSelected}\r\n\r\n                            >\r\n                                {clientsList?.map(ite => {\r\n                                    return <MenuItem key={ite._id} value={ite._id}>\r\n                                        {ite.client_name}\r\n                                    </MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid style={stylesCss.paddingInnerGrids} item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => saveAuthorizedCenters(centersSelected)}\r\n                            disabled={!centersSelected}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../../Styles/style.css';\r\nimport AdminApiModule from '../../components/AdminApi/Api/api';\r\nimport ViewActions from '../../components/AdminApi/ViewActions';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\nimport BasicDateRangePicker from '../../components/common/datepicker'\r\nimport { withRouter } from \"react-router\";\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { connect } from 'react-redux';\r\n\r\nconst options = {\r\n  filterType: 'dropdown',\r\n};\r\n\r\nconst activeStatus = {\r\n  \"2\": \"DRAFTED\",\r\n  \"-1\": \"IN_ACTIVE\",\r\n  \"1\": \"ACTIVE\",\r\n  \"0\": \"DELETED\"\r\n}\r\n\r\nclass Centers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        // {\r\n        //     name: \"center_id\",\r\n        //     label: \"Center Id\",\r\n        //     options: {\r\n        //         filter: true,\r\n        //         sort: true,\r\n        //     }\r\n        // },\r\n        {\r\n          name: \"center_name\",\r\n          label: \"Name\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"phone\",\r\n          label: \"Phone\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"qrCode\",\r\n          label: \"QR Code\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"pincode\",\r\n          label: \"Primary Pincode\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"additional_pincode\",\r\n          label: \"Secondary Pincode\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"primary_services\",\r\n          label: \"Primary Skill\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"secondary_services\",\r\n          label: \"Secondary Skill\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"status\",\r\n          label: \"Status\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"createdAt\",\r\n          label: \"Created At\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"onboarded_by\",\r\n          label: \"Onboarded By\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"authorizedFor\",\r\n          label: \"Authorized For Clients\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"closedTickets\",\r\n          label: \"Total ticket closed\",\r\n          options: {\r\n            filter: true,\r\n            sort: false,\r\n          }\r\n        },\r\n        {\r\n          name: \"action\",\r\n          label: \"Action\",\r\n          options: {\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n              return <>\r\n                {\r\n                  <>\r\n                    <Button className=\"text-transform-none\" variant=\"contained\"\r\n                      onClick={() => this.toggleAuthorizedForPopup(value._id)}>\r\n                      Authorized For\r\n                    </Button>\r\n\r\n                    <Button className=\"text-transform-none\" variant=\"contained\"\r\n                      onClick={() => this.redirectToEditCenter(value._id)}>\r\n                      Edit\r\n                    </Button>\r\n                  </>\r\n                }\r\n\r\n              </>\r\n            }\r\n          }\r\n        },\r\n      ],\r\n      centersList: [],\r\n      isAuthorizedForPopupOpen: false,\r\n      clientsList: [],\r\n      selectedCenterId: '',\r\n      isLoading: false,\r\n      toast: {\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n\r\n      },\r\n    };\r\n  }\r\n\r\n  redirectToEditCenter(id) {\r\n    this.props.history.push('/add-center?edit=' + id)\r\n\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(this.props, \" set props \")\r\n    this.getAllCenters();\r\n    this.getAllClients();\r\n  }\r\n\r\n  onClickFilter = (value) => {\r\n\r\n    let payload = {\r\n      start_date: value[0],\r\n      end_date: value[1]\r\n    }\r\n\r\n    new AdminApiModule().getAllCenters(payload).then(res => {\r\n      let parsedData = [];\r\n      if (res && res.data && res.data.length > 0) {\r\n        parsedData = this.getParsedData(res.data);\r\n      }\r\n      this.setState({\r\n        centersList: parsedData\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  showDialog = (open, type, msg) => {\r\n    this.setState({\r\n      toast: {\r\n        open: open,\r\n        msg: msg,\r\n        duration: 5000,\r\n        type: type\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  closeDialog = (open = false) => {\r\n    this.setState({\r\n      toast: {\r\n        open: open,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  startLoading = () => {\r\n    this.setState({ isLoading: true });\r\n  }\r\n\r\n  stopLoading = () => {\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  getAllClients() {\r\n    new AdminApiModule().getAllClients().then(res => {\r\n      let parsedData = [];\r\n      if (res && res.data && res.data.length > 0) {\r\n        parsedData = res.data;\r\n      }\r\n\r\n      this.setState({\r\n        clientsList: parsedData\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  getFormattedServices = (services) => {\r\n    let secondary_services_list = [];\r\n    services && services.length > 0 && services.map((item) => {\r\n      secondary_services_list.push(item?.secondary_services_id?.service_name);\r\n    })\r\n    return secondary_services_list.length > 0 ? secondary_services_list.join(\", \") : \"\";\r\n  }\r\n\r\n  getFormattedClients = (clients) => {\r\n    let clients_list = [];\r\n    clients && clients.length > 0 && clients.map((item) => {\r\n      clients_list.push(item.client_name);\r\n    })\r\n    return clients_list.length > 0 ? clients_list.join(\", \") : \"\";\r\n  }\r\n\r\n  getParsedData = (data) => {\r\n    let dateFormat = { year: \"numeric\", month: \"short\", day: \"numeric\" };\r\n    let parsedData = data && data.length > 0 && data.map((item) => {\r\n      // console.log(\"this.getFormattedServices(item.services.secondary_services)\", this.getFormattedServices(item.services.secondary_services))\r\n      return {\r\n        // center_id: item._id,\r\n        center_name: item?.center_name,\r\n        phone: item?.personal_details?.phone?.mobile_number,\r\n        qrCode: item?.qr_details?.qr_id,\r\n        pincode: item?.address_details?.pincode,\r\n        additional_pincode: item?.address_details?.additional_pincode,\r\n        primary_services: item?.services?.primary_services?.service_name,\r\n        secondary_services: this?.getFormattedServices(item?.services?.secondary_services),\r\n        status: activeStatus[item.is_active],\r\n        createdAt: new Date(item?.createdAt)?.toLocaleDateString(\"en-US\", dateFormat),\r\n        onboarded_by: item?.onboarded_by?.name,\r\n        authorizedFor: this.getFormattedClients(item?.clients_ids_list),\r\n        action: item,\r\n        closedTickets: item?.count_details?.closed_ticket_count\r\n      }\r\n    });\r\n\r\n    return parsedData;\r\n  }\r\n\r\n  getAllCenters() {\r\n    this.startLoading()\r\n\r\n    new AdminApiModule().getAllCenters().then(res => {\r\n      let parsedData = [];\r\n      if (res && res.data && res.data.length > 0) {\r\n        parsedData = this.getParsedData(res.data);\r\n      }\r\n      this.setState({\r\n        centersList: parsedData\r\n      })\r\n      this.stopLoading()\r\n\r\n    }).catch(err => {\r\n      console.log(err)\r\n      this.stopLoading()\r\n\r\n    })\r\n  }\r\n\r\n  toggleAuthorizedForPopup = (centerId) => {\r\n    if (centerId) {\r\n      this.setState({ selectedCenterId: centerId })\r\n    }\r\n    this.setState(prevState => ({\r\n      isAuthorizedForPopupOpen: !prevState.isAuthorizedForPopupOpen\r\n    }));\r\n  }\r\n\r\n  saveAuthorizedCenters = (centersSelected) => {\r\n\r\n    let payload = {\r\n      center_obj_id: this.state.selectedCenterId,\r\n      clients_ids_list: [...centersSelected]\r\n    }\r\n\r\n    new AdminApiModule().adminUpdateCenter(payload).then(res => {\r\n\r\n      this.showDialog(true, \"success\", \"Center updated successfully\");\r\n\r\n      setTimeout(() => {\r\n        this.toggleAuthorizedForPopup();\r\n        this.getAllCenters();\r\n      }, 1000);\r\n    }).catch(err => {\r\n      console.log(err)\r\n      this.showDialog(true, \"error\", err?.response?.data?.message);\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    const { toast: snackBarValues } = this.state;\r\n    return (\r\n      <div>\r\n        {\r\n          snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n            <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n              {snackBarValues.msg}\r\n            </Alert>\r\n          </Snackbar>\r\n        }\r\n\r\n        <Backdrop\r\n          sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={this.state.isLoading}\r\n          onClick={this.stopLoading}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n\r\n\r\n        {\r\n          this.props.reduxState?.adminDetails?.role_id?.permissions?.view_center_details?.full_access ? <>\r\n            <>\r\n              <BasicDateRangePicker\r\n                onClickFilter={this.onClickFilter}\r\n              // refreshData={this.getAllTickets}\r\n              />\r\n              <MUIDataTable\r\n                title={\"Centers\"}\r\n                data={this.state.centersList}\r\n                columns={this.state.columns}\r\n                options={options}\r\n              />\r\n            </>\r\n          </>\r\n            : \"No access , contact admin\"\r\n        }\r\n\r\n\r\n\r\n        <ViewActions\r\n          isAuthorizedForPopupOpen={this.state.isAuthorizedForPopupOpen}\r\n          clientsList={this.state.clientsList}\r\n          toggleAuthorizedForPopup={this.toggleAuthorizedForPopup}\r\n          saveAuthorizedCenters={this.saveAuthorizedCenters}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  reduxState: state.userReducer,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(Centers));","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../Styles/style.css';\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport CenterRegistrationApi from '../components/centerRegistration/Api/api';\r\nimport CenterComponentApi from '../components/centerComponent/api/api';\r\nimport { IndianStates } from '../assets/IndianStates';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nconst ENGAGEMENT_TYPES = [\r\n    \"SALARIED\",\r\n    \"PART_TIME\",\r\n    \"FREELANCER\",\r\n    \"SELF_EMPLOYED\"\r\n];\r\n\r\nclass AddTechnician extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            whatsAppNumber: '',\r\n            email: '',\r\n            primaryService: '',\r\n            secondaryServices: {\r\n                secondary_services_id: \"\",\r\n                priority: \"\",\r\n            },\r\n            pincode: '',\r\n            additionalPinCode: '',\r\n            engagementType: '',\r\n            aadharCardNumber: '',\r\n\r\n            pan_card_document: \"\",\r\n            aadharBackImage: \"\",\r\n\r\n            permanentAddress: '',\r\n            permanentCity: '',\r\n            permanentState: '',\r\n            permanentCountry: 'INDIA',\r\n            currentAddress: '',\r\n            currentCity: '',\r\n            currentState: '',\r\n            currentCountry: 'INDIA',\r\n            referenceFirstPerson: '',\r\n            referenceSecondPerson: '',\r\n            firstPersonPhoneNumber: '',\r\n            secondPersonPhoneNumber: '',\r\n            pan_number: '',\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n            servicesList: [],\r\n\r\n            isRegistering: false,\r\n            isEditDetailsExists: false,\r\n            doesTechnicianExists: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(this.props.reduxState.centerDetailsPopulated)\r\n\r\n        let listOfServices = [this.props.reduxState.centerDetailsPopulated?.services?.primary_services]\r\n\r\n        let secondary_services = this.props.reduxState.centerDetailsPopulated?.services?.secondary_services\r\n\r\n        if (secondary_services.length > 0) {\r\n            listOfServices.push(secondary_services[0].secondary_services_id)\r\n        }\r\n        var flags = [], output = [], l = listOfServices.length, i;\r\n        for (i = 0; i < l; i++) {\r\n            if (flags[listOfServices[i]._id]) continue;\r\n            flags[listOfServices[i]._id] = true;\r\n            output.push(listOfServices[i]);\r\n        }\r\n\r\n        console.log({ listOfServices, output });\r\n\r\n        this.setState({\r\n            servicesList: output\r\n        })\r\n\r\n        console.log(\"htese \", this.props)\r\n        let editTechnicianId = new URLSearchParams(this.props.location.search).get(\"edit\")\r\n\r\n        console.log(editTechnicianId, \"edit technician id\")\r\n\r\n        if (editTechnicianId != null) {\r\n            this.getTechnicianDetails(editTechnicianId)\r\n        }\r\n\r\n        // this.getAllServicesExists()\r\n    }\r\n\r\n    getAllServicesExists() {\r\n        new CenterRegistrationApi().getAllActiveServices().then(res => {\r\n            this.setState({\r\n                servicesList: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n\r\n        if (name === \"pincode\") {\r\n            if (value.length <= 6) {\r\n\r\n                this.setState({ pincode: value });\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (name === \"additionalPinCode\") {\r\n            if (value.length <= 6) {\r\n\r\n                this.setState({ additionalPinCode: value });\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (name === \"primaryService\") {\r\n            this.setState({\r\n                secondaryServices: {\r\n                    ...this.state.secondaryServices,\r\n                    secondary_services_id: value\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleChangeSecondaryServiceDetails = (e) => {\r\n\r\n        let { name, value } = e.target\r\n\r\n        this.setState({\r\n            secondaryServices: {\r\n                ...this.state.secondaryServices,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { name, whatsAppNumber, email, primaryService, secondaryServices, pincode, additionalPinCode, engagementType,\r\n            aadharCardNumber, permanentAddress, permanentCity, permanentState, permanentCountry, currentAddress, currentCity, currentState,\r\n            currentCountry, referenceFirstPerson, referenceSecondPerson, firstPersonPhoneNumber, secondPersonPhoneNumber,\r\n            pan_card_document, pan_number, aadharBackImage } = this.state;\r\n\r\n        if (referenceFirstPerson.length > 0 && referenceSecondPerson.length > 0 && referenceFirstPerson === referenceSecondPerson) {\r\n            this.showDialog(true, \"error\", \"Emergency contact and reference person name can not be same\");\r\n            return;\r\n        }\r\n        if (firstPersonPhoneNumber.length > 0 && secondPersonPhoneNumber.length > 0 && firstPersonPhoneNumber === secondPersonPhoneNumber) {\r\n            this.showDialog(true, \"error\", \"Emergency contact and reference person phone number can not be same\");\r\n            return;\r\n        }\r\n\r\n        if (!(name &&\r\n            whatsAppNumber &&\r\n            primaryService &&\r\n            secondaryServices.secondary_services_id &&\r\n            pincode &&\r\n            additionalPinCode &&\r\n            engagementType &&\r\n            this.state.pan_number &&\r\n            aadharCardNumber,\r\n            referenceFirstPerson, referenceSecondPerson, firstPersonPhoneNumber, secondPersonPhoneNumber\r\n        )) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n        if (!this.state.pan_card_document) {\r\n            this.showDialog(true, \"error\", \"Please upload your pan image\");\r\n            return\r\n        }\r\n\r\n        // if (!this.state.aadharBackImage) {\r\n        //     this.showDialog(true, \"error\", \"Please upload your adhar back image\");\r\n        //     return\r\n        // }\r\n\r\n        if (this.state.pan_number) {\r\n            var regpan = /^([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}?$/;\r\n\r\n            if (!(regpan.test(this.state.pan_number))) {\r\n                this.showDialog(true, \"error\", \"Please enter your valid pan number\");\r\n                return\r\n\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n\r\n\r\n\r\n        let payload = {\r\n            \"personal_details\": {\r\n                \"phone\": {\r\n                    \"country_code\": \"+91\",\r\n                    \"mobile_number\": whatsAppNumber\r\n                },\r\n                \"email\": email,\r\n                \"name\": name,\r\n            },\r\n            \"primary_services\": primaryService,\r\n            \"secondary_services\": [\r\n                {\r\n                    secondary_services_id: secondaryServices.secondary_services_id,\r\n                    priority: 1,\r\n                }\r\n            ],\r\n            \"service_area_main_pincode\": pincode,\r\n            \"service_area_secondary_pincode\": [additionalPinCode],\r\n            \"address_details_permanent\": {\r\n                \"address_line\": permanentAddress,\r\n                \"city\": permanentCity,\r\n                \"state\": permanentState,\r\n                \"country\": permanentCountry,\r\n            },\r\n            \"address_details_temporary\": {\r\n                \"address_line\": currentAddress,\r\n                \"city\": currentCity,\r\n                \"state\": currentState,\r\n                \"country\": currentCountry,\r\n            },\r\n            \"engagement_type\": engagementType,\r\n            \"document_details\": {\r\n                \"aadhar_card_document\": {\r\n                    \"front_side\": \"\",\r\n                    \"back_side\": aadharBackImage\r\n                },\r\n                \"pan_card_document\": pan_card_document,\r\n                \"aadhar_number\": aadharCardNumber,\r\n                \"pan_number\": pan_number\r\n            },\r\n            \"referenceDetails\": {\r\n                \"reference_person_name\": referenceFirstPerson,\r\n                \"reference_person_mobile\": firstPersonPhoneNumber\r\n            },\r\n            \"emergency_details\": {\r\n                \"emergency_person_name\": referenceSecondPerson,\r\n                \"emergency_person_phone\": secondPersonPhoneNumber\r\n            }\r\n        }\r\n\r\n        if (this.state.isEditDetailsExists) {\r\n            payload.technician_obj_id = this.getTechnicianObjIdForEdit();\r\n            payload.service_area_secondary_pincode = additionalPinCode;\r\n\r\n            \r\n            let updateObject = { ...payload }\r\n            // updateObject['personal_details.name'] = name || ''\r\n            // updateObject['personal_details.phone.mobile_number']=whatsAppNumber || ''\r\n            // updateObject['personal_details.email']=email || ''\r\n            // updateObject['services.primary_services'] = primaryService || ''\r\n            // updateObject['services.secondary_services'] = secondaryServices || ''\r\n            // updateObject['service_area_main_pincode'] = pincode || ''\r\n            // updateObject['service_area_secondary_pincode'] = [additionalPinCode] || ''\r\n            // updateObject['engagement_type'] = engagementType || ''\r\n            // updateObject['document_details.aadhar_number'] = aadharCardNumber || ''\r\n            // updateObject['document_details.pan_card_document'] = pan_card_document || ''\r\n            // updateObject['document_details.pan_number'] = pan_number || ''\r\n            // updateObject['address_details_permanent.address_line'] = permanentAddress || ''\r\n            // updateObject['address_details_permanent.city'] = permanentCity || ''\r\n            // updateObject['address_details_permanent.state'] = permanentState || ''\r\n            // updateObject['address_details_permanent.country'] = permanentCountry || ''\r\n            // updateObject['address_details_temporary.address_line'] = currentAddress || ''\r\n            // updateObject['address_details_temporary.city'] = currentCity || ''\r\n            // updateObject['address_details_temporary.state'] = currentState || ''\r\n            // updateObject['address_details_temporary.country'] = currentCountry || ''\r\n            // updateObject['referenceDetails.reference_person_name'] = referenceFirstPerson || ''\r\n            // updateObject['referenceDetails.reference_person_mobile'] = referenceSecondPerson || ''\r\n            // updateObject['emergency_details.emergency_person_name'] = firstPersonPhoneNumber || ''\r\n            // updateObject['emergency_details.emergency_person_phone'] = secondPersonPhoneNumber\r\n\r\n            new CenterComponentApi().centerUpdateTechnician(updateObject).then(res => {\r\n\r\n                this.showDialog(true, \"success\", \"Technician updated successfully\");\r\n\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n\r\n                this.props.history.push('/Technicians')\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.showDialog(true, \"error\", err?.response?.data?.message);\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        console.log(\"payload is\", payload);\r\n        new CenterComponentApi().createTechnician(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Technician created successfully  \");\r\n\r\n            this.setState({\r\n                isRegistering: false,\r\n\r\n                name: '',\r\n                whatsAppNumber: '',\r\n                email: '',\r\n                primaryService: '',\r\n                secondaryServices: {\r\n                    secondary_services_id: \"\",\r\n                    priority: \"\",\r\n                },\r\n                pincode: '',\r\n                additionalPinCode: '',\r\n                engagementType: '',\r\n                aadharCardNumber: '',\r\n\r\n                pan_card_document: \"\",\r\n                aadharBackImage: \"\",\r\n\r\n                permanentAddress: '',\r\n                permanentCity: '',\r\n                permanentState: '',\r\n                permanentCountry: 'INDIA',\r\n                currentAddress: '',\r\n                currentCity: '',\r\n                currentState: '',\r\n                currentCountry: 'INDIA',\r\n                referenceFirstPerson: '',\r\n                referenceSecondPerson: '',\r\n                firstPersonPhoneNumber: '',\r\n                secondPersonPhoneNumber: '',\r\n                pan_number: '',\r\n                isFormValid: false\r\n            })\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    onUploadImage = (event, stateValue) => {\r\n        let files = event.target.files;\r\n        let aadharSideName = event.target.name;\r\n        let fileOriginalName = files[0]?.name?.split('.')[0];\r\n        console.log('files', files, aadharSideName, fileOriginalName, typeof (fileOriginalName));\r\n\r\n        let file_identifier_name = 'TECHNICIAN_PAN_CARD';\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append(\r\n            \"aadhar\",\r\n            files[0],\r\n            fileOriginalName\r\n        );\r\n\r\n        new CenterRegistrationApi().uploadImage(formData, file_identifier_name).then(res => {\r\n            this.setState({ [stateValue]: res.data?.fileSavedUrl }, () => {\r\n                console.log(this.state, \"sssssss\", stateValue)\r\n            });\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getTechnicianObjIdForEdit() {\r\n        return new URLSearchParams(this.props.location.search).get(\"edit\")\r\n    }\r\n\r\n    getTechnicianDetails(editTechnicianId) {\r\n        let payload = {\r\n            technician_obj_id: editTechnicianId\r\n        }\r\n        this.setState({\r\n            isEditDetailsExists: true,\r\n        })\r\n\r\n        new CenterComponentApi().getAllTechnician(payload).then(res => {\r\n            if (res?.data?.length) {\r\n                this.setState({\r\n                    doesTechnicianExists: true,\r\n                })\r\n\r\n                this.updateTechnicianDetails(res?.data?.[0])\r\n            }\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getSecondaryServicesFormatted(sArr) {\r\n        let result = {};\r\n        if (sArr && sArr.length > 0) {\r\n            result['secondary_services_id'] = sArr[0]?.secondary_services_id?._id\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    updateTechnicianDetails(technicianDetails) {\r\n        console.log(\"technicianDetails are\", technicianDetails?.services?.primary_services?._id,\r\n        this.getSecondaryServicesFormatted(technicianDetails?.services?.secondary_services))\r\n        this.setState({\r\n            name: technicianDetails?.personal_details?.name,\r\n            whatsAppNumber: technicianDetails?.personal_details?.phone?.mobile_number,\r\n            email: technicianDetails?.personal_details?.email,\r\n            primaryService: technicianDetails?.services?.primary_services?._id,\r\n            secondaryServices: this.getSecondaryServicesFormatted(technicianDetails?.services?.secondary_services),\r\n            pincode: technicianDetails?.service_area_main_pincode,\r\n            additionalPinCode: technicianDetails?.service_area_secondary_pincode,\r\n            engagementType: technicianDetails?.engagement_type,\r\n            pan_number: technicianDetails?.document_details?.pan_number,\r\n            pan_card_document: technicianDetails?.document_details?.pan_card_document,\r\n            aadharCardNumber: technicianDetails?.document_details?.aadhar_number,\r\n            permanentAddress: technicianDetails?.address_details_permanent?.address_line,\r\n            permanentCity: technicianDetails?.address_details_permanent?.city,\r\n            permanentState: technicianDetails?.address_details_permanent?.state,\r\n            permanentCountry: technicianDetails?.address_details_permanent?.country,\r\n            currentAddress: technicianDetails?.address_details_temporary?.address_line,\r\n            currentCity: technicianDetails?.address_details_temporary?.city,\r\n            currentState: technicianDetails?.address_details_temporary?.state,\r\n            currentCountry: technicianDetails?.address_details_temporary?.country,\r\n            referenceFirstPerson: technicianDetails?.referenceDetails?.reference_person_name,\r\n            referenceSecondPerson: technicianDetails?.referenceDetails?.reference_person_mobile,\r\n            firstPersonPhoneNumber: technicianDetails?.emergency_details?.emergency_person_name,\r\n            secondPersonPhoneNumber: technicianDetails?.emergency_details?.emergency_person_phone\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { toast: snackBarValues, isFormValid,\r\n            name, whatsAppNumber, email, primaryService, secondaryServices, pincode, additionalPinCode, engagementType,\r\n            aadharCardNumber, permanentAddress, permanentCity, permanentState, permanentCountry, currentAddress, currentCity, currentState,\r\n            currentCountry, referenceFirstPerson, referenceSecondPerson, firstPersonPhoneNumber, secondPersonPhoneNumber } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">\r\n                    {this.state.isEditDetailsExists ? \"Update Technician\" : \"Add Technician\"}\r\n                </h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={12}>\r\n                            <TextField\r\n                                helperText=\"Please provide technician's name\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Name\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !name}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please provide technician's phone number\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"What's App Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"whatsAppNumber\"\r\n                                value={whatsAppNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !whatsAppNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Email\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                type=\"email\"\r\n                                onChange={this.handleChange}\r\n                            // error={isFormValid && !email}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Main Service You Offer / Need *</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Main Service You Offer / Need *\"\r\n                                    name=\"primaryService\"\r\n                                    onChange={this.handleChange}\r\n                                    // error={isFormValid && !primaryService}\r\n                                    value={primaryService}\r\n                                    error={isFormValid && !primaryService}\r\n\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite?._id}>\r\n                                            {ite?.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Other Service You Offer / Need *</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Other Service You Offer / Need *\"\r\n                                    name=\"secondary_services_id\"\r\n                                    onChange={this.handleChangeSecondaryServiceDetails}\r\n                                    // error={isFormValid && !secondaryServices.secondaryServices_id}\r\n                                    value={secondaryServices.secondary_services_id}\r\n                                    error={isFormValid && !secondaryServices.secondary_services_id}\r\n\r\n                                // multiple\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite?._id}>\r\n                                            {ite?.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Service Area Pincode (main)\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"pincode\"\r\n                                value={pincode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !pincode}\r\n                                type=\"number\"\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Additional Service Area Pincode (other)\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"additionalPinCode\"\r\n                                type=\"number\"\r\n                                value={additionalPinCode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !additionalPinCode}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Engagement Type</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Engagement Type\"\r\n                                    name=\"engagementType\"\r\n                                    onChange={this.handleChange}\r\n                                    // error={isFormValid && !secondaryServices.secondaryServices_id}\r\n                                    value={engagementType}\r\n                                    error={isFormValid && !engagementType}\r\n                                    required\r\n\r\n                                // multiple\r\n                                >\r\n                                    {ENGAGEMENT_TYPES?.map(ite => {\r\n                                        return <MenuItem value={ite}>\r\n                                            {ite}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Aadhar Card Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"aadharCardNumber\"\r\n                                value={aadharCardNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !aadharCardNumber}\r\n                                inputProps={{ maxLength: 12 }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <div className=\"aadhar-upload-button\">\r\n                                <div>\r\n                                    {\r\n                                        this.state.pan_card_document ? <img width=\"50px\" height=\"50px\"\r\n                                            src={this.state.pan_card_document} alt=\"adhar front\" /> : <>\r\n\r\n\r\n                                        </>\r\n                                    }\r\n                                    <label htmlFor=\"contained-button-file\">\r\n                                        <Input name=\"aadharFront\"\r\n                                            accept=\"image/jpeg, image/jpg\"\r\n                                            id=\"contained-button-file\" type=\"file\" onChange={(e) => this.onUploadImage(e, \"pan_card_document\")} />\r\n                                        <Button variant=\"contained\" component=\"span\">\r\n                                            Pan pic\r\n                                        </Button>\r\n                                    </label>\r\n                                    <div>\r\n                                        <div>Upload image from gallery</div>\r\n                                        <div>Max File Size (2 MB)</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        {/* <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <div className=\"aadhar-upload-button\">\r\n                                <div>\r\n                                    {\r\n                                        this.state.aadharBackImage ? <img width=\"50px\" height=\"50px\"\r\n                                            src={this.state.aadharBackImage} alt=\"adhar back\" /> : <>\r\n\r\n                                        </>\r\n                                    }\r\n\r\n                                    <label htmlFor=\"contained-button-file\">\r\n                                        <Input name=\"aadharBackImage\"\r\n                                            accept=\"image/jpeg, image/jpg\"\r\n                                            id=\"contained-button-file\"\r\n                                            type=\"file\"\r\n                                            onChange={(e) => this.onUploadImage(e, \"aadharBackImage\")} />\r\n                                        <Button variant=\"contained\" component=\"span\">\r\n                                            Aadhar Back image\r\n                                        </Button>\r\n                                    </label>\r\n                                    <div>\r\n                                        <div>Upload image from gallery</div>\r\n                                        <div>Max File Size (2 MB)</div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </Grid> */}\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your permanent address\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Permanent Address\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"permanentAddress\"\r\n                                value={permanentAddress}\r\n                                onChange={this.handleChange}\r\n                            // error={isFormValid && !permanentAddress}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your pan number\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Pan Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"pan_number\"\r\n                                value={this.state.pan_number}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !this.state.pan_number}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your permanent city\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Permanent City\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"permanentCity\"\r\n                                value={permanentCity}\r\n                                onChange={this.handleChange}\r\n                            // error={isFormValid && !permanentCity}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Permanent State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Permanent State\"\r\n                                    name=\"permanentState\"\r\n                                    onChange={this.handleChange}\r\n                                    value={permanentState}\r\n                                // error={isFormValid && !permanentState}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Permanent Country\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"permanentCountry\"\r\n                                value={permanentCountry}\r\n                                onChange={this.handleChange}\r\n                                // error={isFormValid && !permanentCountry}\r\n                                disabled\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your current address\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Current Address\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"currentAddress\"\r\n                                value={currentAddress}\r\n                                onChange={this.handleChange}\r\n                            // error={isFormValid && !currentAddress}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your current city\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Current City\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"currentCity\"\r\n                                value={currentCity}\r\n                                onChange={this.handleChange}\r\n                            // error={isFormValid && !currentCity}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Current State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Current State\"\r\n                                    name=\"currentState\"\r\n                                    onChange={this.handleChange}\r\n                                    value={currentState}\r\n                                // error={isFormValid && !currentState}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter your current country\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Current Country\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"currentCountry\"\r\n                                value={currentCountry}\r\n                                onChange={this.handleChange}\r\n                                // error={isFormValid && !currentCountry}\r\n                                disabled\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter emergency contact person\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Emergency Contact Person\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"referenceFirstPerson\"\r\n                                value={referenceFirstPerson}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !referenceFirstPerson}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter emergency contact person number\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Emergency Contact Person Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"firstPersonPhoneNumber\"\r\n                                value={firstPersonPhoneNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !firstPersonPhoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter reference second person\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Reference Second Person\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"referenceSecondPerson\"\r\n                                value={referenceSecondPerson}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !referenceSecondPerson}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                helperText=\"Please enter Second Person Phone Number\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Second Person Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"secondPersonPhoneNumber\"\r\n                                value={secondPersonPhoneNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !secondPersonPhoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >{this.state.isEditDetailsExists ? \"Update \" : \"Save\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reduxState: state.userReducer,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(AddTechnician));\r\n","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../Styles/style.css';\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n\r\n\r\nimport CenterRegistrationApi from '../components/centerRegistration/Api/api';\r\nimport CenterComponentApi from '../components/centerComponent/api/api';\r\nimport { IndianStates } from '../assets/IndianStates';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nconst AVAILABLE_TIME_PREFERENCES = [\r\n    'IMMEDIATELY',\r\n    'WITHIN_24_HOURS',\r\n    'SPECIFIC_DATE_AND_TIME',\r\n]\r\n\r\nclass AddTicket extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serviceRequired: '',\r\n            specificRequirement: '',\r\n            name: '',\r\n            phoneNumber: '',\r\n            alternatePhoneNumber: '',\r\n            houseNumber: '',\r\n            locality: '',\r\n            city: '',\r\n            state: '',\r\n            country: 'INDIA',\r\n            pincode: '',\r\n            timePreference: '',\r\n            offerCode: 'OniT 2022',\r\n            specific_date_time: new Date(),\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n            servicesList: [],\r\n\r\n            isRegistering: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllServicesExists()\r\n    }\r\n\r\n    getAllServicesExists() {\r\n        new CenterRegistrationApi().getAllServices().then(res => {\r\n            this.setState({\r\n                servicesList: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    onChangeSpecificDateAndTime(newValue) {\r\n        this.setState({ specific_date_time: newValue })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        if (name == \"pincode\") {\r\n            if (value.length <= 6) {\r\n                this.setState({ [name]: value })\r\n            }\r\n            return\r\n        }\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { serviceRequired, specificRequirement, name, phoneNumber, alternatePhoneNumber,\r\n            houseNumber, locality, city, state, country, pincode, timePreference, offerCode } = this.state;\r\n\r\n\r\n        if (!(serviceRequired &&\r\n            name &&\r\n            phoneNumber &&\r\n            houseNumber &&\r\n            pincode &&\r\n            timePreference &&\r\n            offerCode\r\n        )) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n\r\n        if (this.state.timePreference == \"SPECIFIC_DATE_AND_TIME\") {\r\n            if (!this.state.specific_date_time) {\r\n                this.showDialog(true, \"error\", \"Please fill in Specific date and time\")\r\n                return\r\n\r\n            }\r\n        }\r\n\r\n        let payload = {\r\n            personal_details: {\r\n                primary_phone: {\r\n                    country_code: \"+91\",\r\n                    mobile_number: phoneNumber\r\n                },\r\n                alternate_phone: {\r\n                    country_code: alternatePhoneNumber.length > 0 ? \"+91\" : \"\",\r\n                    mobile_number: alternatePhoneNumber\r\n                },\r\n                name: name,\r\n            },\r\n            specific_requirement: specificRequirement,\r\n            service_provided_for: serviceRequired,\r\n            address_details: {\r\n                house_number: houseNumber,\r\n                locality: locality,\r\n                city: city,\r\n                state: state,\r\n                pincode: pincode,\r\n                country: country,\r\n            },\r\n            time_preference: {\r\n                time_preference_type: timePreference,\r\n                specific_date_time: this.state.specific_date_time,\r\n            },\r\n            offers_applied: {\r\n                offer_code: offerCode\r\n            }\r\n        }\r\n\r\n        new CenterComponentApi().createTicket(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Ticket Created successfully\");\r\n\r\n            this.setState({\r\n                isRegistering: false,\r\n\r\n                serviceRequired: '',\r\n                specificRequirement: '',\r\n                name: '',\r\n                phoneNumber: '',\r\n                alternatePhoneNumber: '',\r\n                houseNumber: '',\r\n                locality: '',\r\n                city: '',\r\n                state: '',\r\n                country: 'INDIA',\r\n                pincode: '',\r\n                timePreference: '',\r\n                offerCode: '',\r\n            });\r\n\r\n            setTimeout(() => {\r\n                this.showDialog(true, \"info\", \"Add more ticket\");\r\n            }, 2000);\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues, isFormValid,\r\n            serviceRequired, specificRequirement, name, phoneNumber, alternatePhoneNumber,\r\n            houseNumber, locality, city, state, country, pincode, timePreference, offerCode } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">Add Ticket</h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Service You Required</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Service You Required\"\r\n                                    name=\"serviceRequired\"\r\n                                    onChange={this.handleChange}\r\n                                    value={serviceRequired}\r\n                                    error={isFormValid && !serviceRequired}\r\n\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Specific Requirement - it helps\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"specificRequirement\"\r\n                                value={specificRequirement}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !specificRequirement}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Name (Contact Person)\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"phoneNumber\"\r\n                                value={phoneNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !phoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Alternate Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"alternatePhoneNumber\"\r\n                                value={alternatePhoneNumber}\r\n                                onChange={this.handleChange}\r\n                                // error={isFormValid && !alternatePhoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"House Number / Street\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"houseNumber\"\r\n                                value={houseNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !houseNumber}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Locality\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"locality\"\r\n                                value={locality}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !locality}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"City\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"city\"\r\n                                value={city}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !city}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"State\"\r\n                                    name=\"state\"\r\n                                    onChange={this.handleChange}\r\n                                    value={state}\r\n                                    error={isFormValid && !state}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Country\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"country\"\r\n                                value={country}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !country}\r\n                                disabled\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Pincode\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"pincode\"\r\n                                type=\"number\"\r\n                                value={pincode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !pincode}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Time Preference</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Time Preference\"\r\n                                    name=\"timePreference\"\r\n                                    onChange={this.handleChange}\r\n                                    value={timePreference}\r\n                                    error={isFormValid && !timePreference}\r\n\r\n                                >\r\n                                    {AVAILABLE_TIME_PREFERENCES?.map(ite => {\r\n                                        return <MenuItem value={ite}>\r\n                                            {ite}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        {\r\n                            this.state.timePreference == \"SPECIFIC_DATE_AND_TIME\" ? <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n\r\n                                    <DateTimePicker\r\n                                        renderInput={(params) => <TextField {...params} />}\r\n                                        label=\"Select date and time\"\r\n                                        value={this.state.specific_date_time}\r\n                                        onChange={(newValue) => {\r\n                                            this.onChangeSpecificDateAndTime(newValue);\r\n                                        }}\r\n                                        minDate={new Date()}\r\n                                        minTime={new Date(0, 0, 0, 8)}\r\n                                        maxTime={new Date(0, 0, 0, 20)}\r\n                                    />\r\n                                </LocalizationProvider>\r\n\r\n                            </Grid> : \"\"\r\n                        }\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Offer Code\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"offerCode\"\r\n                                value={offerCode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !offerCode}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >SUBMIT\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTicket;\r\n","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport ViewActions from '../../components/AdminApi/ViewActions';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport '../../Styles/style.css';\r\n\r\nimport AdminApiModule from '../../components/AdminApi/Api/api';\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\nimport BasicDateRangePicker from '../../components/common/datepicker'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n};\r\n\r\nclass Technicians extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [\r\n                {\r\n                    name: \"name\",\r\n                    label: \"Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"email\",\r\n                    label: \"email\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"phone\",\r\n                    label: \"phone\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"profile_created_by\",\r\n                    label: \"profile created by\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"referenceDetails\",\r\n                    label: \"reference Details\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"address_details_permanent\",\r\n                    label: \"address details permanent\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"associatedWith\",\r\n                    label: \"Associated CenterCode\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"authorizedFor\",\r\n                    label: \"Authorized For Clients\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"action\",\r\n                    label: \"Action\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            return <>\r\n                                {\r\n                                    <>\r\n                                        <Button className=\"text-transform-none\" variant=\"contained\"\r\n                                            onClick={() => this.toggleAuthorizedForPopup(value._id)}>\r\n                                            Authorized For\r\n                                        </Button>\r\n                                    </>\r\n                                }\r\n\r\n                            </>\r\n                        }\r\n                    }\r\n                },\r\n            ],\r\n            technicianList: [],\r\n            isAuthorizedForPopupOpen: false,\r\n            clientsList: [],\r\n            selectedTechnicianId: '',\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n        };\r\n    }\r\n\r\n    onClickFilter = (value) => {\r\n\r\n        let payload = {\r\n            start_date: value[0],\r\n            end_date: value[1]\r\n        }\r\n\r\n        new AdminApiModule().getAllTechnician(payload).then(res => {\r\n\r\n            let mappedTechnician = res?.data?.map(ite => {\r\n                return {\r\n                    name: ite?.personal_details?.name,\r\n                    email: ite?.personal_details?.email,\r\n                    phone: ite?.personal_details?.phone?.country_code + ite?.personal_details?.phone?.mobile_number,\r\n                    profile_created_by: ite?.profile_created_by,\r\n                    referenceDetails: ite?.referenceDetails?.reference_person_name,\r\n                    address_details_permanent: ite?.address_details_permanent?.address_line + \"  \" + ite?.address_details_permanent?.city + \" \" + ite?.address_details_permanent?.country,\r\n                    associatedWith: this.getAssociatedCenters(ite?.center_id),\r\n                    authorizedFor: this.getFormattedClients(ite?.clients_ids_list),\r\n                    action: ite\r\n\r\n                }\r\n            })\r\n\r\n            this.setState({ technicianList: mappedTechnician })\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n\r\n        })\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getAllTechnicians();\r\n        this.getAllClients();\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getAllClients() {\r\n        new AdminApiModule().getAllClients().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.length > 0) {\r\n                parsedData = res.data;\r\n            }\r\n\r\n            this.setState({\r\n                clientsList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getFormattedClients = (clients) => {\r\n        let clients_list = [];\r\n        clients && clients.length > 0 && clients.map((item) => {\r\n            clients_list.push(item.client_name);\r\n        })\r\n        return clients_list.length > 0 ? clients_list.join(\", \") : \"\";\r\n    }\r\n\r\n    getAllTechnicians() {\r\n        new AdminApiModule().getAllTechnician().then(res => {\r\n\r\n            let mappedTechnician = res?.data?.map(ite => {\r\n                return {\r\n                    name: ite?.personal_details?.name,\r\n                    email: ite?.personal_details?.email,\r\n                    phone: ite?.personal_details?.phone?.country_code + ite?.personal_details?.phone?.mobile_number,\r\n                    profile_created_by: ite?.profile_created_by,\r\n                    referenceDetails: ite?.referenceDetails?.reference_person_name,\r\n                    address_details_permanent: ite?.address_details_permanent?.address_line + \"  \" + ite?.address_details_permanent?.city + \" \" + ite?.address_details_permanent?.country,\r\n                    associatedWith: this.getAssociatedCenters(ite?.center_id),\r\n                    authorizedFor: this.getFormattedClients(ite?.clients_ids_list),\r\n                    action: ite\r\n\r\n                }\r\n            })\r\n\r\n            this.setState({ technicianList: mappedTechnician })\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n\r\n        })\r\n    }\r\n\r\n    toggleAuthorizedForPopup = (technicianId) => {\r\n        if (technicianId) {\r\n            this.setState({ selectedTechnicianId: technicianId })\r\n        }\r\n        this.setState(prevState => ({\r\n            isAuthorizedForPopupOpen: !prevState.isAuthorizedForPopupOpen\r\n        }));\r\n    }\r\n\r\n    saveAuthorizedTechnicians = (techniciansSelected) => {\r\n        console.log(\"techniciansSelected is\", techniciansSelected);\r\n\r\n        let payload = {\r\n            technician_obj_id: this.state.selectedTechnicianId,\r\n            clients_ids_list: [...techniciansSelected]\r\n        }\r\n\r\n        console.log('payload is', payload);\r\n        new AdminApiModule().adminUpdateTechnician(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Technician updated successfully\");\r\n\r\n            setTimeout(() => {\r\n                this.toggleAuthorizedForPopup();\r\n                this.getAllTechnicians();\r\n            }, 1000);\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n        })\r\n\r\n    }\r\n\r\n    getAssociatedCenters = (centersList) => {\r\n        let centers_list = [];\r\n        centersList && centersList.length > 0 && centersList.map((item) => {\r\n            centers_list.push(item?.qr_details?.qr_id);\r\n        })\r\n        return centers_list.length > 0 ? centers_list.join(\", \") : \"\";\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n\r\n                {\r\n                    this.props.reduxState?.adminDetails?.role_id?.permissions?.view_technician_details?.full_access ?\r\n                        <>\r\n                            <BasicDateRangePicker\r\n                                onClickFilter={this.onClickFilter}\r\n                            // refreshData={this.getAllTickets}\r\n                            />\r\n                            <MUIDataTable\r\n                                title={\"Technicians\"}\r\n                                data={this.state.technicianList}\r\n                                columns={this.state.columns}\r\n                                options={options}\r\n                            />\r\n                        </>\r\n                        : \"No permission , contact admin\"\r\n\r\n                }\r\n\r\n                <ViewActions\r\n                    isAuthorizedForPopupOpen={this.state.isAuthorizedForPopupOpen}\r\n                    clientsList={this.state.clientsList}\r\n                    toggleAuthorizedForPopup={this.toggleAuthorizedForPopup}\r\n                    saveAuthorizedCenters={this.saveAuthorizedTechnicians}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reduxState: state.userReducer,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(Technicians))","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material'\r\n\r\nimport AdminApi from '../../components/AdminApi/Api/api'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/**\r\n * redux -> import details\r\n */\r\nimport { setLoginDetails, setLogoutDetails } from '../../store/AdminStore/action'\r\nimport { setLoginDetails as setLoginUserDetails } from '../../store/UserStore/action'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst styles = {\r\n    layout: {\r\n        width: \"40%\",\r\n        marginTop: \"20%\",\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n}\r\n\r\n\r\nexport default function AdminLogin() {\r\n\r\n    const [adminValues, setAdminValues] = useState({\r\n        user_name: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const [snackBarValues, setSnackBarValues] = useState({\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n    })\r\n\r\n    const globalState = useSelector((state) => state.userReducer)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n\r\n    const showDialog = (open, type, msg) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: msg,\r\n            duration: 5000,\r\n            type: type\r\n        })\r\n\r\n    }\r\n\r\n    const closeDialog = (open = false) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: \"\",\r\n            duration: 5000,\r\n            type: \"\"\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleChangeUserNamePassword = (name, value) => {\r\n        setAdminValues({\r\n            ...adminValues,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const [isLogginIn, setIsLoggingIn] = useState(false)\r\n\r\n    const onClickLogin = () => {\r\n        if (!adminValues.user_name) {\r\n            showDialog(true, \"error\", \"Please enter user name\")\r\n            return\r\n        }\r\n\r\n        if (!adminValues.password) {\r\n            showDialog(true, \"error\", \"Please enter password\")\r\n            return\r\n\r\n        }\r\n\r\n        let payload = {\r\n            user_name: adminValues.user_name,\r\n            password: adminValues.password\r\n        }\r\n\r\n        setIsLoggingIn(true)\r\n        new AdminApi().login(payload).then(res => {\r\n\r\n            setIsLoggingIn(false)\r\n            showDialog(true, \"success\", \"Admin login successful\")\r\n\r\n            dispatch(\r\n                setLoginDetails({\r\n                    adminDetails: res?.data?.adminDetails,\r\n                    isAdminLoggedIn: true,\r\n                    userTokens: {\r\n                        accessToken: res?.data?.token\r\n                    },\r\n                })\r\n            )\r\n\r\n            history.push('/Tickets')\r\n\r\n\r\n            // dispatch(\r\n            //     setLoginUserDetails({\r\n            //         userDetails: {},\r\n            //         isUserLoggedIn: false,\r\n            //         userTokens: {\r\n            //             accessToken: \"\",\r\n            //         },\r\n            //     }),\r\n            // )\r\n\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            setIsLoggingIn(false)\r\n\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Card style={styles.layout} sx={{ minWidth: 275 }}>\r\n\r\n            {\r\n                snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={closeDialog}>\r\n                    <Alert onClose={closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                        {snackBarValues.msg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n\r\n\r\n            <CardContent>\r\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                    Admin login\r\n                </Typography>\r\n                <TextField\r\n                    // helperText=\"Enter mobile\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"User Name\"\r\n                    style={styles.inputBox}\r\n                    type=\"text\"\r\n                    disabled={isLogginIn}\r\n                    onChange={(e) => handleChangeUserNamePassword(\"user_name\", e.target.value)}\r\n                />\r\n                <TextField\r\n                    // helperText=\"Enter mobile\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"Password\"\r\n                    style={styles.inputBox}\r\n                    type=\"password\"\r\n                    disabled={isLogginIn}\r\n                    onChange={(e) => handleChangeUserNamePassword(\"password\", e.target.value)}\r\n                />\r\n\r\n            </CardContent>\r\n            <CardActions>\r\n                {<Button\r\n                    onClick={() => onClickLogin()}\r\n                    disabled={isLogginIn}\r\n                    variant=\"contained\">\r\n                    {isLogginIn ? \"Logging In , please wait\" : \"Login\"}</Button>}\r\n\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const history = useHistory();\r\n\r\n    const globalState = useSelector((state) => state.userReducer)\r\n\r\n    console.log(globalState, \"global state\")\r\n\r\n\r\n    useEffect(() => {\r\n        if (!globalState?.isUserLoggedIn) {\r\n            history.push('/')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <Route {...rest} render={props => (\r\n            <Component  {...props } />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\r\n\r\n    const globalState = useSelector((state) => state.userReducer)\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if (globalState?.isUserLoggedIn) {\r\n            history.push('/center-dashboard')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const history = useHistory();\r\n\r\n    const globalState = useSelector((state) => state.AdminReducer)\r\n\r\n    console.log(globalState, \"global state\")\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(globalState, \"globalState\")\r\n        if (!globalState?.isAdminLoggedIn) {\r\n            history.push('/admin-login')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <Route {...rest} render={props => (\r\n            <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst AdminPrivate = ({ component: Component, restricted, ...rest }) => {\r\n\r\n    const globalState = useSelector((state) => state.AdminReducer)\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if (globalState?.isAdminLoggedIn) {\r\n            history.push('/admin-dashboard')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default AdminPrivate;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const history = useHistory();\r\n\r\n    const globalState = useSelector((state) => state.centerOnboardReducer)\r\n\r\n    console.log(globalState, \"global state\")\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(globalState, \"globalState\")\r\n        if (!globalState?.isCenterOnboardLoggedIn) {\r\n            history.push('/center-onboard-login')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <Route {...rest} render={props => (\r\n            <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default function AssignTechnician({\r\n    open,\r\n    handleClose,\r\n    technicianList,\r\n    isForChange,\r\n    handleAssignTechnician,\r\n    handleChangeTechnician,\r\n    isTechnicianAssigning\r\n}) {\r\n\r\n    const [technicianSelected, setTechnicianSelected] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value, \"llll\")\r\n        setTechnicianSelected(e.target.value)\r\n    }\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box sx={style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    {isForChange ? \"Change Technician\" : \"Assign Technician\"}\r\n                </Typography>\r\n                <br />\r\n\r\n                <br />\r\n\r\n                <Box sx={{ minWidth: 120 }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Choose Technician</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={technicianSelected}\r\n                            label=\"Choose Technician\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            {technicianList?.map(ite => {\r\n                                return <MenuItem value={ite?._id}>{ite?.personal_details?.name}</MenuItem>\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <br />\r\n                <br />\r\n\r\n\r\n                <Button\r\n                    onClick={() => {\r\n                        if (isForChange) {\r\n                            handleChangeTechnician(technicianSelected)\r\n                        } else {\r\n                            handleAssignTechnician(technicianSelected)\r\n                        }\r\n                    }}\r\n                    variant=\"contained\"\r\n                    disabled={isTechnicianAssigning}\r\n                >\r\n                    {isTechnicianAssigning ? \"Processing \" : isForChange ? \"Change Techician\" : \"Assign Techician\"}\r\n                </Button>\r\n\r\n            </Box>\r\n\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material'\r\n\r\nconst style = {\r\n    flex: 1,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n\r\n    },\r\n    dialogInputBox: {\r\n        height: 70,\r\n        padding: 10,\r\n        width: 300,\r\n\r\n    },\r\n    gridStyle: {\r\n\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\",\r\n        margin: 10,\r\n        justifyContent: \"center\"\r\n    },\r\n    dialogAlignBox: {\r\n\r\n    }\r\n\r\n}\r\n\r\nlet feedBackOptionList = [\r\n    \"Visit Done, Work Completed\",\r\n    \"Visited - Estimate Not Approved / Site Not Ready\",\r\n    \"Visited - Unit not Repairable /Special Skill, Tools, Authorisation required\",\r\n    \"Not Visited -Can’t Deliver Service - Phone not Pick/ Far Location\",\r\n    \"Not Visited - Customer Refused (Work Already Done /Not Needed / Site Not Ready)\",\r\n]\r\n\r\nexport default function AssignTechnician({\r\n    open,\r\n    handleClose,\r\n    handleCloseTicket\r\n}) {\r\n\r\n    const [closingTicketRemarks, setClosingTicketRemarks] = useState(\"\")\r\n    const [closingPrice, setClosingPrice] = useState(0)\r\n\r\n    const [snackBarValues, setSnackBarValues] = React.useState({\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n    })\r\n\r\n    const showDialog = (open, type, msg) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: msg,\r\n            duration: 5000,\r\n            type: type\r\n        })\r\n\r\n    }\r\n\r\n    const closeDialog = (open = false) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: \"\",\r\n            duration: 5000,\r\n            type: \"\"\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value, \"closingTicketRemarks\")\r\n        setClosingTicketRemarks(e.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={closeDialog}>\r\n                    <Alert onClose={closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                        {snackBarValues.msg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Add Closing Remarks\r\n                    </Typography>\r\n                    <Grid style={stylesCss.paddingInnerGrids} item>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-helper-label\"\r\n                            id=\"demo-simple-select-helper\"\r\n                            label=\"Closing Remarks\"\r\n                            placeholder=\"Please select\"\r\n                            name=\"closingTicketRemarks\"\r\n                            style={stylesCss.inputBox}\r\n\r\n                            onChange={(event) => handleChange(event)}\r\n                            value={closingTicketRemarks}\r\n\r\n\r\n                        >\r\n                            {feedBackOptionList?.map(ite => {\r\n                                return <MenuItem value={ite}>\r\n                                    {ite}\r\n                                </MenuItem>\r\n                            })}\r\n                        </Select>\r\n                        {/* <TextField\r\n                            id=\"demo-helper-text-misaligned\"\r\n                            label=\"Closing Remarks\"\r\n                            style={stylesCss.inputBox}\r\n                            name=\"closingTicketRemarks\"\r\n                            value={closingTicketRemarks}\r\n                            onChange={(event) => handleChange(event)}\r\n                        /> */}\r\n                    </Grid>\r\n                    <Grid style={stylesCss.paddingInnerGrids} item>\r\n                        <TextField\r\n                            id=\"demo-helper-text-misaligned\"\r\n                            label=\"Amount\"\r\n                            style={stylesCss.inputBox}\r\n                            name=\"closingTicketRemarks\"\r\n                            value={closingPrice}\r\n                            onChange={(event) => setClosingPrice(event.target.value)}\r\n                        />\r\n                    </Grid >\r\n                    <Grid style={stylesCss.paddingInnerGrids} item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => handleCloseTicket(closingTicketRemarks, closingPrice)}\r\n                            disabled={!closingTicketRemarks}\r\n                        >\r\n                            Close the ticket\r\n                        </Button>\r\n                    </Grid>\r\n                </Box >\r\n            </Modal >\r\n\r\n        </div >\r\n    )\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material'\r\n\r\nimport CenterApi from '../../components/centerComponent/api/api';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    margin: 'auto',\r\n    p: 2,\r\n};\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: 350,\r\n        textAlign: 'center',\r\n        height: 50,\r\n        margin: 20,\r\n\r\n\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n\r\n\r\n        textAlign: 'center',\r\n    }\r\n\r\n}\r\n\r\nexport default function AddRemarksPopup({\r\n    open,\r\n    ticketObj,\r\n    handleClose\r\n}) {\r\n    const [additionalRemarks, setAdditionalRemarks] = React.useState('');\r\n\r\n    const [snackBarValues, setSnackBarValues] = React.useState({\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n    })\r\n\r\n    const showDialog = (open, type, msg) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: msg,\r\n            duration: 5000,\r\n            type: type\r\n        })\r\n\r\n    }\r\n\r\n    const closeDialog = (open = false) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: \"\",\r\n            duration: 5000,\r\n            type: \"\"\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        let value = event.target.value;\r\n        setAdditionalRemarks(value);\r\n    }\r\n\r\n    const onClickSave = () => {\r\n        let payload = {\r\n            ticket_obj_id: ticketObj._id,\r\n            remarks: additionalRemarks,\r\n            date: new Date()\r\n        }\r\n\r\n        console.log(\"payload is\", payload);\r\n        new CenterApi().addTicketRemarks(payload).then(res => {\r\n            if (res) {\r\n                handleClose();\r\n                showDialog(true, \"success\", 'Remarks saved successfully')\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={closeDialog}>\r\n                    <Alert onClose={closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                        {snackBarValues.msg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    {/* <div>\r\n                        {ticketObj && ticketObj.remarks && ticketObj.remarks.additional_remarks && ticketObj.remarks.additional_remarks.length > 0 &&\r\n                            ticketObj.remarks.additional_remarks.map((item) => {\r\n                                return <div>\r\n                                    {item.remarks}\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div> */}\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" align=\"center\">\r\n                        Add Remarks\r\n                    </Typography>\r\n                    <Grid style={stylesCss.paddingInnerGrids} item>\r\n                        <TextField\r\n                            id=\"demo-helper-text-aligned\"\r\n                            label=\"Add Remarks\"\r\n                            style={stylesCss.inputBox}\r\n                            name=\"additionalRemarks\"\r\n                            value={additionalRemarks}\r\n                            onChange={(event) => handleChange(event)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid style={stylesCss.paddingInnerGrids} item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => onClickSave()}\r\n                            disabled={!additionalRemarks}>\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n                </Box>\r\n            </Modal >\r\n        </div >\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../Styles/style.css';\r\nimport CenterApi from '../components/centerComponent/api/api'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport AssignTechnicianPopup from '../components/centerComponent/assignTechnicianPopup'\r\nimport CloseTicketRemarksModal from '../components/Components/CloseTicketRemark';\r\nimport AddRemarksPopup from '../components/Components/AddRemarksPopup';\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n    download: false,\r\n    print: false\r\n};\r\n\r\nclass Tickets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticketsList: [],\r\n            columns: [\r\n                {\r\n                    name: \"center_id\",\r\n                    label: \"Center Id\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"service_required\",\r\n                    label: \"Service Required\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"name\",\r\n                    label: \"Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"phone\",\r\n                    label: \"Phone\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"address\",\r\n                    label: \"Address\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"pincode\",\r\n                    label: \"Pincode\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"ticketStatus\",\r\n                    label: \"ticketStatus\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"createdAt\",\r\n                    label: \"Created At\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"action\",\r\n                    label: \"Actions\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            console.log({\r\n                                value, tableMeta, updateValue\r\n                            })\r\n                            return <>\r\n                                {\r\n                                    value?.is_technician_assigned && value?.ticket_status !== \"CLOSED\" ? <>\r\n                                        <Button onClick={() => this.clickCloseTicket(value?._id)} variant=\"contained\" color=\"primary\" >Close Ticket</Button>\r\n\r\n                                        <Button variant=\"contained\" onClick={() => {\r\n                                            this.handleOpenTechnicianPopup(value, true)\r\n                                        }}>Assign new Technician</Button>\r\n\r\n                                    </> : \"\"\r\n                                }\r\n                                {\r\n                                    !value?.is_technician_assigned ? <>\r\n                                        <Button variant=\"contained\" onClick={() => {\r\n                                            this.handleOpenTechnicianPopup(value, false)\r\n                                        }}>Assign Technician</Button>\r\n                                    </> : \"\"\r\n                                }\r\n\r\n                                {/* <Button onClick={() => this.openAddRemarksPopup(value?._id)} variant=\"contained\" color=\"primary\" >Add Remarks</Button> */}\r\n\r\n                            </>\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    name: \"remarks\",\r\n                    label: \"Remarks\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            console.log({\r\n                                value, tableMeta, updateValue\r\n                            })\r\n                            return <>\r\n\r\n                                {value?.ticket_status !== \"CLOSED\" ? <>\r\n                                    <Button onClick={() => this.openAddRemarksPopup(value)} variant=\"contained\" color=\"primary\" >Add Remarks</Button>\r\n\r\n\r\n                                </> : \"\"}\r\n                            </>\r\n                        }\r\n                    }\r\n                },\r\n            ],\r\n            isAssignTechnicianPopupOpen: false,\r\n            ticketDetailsForAssignTechnician: {},\r\n            isTechnicianAssigning: false,\r\n            technicianList: [],\r\n            isCloseTicketRemarksModalOpen: false,\r\n            closingTicketId: '',\r\n            isForChange: false,\r\n\r\n            ticketObj: {},\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n        };\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleOpenTechnicianPopup = (ticketDetails, isForChangeValue) => {\r\n        this.setState({\r\n            isAssignTechnicianPopupOpen: true,\r\n            ticketDetailsForAssignTechnician: ticketDetails,\r\n            isForChange: isForChangeValue\r\n        })\r\n    }\r\n\r\n    handleCloseAssignTechnicianPopup = () => {\r\n        this.setState({\r\n            isAssignTechnicianPopupOpen: false,\r\n            ticketDetailsForAssignTechnician: {}\r\n        })\r\n\r\n    }\r\n\r\n    handleOpenCloseTicketRemarksModal = () => {\r\n        this.setState({\r\n            isCloseTicketRemarksModalOpen: true,\r\n        })\r\n    }\r\n\r\n    handleCloseCloseTicketRemarksModal = () => {\r\n        this.setState({\r\n            isCloseTicketRemarksModalOpen: false,\r\n        })\r\n\r\n    }\r\n\r\n    handleCloseTicket = (closingTicketRemarks, amount) => {\r\n\r\n        if (!(amount == 0 || amount)) {\r\n            return\r\n        }\r\n\r\n        if (this.state.closingTicketId && this.state.closingTicketId.length > 0) {\r\n\r\n            let payload = {\r\n                ticket_obj_id: this.state.closingTicketId,\r\n                remarks: {\r\n                    close_ticket_remarks: closingTicketRemarks\r\n                },\r\n                amount\r\n            }\r\n\r\n            console.log('payload is', payload);\r\n\r\n            new CenterApi().closeTicket(payload).then(res => {\r\n                this.setState({ closingTicketId: '' });\r\n                this.handleCloseCloseTicketRemarksModal();\r\n                this.showDialog(true, \"success\", \"Ticket closed successfully\");\r\n\r\n                this.getAllTickets();\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.showDialog(true, \"error\", err?.response?.data?.message);\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    clickCloseTicket = (ticket_obj_id) => {\r\n        this.setState({ closingTicketId: ticket_obj_id });\r\n        this.handleOpenCloseTicketRemarksModal(ticket_obj_id);\r\n    }\r\n\r\n    openAddRemarksPopup = (ticketObj) => {\r\n        this.setState({ ticketObj: ticketObj });\r\n        this.setState({ isOpenAddRemarksPopup: true });\r\n    }\r\n\r\n    closeAddRemarksPopup = () => {\r\n        this.setState({ isOpenAddRemarksPopup: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllTickets();\r\n        this.getAllTechnician()\r\n    }\r\n\r\n    getAllTechnician = () => {\r\n        new CenterApi().getAllTechnician().then(res => {\r\n            this.setState({\r\n                technicianList: res?.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    handleAssignTechnician = (technician_obj_id) => {\r\n        if (!technician_obj_id) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ isTechnicianAssigning: true })\r\n        let payload = {\r\n            ticket_obj_id: this.state.ticketDetailsForAssignTechnician._id,\r\n            technician_obj_id: technician_obj_id\r\n\r\n        }\r\n\r\n        new CenterApi().assignTechnician(payload).then(res => {\r\n            this.handleCloseAssignTechnicianPopup()\r\n            this.setState({ isTechnicianAssigning: false })\r\n            this.getAllTickets();\r\n\r\n        }).catch(err => {\r\n            this.setState({ isTechnicianAssigning: false })\r\n\r\n            console.log(err)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChangeTechnician = (technician_obj_id) => {\r\n        if (!technician_obj_id) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ isTechnicianAssigning: true })\r\n        let payload = {\r\n            ticket_obj_id: this.state.ticketDetailsForAssignTechnician._id,\r\n            technician_obj_id: technician_obj_id\r\n\r\n        }\r\n\r\n        new CenterApi().changeTechnician(payload).then(res => {\r\n            this.handleCloseAssignTechnicianPopup()\r\n            this.setState({ isTechnicianAssigning: false })\r\n            this.getAllTickets();\r\n\r\n        }).catch(err => {\r\n            this.setState({ isTechnicianAssigning: false })\r\n\r\n            console.log(err)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getFormattedAddress = (addressObject) => {\r\n        let addressLine = addressObject?.house_number + ', ' + addressObject?.locality + ', ' +\r\n            addressObject?.city + ', ' + addressObject?.state;\r\n        return addressLine;\r\n    }\r\n\r\n    getParsedData = (data) => {\r\n        let parsedData = data?.map((item) => {\r\n            return {\r\n                center_id: item?.assigned_ids?.assigned_center_id?.qr_details?.qr_id ?? '-',\r\n                service_required: item?.service_provided_for?.service_name,\r\n                name: item?.personal_details?.name,\r\n                phone: item?.personal_details?.primary_phone?.mobile_number,\r\n                address: this.getFormattedAddress(item?.address_details),\r\n                pincode: item?.address_details?.pincode,\r\n                createdAt: new Date(item?.createdAt).toLocaleDateString('en-us', { year: \"numeric\", month: \"short\", day: \"numeric\" }),\r\n                ticketStatus: item?.ticket_status,\r\n                action: item,\r\n                remarks: item\r\n\r\n            }\r\n        });\r\n\r\n        return parsedData;\r\n    }\r\n\r\n    getAllTickets() {\r\n        new CenterApi().getAllTickets().then(res => {\r\n            let parsedData = [];\r\n            if (res?.data?.length) {\r\n                parsedData = this.getParsedData(res.data);\r\n            }\r\n            console.log(parsedData, \"parsedData\")\r\n\r\n            this.setState({\r\n                ticketsList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues } = this.state\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n\r\n                {this.state.isAssignTechnicianPopupOpen &&\r\n                    <AssignTechnicianPopup\r\n                        open={this.state.isAssignTechnicianPopupOpen}\r\n                        handleClose={this.handleCloseAssignTechnicianPopup}\r\n                        technicianList={this.state.technicianList}\r\n                        isForChange={this.state.isForChange}\r\n                        handleAssignTechnician={this.handleAssignTechnician}\r\n                        handleChangeTechnician={this.handleChangeTechnician}\r\n                        isTechnicianAssigning={this.state.isTechnicianAssigning}\r\n                    />}\r\n\r\n\r\n\r\n                <MUIDataTable\r\n                    title={\"Tickets\"}\r\n                    data={this.state.ticketsList}\r\n                    columns={this.state.columns}\r\n                    options={options}\r\n                />\r\n\r\n                {this.state.isCloseTicketRemarksModalOpen &&\r\n                    <CloseTicketRemarksModal\r\n                        open={this.state.isCloseTicketRemarksModalOpen}\r\n                        handleClose={this.handleCloseCloseTicketRemarksModal}\r\n                        handleCloseTicket={this.handleCloseTicket}\r\n                    />}\r\n\r\n                {this.state.isOpenAddRemarksPopup && this.state.ticketObj &&\r\n                    <AddRemarksPopup\r\n                        open={this.state.isOpenAddRemarksPopup}\r\n                        ticketObj={this.state.ticketObj}\r\n                        handleClose={this.closeAddRemarksPopup}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tickets;","import React from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea } from '@mui/material';\r\n\r\nexport default function CenterDashboard() {\r\n\r\n    const globalState = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card sx={{ maxWidth: 345 }} style={{ marginBottom: \"50px\" }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image=\"https://cdn-icons-png.flaticon.com/512/51/51372.png\"\r\n                        alt=\"green iguana\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Personal Details\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"Phone number :- \" + globalState?.centerDetailsPopulated?.personal_details?.phone?.mobile_number\r\n                            }\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"Center name :- \" + globalState?.centerDetailsPopulated?.center_name\r\n                            }\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"Number of technicians :- \" + globalState?.centerDetailsPopulated?.no_of_technicians\r\n                            }\r\n                        </Typography>\r\n\r\n\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n            <Card sx={{ maxWidth: 345 }} style={{ marginBottom: \"50px\" }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image=\"https://thumbs.dreamstime.com/b/address-icon-information-sign-address-icon-faq-help-hint-symbol-vector-icon-address-icon-information-sign-112676342.jpg\"\r\n                        alt=\"green iguana\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Address details\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"Address line :- \" + globalState?.centerDetailsPopulated?.address_details?.address_line\r\n                            }\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"Pin code :- \" + globalState?.centerDetailsPopulated?.address_details?.pincode\r\n                            }\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"City :- \" + globalState?.centerDetailsPopulated?.address_details?.city\r\n                            }\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"State :- \" + globalState?.centerDetailsPopulated?.address_details?.state\r\n                            }\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"Country :- \" + globalState?.centerDetailsPopulated?.address_details?.country\r\n                            }\r\n                        </Typography>\r\n\r\n\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image=\"https://www.kindpng.com/picc/m/750-7505601_services-icon-png-services-icon-transparent-png.png\"\r\n                        alt=\"green iguana\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Services Providing\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"Primary service :- \" + globalState?.centerDetailsPopulated?.services?.primary_services?.service_name\r\n                            }\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {\r\n                                \"Secondary service :- \" + globalState?.centerDetailsPopulated?.services?.secondary_services?.map(ite => ite?.secondary_services_id?.service_name).join(',')\r\n                            }\r\n                        </Typography>\r\n                        <br />\r\n\r\n\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../../config/config\";\r\n\r\nclass BroadCastListing {\r\n    constructor() {\r\n        this.base_url = BASE_URL;\r\n    }\r\n\r\n    getAllBroadCastTicket() {\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: \"get\",\r\n                url: `${this.base_url}center/get-all-available-broadcast`,\r\n            })\r\n                .then((res) => {\r\n                    resolve(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n    }\r\n\r\n    acceptBroadCast(data) {\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: \"post\",\r\n                data: data,\r\n                url: `${this.base_url}center/accepted-broadcast-request`,\r\n            })\r\n                .then((res) => {\r\n                    resolve(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n    acceptBroadCastWithoutPayment(data) {\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: \"post\",\r\n                data: data,\r\n                url: `${this.base_url}center/accepted-broadcast-request-unpaid-ticket`,\r\n            })\r\n                .then((res) => {\r\n                    resolve(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    acceptTicketAfterPayment(data) {\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: \"post\",\r\n                data: data,\r\n                url: `${this.base_url}center/accept-ticket-after-payment`,\r\n            })\r\n                .then((res) => {\r\n                    resolve(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n\r\n    }\r\n    rejectTicket(data) {\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: \"post\",\r\n                data: data,\r\n                url: `${this.base_url}center/reject-broadCast-technician`,\r\n            })\r\n                .then((res) => {\r\n                    resolve(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default BroadCastListing;","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../Styles/style.css';\r\n\r\nimport TechnicianApi from '../components/technicianComponent/api/api'\r\nimport BroadCastApi from '../components/broadCastCenter/api/api'\r\nimport { RAZORPAY_KEY, PAYMENT_NAME, PAYMENT_DESCRIPTION } from \"../components/config/config\";\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n    download: false,\r\n    print: false\r\n};\r\n\r\nclass Technicians extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            broadCastList: [],\r\n            columns: [\r\n                {\r\n                    name: \"date_created\",\r\n                    label: \"Date Created\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Service\",\r\n                    label: \"Service\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"specific_requirement\",\r\n                    label: \"Specific requirement\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"address_details\",\r\n                    label: \"Address Details\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"status_of_ticket\",\r\n                    label: \"Status of Ticket\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"personal_details\",\r\n                    label: \"Customer Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"Action\",\r\n                    label: \"Action\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            console.log({\r\n                                value, tableMeta, updateValue\r\n                            })\r\n                            return <>\r\n                                {\r\n                                    value.status_of_ticket == \"PENDING\" ? <>\r\n                                        <button onClick={() => this.acceptTicket(value._id, value?.ticket_obj_id?.admin_setting?.is_paid)}>{value?.ticket_obj_id?.admin_setting?.is_paid ? \"Accept with payment\" : \"Accept\"}</button>\r\n                                        <button onClick={() => this.rejectTicket(value._id)}>Reject</button>\r\n                                    </> : \"\"\r\n                                }\r\n\r\n                            </>\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            snackBarValues: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            },\r\n            is_loading: false,\r\n        };\r\n    }\r\n\r\n    async acceptFreeTicketWithoutPayment(broadCastId) {\r\n        this.startLoading()\r\n\r\n        let body = {\r\n            broadcast_obj_id: broadCastId\r\n        }\r\n        await new BroadCastApi().acceptBroadCastWithoutPayment(body).then(res => {\r\n            this.getAllBroadCastTicket()\r\n            this.stopLoading()\r\n        }).catch(err => {\r\n            this.stopLoading()\r\n            console.log(err, \"err\")\r\n            this.showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    async acceptTicket(value, is_paid) {\r\n\r\n        if (!is_paid) {\r\n            this.acceptFreeTicketWithoutPayment(value)\r\n            return\r\n        }\r\n\r\n        console.log(value, \"acceptTicket\");\r\n        let body = {\r\n            broadcast_obj_id: value\r\n        }\r\n        this.startLoading()\r\n        await new BroadCastApi().acceptBroadCast(body).then(async res => {\r\n\r\n            this.stopLoading()\r\n            const razorPayOptions = {\r\n                key: RAZORPAY_KEY,\r\n                amount: res.data.payment_response.amount, //  = INR 1\r\n                name: PAYMENT_NAME,\r\n                description: PAYMENT_DESCRIPTION,\r\n                order_id: res.data.payment_response.id,\r\n                image: \"https://cdn.razorpay.com/logos/7K3b6d18wHwKzL_medium.png\",\r\n                handler: async function (response) {\r\n                    console.log(\"response: \", response);\r\n                    // let razorpay_payment_id = response.razorpay_payment_id\r\n                    // let razorpay_order_id = response.razorpay_order_id\r\n                    // let razorpay_signature = response.razorpay_signature\r\n\r\n                    await new BroadCastApi().acceptTicketAfterPayment(response).then(responseAfterPayment => {\r\n                        alert(\"Payment success\")\r\n                        window.reload()\r\n                    }).catch(err => {\r\n                        console.log(err)\r\n                    })\r\n                },\r\n                prefill: {\r\n                    name: res.centerDetails?.center_name,\r\n                    contact: res.centerDetails?.personal_details?.phone?.mobile_number,\r\n                    email: \"demo@demo.com\"\r\n                },\r\n                notes: {\r\n                    address: res.centerDetails?.address_details?.address_line\r\n                },\r\n                theme: {\r\n                    color: \"#F37254\",\r\n                    hide_topbar: false\r\n                }\r\n            };\r\n\r\n            var rzp1 = new window.Razorpay(razorPayOptions);\r\n            rzp1.open();\r\n        }).catch(err => {\r\n            this.showDialog(true, \"error\", err?.response?.data?.message)\r\n            this.stopLoading()\r\n\r\n            console.log(err, \"err\")\r\n        })\r\n    }\r\n\r\n    // paymentOnSuccess(response) {\r\n    //     // this.getAllBroadCastTicket()\r\n    //     console.log(response, \"response\")\r\n    // }\r\n\r\n    rejectTicket(value) {\r\n        let body = {\r\n            broadcast_obj_id: value\r\n        }\r\n        this.startLoading()\r\n        new BroadCastApi().rejectTicket(body).then(res => {\r\n            this.stopLoading()\r\n            this.getAllBroadCastTicket()\r\n        }).catch(err => {\r\n            this.stopLoading()\r\n            this.showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllBroadCastTicket()\r\n    }\r\n\r\n    getFormattedAddress = (addressObject) => {\r\n        let addressLine = addressObject?.house_number + ', ' + addressObject?.locality + ', ' +\r\n            addressObject?.city + ', ' + addressObject?.state + ', ' + addressObject?.pincode;\r\n        return addressLine;\r\n    }\r\n\r\n    getAllBroadCastTicket() {\r\n        this.startLoading()\r\n        new BroadCastApi().getAllBroadCastTicket().then(res => {\r\n            let broadCastList = res?.data?.map(ite => {\r\n                console.log(\"ite?.ticket_obj_id is\", ite?.ticket_obj_id?.specific_requirement, typeof (ite.ticket_obj_id))\r\n                return {\r\n                    date_created: new Date(ite?.createdAt).toLocaleDateString('en-us', { year: \"numeric\", month: \"short\", day: \"numeric\" }),\r\n                    Service: ite?.ticket_obj_id?.service_provided_for?.service_name,\r\n                    specific_requirement: ite?.ticket_obj_id?.specific_requirement,\r\n                    address_details: this.getFormattedAddress(ite?.ticket_obj_id?.address_details),\r\n                    status_of_ticket: ite?.status_of_ticket,\r\n                    personal_details: ite?.ticket_obj_id?.personal_details?.name,\r\n                    Action: ite\r\n                }\r\n            })\r\n\r\n            this.stopLoading()\r\n            this.setState({ broadCastList: broadCastList })\r\n\r\n        }).catch(err => {\r\n            this.stopLoading()\r\n            console.log(err)\r\n            this.showDialog(true, \"error\", err?.response?.data?.message)\r\n\r\n        })\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            snackBarValues: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            snackBarValues: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n            }\r\n        })\r\n\r\n    }\r\n    startLoading = () => {\r\n        this.setState({ is_loading: true });\r\n    }\r\n\r\n    stopLoading = () => {\r\n        this.setState({ is_loading: false });\r\n    }\r\n\r\n    render() {\r\n\r\n        let { snackBarValues, is_loading } = this.state\r\n        return (\r\n            <div>\r\n\r\n                <Backdrop\r\n                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={this.state.is_loading}\r\n                    onClick={this.stopLoading}\r\n                >\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <MUIDataTable\r\n                    title={\"New Tickets\"}\r\n                    data={this.state.broadCastList}\r\n                    columns={this.state.columns}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Technicians;","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../Styles/style.css';\r\n\r\nimport TechnicianApi from '../components/technicianComponent/api/api'\r\n\r\nconst columns = [\r\n    {\r\n        name: \"name\",\r\n        label: \"Name\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"email\",\r\n        label: \"email\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"phone\",\r\n        label: \"phone\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"ticket_created_by\",\r\n        label: \"Ticket created by\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"address\",\r\n        label: \"Address of ticket\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"broadcast_status\",\r\n        label: \"Broad cast status\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"ticket_status\",\r\n        label: \"Ticket status\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"service_provided_for\",\r\n        label: \"Service provided for\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"assigned_center_name\",\r\n        label: \"Assigned center name\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    }\r\n];\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n    download: false,\r\n    print: false\r\n};\r\n\r\nclass Technicians extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticketCreatedByList: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllTechnicians()\r\n    }\r\n\r\n    getAllTechnicians() {\r\n        new TechnicianApi().getAllTicketCreatedByYou().then(res => {\r\n\r\n            let ticketCreatedByList = res?.data?.map(ite => {\r\n                return {\r\n                    name: ite?.personal_details?.name,\r\n                    email: ite?.personal_details?.email ?? '-',\r\n                    phone: ite?.personal_details?.primary_phone?.country_code + ite?.personal_details?.primary_phone?.mobile_number,\r\n                    ticket_created_by: ite?.created_by?.center_name,\r\n                    address: ite?.address_details?.house_number + \"  \" + ite?.address_details?.locality + \" \" + ite?.address_details?.city + \" \" + ite?.address_details?.state + \" \" + ite?.address_details?.country + \" \" + ite?.address_details?.pincode,\r\n                    broadcast_status: ite?.broadcast_status,\r\n                    ticket_status: ite?.ticket_status,\r\n                    service_provided_for: ite?.service_provided_for?.service_name,\r\n                    assigned_center_name: ite?.assigned_ids?.assigned_center_id?.center_name ?? '-'\r\n                }\r\n            })\r\n\r\n            this.setState({ ticketCreatedByList: ticketCreatedByList })\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MUIDataTable\r\n                    title={\"Ticket created by you , not assigned to you\"}\r\n                    data={this.state.ticketCreatedByList}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Technicians;","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { setLoginDetails, setLogoutDetails } from '../../store/AdminStore/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst drawerWidth = 240;\r\n\r\nlet drawerItemsResponsive = [\r\n    {\r\n        name: 'Dashboard',\r\n        path: 'admin-dashboard'\r\n    },\r\n    {\r\n        name: 'Centers',\r\n        path: '/admin-centers'\r\n    },\r\n    {\r\n        name: 'Add center',\r\n        path: '/add-center'\r\n    },\r\n    {\r\n        name: 'All Tickets',\r\n        path: '/Tickets'\r\n    },\r\n    {\r\n        name: 'Technicians',\r\n        path: '/admin-technician'\r\n    },\r\n    {\r\n        name: 'Add Ticket',\r\n        path: '/admin-ticket'\r\n    },\r\n    {\r\n        name: 'FeedBack',\r\n        path: '/admin-feedBack'\r\n    },\r\n    {\r\n        name: 'Clients',\r\n        path: '/admin-clients'\r\n    },\r\n    {\r\n        name: \"BroadCasted List\",\r\n        path: '/broad-casted-list'\r\n    },\r\n    {\r\n        name: \"Roles\",\r\n        path: '/roles'\r\n    },\r\n    {\r\n        name: \"Users\",\r\n        path: '/users'\r\n    },\r\n    {\r\n        name: \"Center Onboarders\",\r\n        path: '/admin-center-onboarders'\r\n    }\r\n]\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const { window } = props;\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const drawer = (\r\n        <div>\r\n            <Toolbar />\r\n            <Divider />\r\n            <List>\r\n                {drawerItemsResponsive.map((text, index) => (\r\n                    <ListItem onClick={() => {\r\n\r\n                        history.push(text.path)\r\n\r\n                    }} button key={text.name}>\r\n                        <ListItemIcon>\r\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text.name} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem onClick={() => {\r\n\r\n                    onClickLogout()\r\n\r\n                }} button>\r\n                    <ListItemIcon>\r\n                        {<InboxIcon />}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={\"Logout\"} />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    const onClickLogout = () => {\r\n        dispatch(\r\n            setLoginDetails({\r\n                adminDetails: {},\r\n                isAdminLoggedIn: false,\r\n                userTokens: {\r\n                    accessToken: \"\"\r\n                },\r\n            })\r\n        )\r\n\r\n        history.push(\"/admin-login\")\r\n\r\n    }\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                sx={{\r\n                    width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n                    ml: { sm: `${drawerWidth}px` },\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        sx={{ mr: 2, display: { sm: 'none' } }}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\">\r\n                        Admin\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box\r\n                component=\"nav\"\r\n                sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n                aria-label=\"mailbox folders\"\r\n            >\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Drawer\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    open={mobileOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                    }}\r\n                    sx={{\r\n                        display: { xs: 'block', sm: 'none' },\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    sx={{\r\n                        display: { xs: 'none', sm: 'block' },\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                    open\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { setLoginDetails, setLogoutDetails } from '../../store/CenterOnboardStore/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst drawerWidth = 240;\r\n\r\nlet drawerItemsResponsive = [\r\n    {\r\n        name: 'View Centers',\r\n        path: '/center-onboard-view-centers'\r\n    }\r\n]\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const { window } = props;\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const globalState = useSelector((state) => state.centerOnboardReducer)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const drawer = (\r\n        <div>\r\n            <Toolbar />\r\n            <Divider />\r\n            <List>\r\n                {drawerItemsResponsive.map((text, index) => (\r\n                    <ListItem onClick={() => {\r\n\r\n                        history.push(text.path)\r\n\r\n                    }} button key={text.name}>\r\n                        <ListItemIcon>\r\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text.name} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem onClick={() => {\r\n\r\n                    onClickLogout()\r\n\r\n                }} button>\r\n                    <ListItemIcon>\r\n                        {<InboxIcon />}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={\"Logout\"} />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const onClickLogout = () => {\r\n        dispatch(\r\n            setLoginDetails({\r\n                centerOnboardDetails: {},\r\n                isCenterOnboardLoggedIn: false,\r\n                userTokens: {\r\n                    accessToken: \"\",\r\n                },\r\n            }),\r\n        )\r\n\r\n        history.push(\"/center-onboard-login\")\r\n    }\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                sx={{\r\n                    width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n                    ml: { sm: `${drawerWidth}px` },\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        sx={{ mr: 2, display: { sm: 'none' } }}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\">\r\n                        Welcome {globalState.centerOnboardDetails.name}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box\r\n                component=\"nav\"\r\n                sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n                aria-label=\"mailbox folders\"\r\n            >\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Drawer\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    open={mobileOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                    }}\r\n                    sx={{\r\n                        display: { xs: 'block', sm: 'none' },\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    sx={{\r\n                        display: { xs: 'none', sm: 'block' },\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                    open\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useEffect } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material'\r\n\r\nimport AdminApi from '../AdminApi/Api/api'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nexport default function AddServiceModal({ getAllServicesExists, isUpdate, serviceId, serviceNameProp }) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [serviceName, setServiceName] = React.useState('');\r\n\r\n    const [snackBarValues, setSnackBarValues] = React.useState({\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isUpdate) {\r\n            setServiceName(serviceNameProp)\r\n        }\r\n    }, [])\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const showDialog = (open, type, msg) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: msg,\r\n            duration: 5000,\r\n            type: type\r\n        })\r\n\r\n    }\r\n\r\n    const closeDialog = (open = false) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: \"\",\r\n            duration: 5000,\r\n            type: \"\"\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        let value = event.target.value;\r\n        let capitalText = value.toUpperCase();\r\n        setServiceName(capitalText);\r\n    }\r\n\r\n    const onClickSave = () => {\r\n        let payload = {\r\n            service_name: serviceName\r\n        }\r\n\r\n        new AdminApi().addService(payload).then(res => {\r\n            if (res) {\r\n                handleClose();\r\n                showDialog(true, \"success\", 'Service saved successfully')\r\n            }\r\n            getAllServicesExists()\r\n        }).catch(err => {\r\n            console.log(err)\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n    }\r\n\r\n    const onClickUpdate = () => {\r\n        let payload = {\r\n            service_object_id: serviceId,\r\n            service_name: serviceName\r\n        }\r\n\r\n        new AdminApi().updateService(payload).then(res => {\r\n            if (res) {\r\n                handleClose();\r\n                showDialog(true, \"success\", 'Service updated successfully')\r\n            }\r\n            getAllServicesExists()\r\n        }).catch(err => {\r\n            console.log(err)\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={closeDialog}>\r\n                    <Alert onClose={closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                        {snackBarValues.msg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n\r\n            <div className='add-service-button'>\r\n                <Button onClick={handleOpen} className=\"text-transform-none\" variant=\"contained\">{isUpdate ? \"Edit Service\" : \"Add a Service\"}</Button>\r\n            </div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        {isUpdate ? \"Edit Service\" : \"Add a Service\"}\r\n                    </Typography>\r\n                    <Grid style={stylesCss.paddingInnerGrids} item>\r\n                        <TextField\r\n                            helperText=\"Please provide service name\"\r\n                            id=\"demo-helper-text-misaligned\"\r\n                            label=\"Service Name\"\r\n                            style={stylesCss.inputBox}\r\n                            name=\"serviceName\"\r\n                            value={serviceName}\r\n                            onChange={(event) => handleChange(event)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid style={stylesCss.paddingInnerGrids} item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={isUpdate ? () => onClickUpdate() : () => onClickSave()}\r\n                            disabled={!serviceName}\r\n                        >\r\n                            {isUpdate ? \"Update\" : \"Save\"}\r\n                        </Button>\r\n                    </Grid>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddServiceModal from '../Components/AddServiceModal';\r\nimport { Alert, FormControlLabel, FormGroup, InputAdornment, Snackbar, Switch, Typography } from '@mui/material'\r\nimport AdminApi from '../AdminApi/Api/api'\r\n\r\nexport default function ServicesList({ servicesList, onDeleteService, getAllServicesExists }) {\r\n    const [isServiceActive, setIsServiceActive] = useState(true)\r\n\r\n    // const handleChangeCheckBox = (e) => {\r\n    //     console.log('event is', e.target.value, e.target.checked)\r\n    //     console.log(e.target.value, \"llll\")\r\n    //     setIsServiceActive(e.target.value)\r\n    // }\r\n\r\n    const handleChangeCheckBox = (e, serviceId) => {\r\n        console.log('event is', e.target.value, e.target.checked)\r\n        let isActive = e.target.checked ? 1 : 0;\r\n        console.log('isActive value', isActive);\r\n\r\n        let payload = {\r\n            service_object_id: serviceId,\r\n            is_active: isActive\r\n        }\r\n\r\n        new AdminApi().updateServiceStatus(payload).then(res => {\r\n            if (res) {\r\n                // handleClose();\r\n                // showDialog(true, \"success\", 'Service updated successfully')\r\n            }\r\n            getAllServicesExists()\r\n        }).catch(err => {\r\n            console.log(err)\r\n            // showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Service Name</TableCell>\r\n                        <TableCell>Service Status</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {servicesList && servicesList.length > 0 && servicesList.map((row) => (\r\n                        <TableRow\r\n                            key={row.service_name}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.service_name}\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {/* {row.is_active} */}\r\n                                <FormGroup>\r\n                                    <FormControlLabel control={<Switch checked={row.is_active} onChange={(e) => handleChangeCheckBox(e, row._id)} />} label={row.is_active ? 'ACTIVE' : 'IN_ACTIVE'} />\r\n                                </FormGroup>\r\n                            </TableCell>\r\n                            {/* <TableCell>\r\n                                <Button onClick={() => { onDeleteService(row._id) }} variant=\"outlined\" startIcon={<DeleteIcon />}>\r\n                                    Delete\r\n                                </Button>\r\n                            </TableCell> */}\r\n                            <TableCell>\r\n                                <AddServiceModal getAllServicesExists={getAllServicesExists} isUpdate={true} serviceId={row._id} serviceNameProp={row.service_name} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport AddServiceModal from '../../components/Components/AddServiceModal';\r\nimport ServicesList from '../../components/Components/ServicesList';\r\n\r\nimport AdminApi from '../../components/AdminApi/Api/api'\r\nimport CenterRegistrationApi from '../../components/centerRegistration/Api/api';\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function AdminDashboard() {\r\n\r\n    const [servicesList, setServicesList] = useState([]);\r\n    const reduxState = useSelector((state) => state.userReducer);\r\n\r\n    const [snackBarValues, setSnackBarValues] = useState({\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n    })\r\n\r\n    const showDialog = (open, type, msg) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: msg,\r\n            duration: 5000,\r\n            type: type\r\n        })\r\n\r\n    }\r\n\r\n    const closeDialog = (open = false) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: \"\",\r\n            duration: 5000,\r\n            type: \"\"\r\n        })\r\n    }\r\n\r\n    const getAllServicesExists = () => {\r\n        new CenterRegistrationApi().getAllServices().then(res => {\r\n            setServicesList(res.data)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllServicesExists();\r\n    }, []);\r\n\r\n    const onDeleteService = (serviceId) => {\r\n        let payload = {\r\n            serviceId: serviceId\r\n        }\r\n        new AdminApi().deleteService(payload).then(res => {\r\n            if (res) {\r\n                showDialog(true, \"success\", 'Service deleted successfully')\r\n            }\r\n            getAllServicesExists();\r\n        }).catch(err => {\r\n            console.log(err)\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={closeDialog}>\r\n                    <Alert onClose={closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                        {snackBarValues.msg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n            Admin Dashboard\r\n\r\n            {\r\n                reduxState?.adminDetails?.role_id?.permissions?.add_new_services && <AddServiceModal getAllServicesExists={getAllServicesExists} />\r\n            }\r\n\r\n            {\r\n                reduxState?.adminDetails?.role_id?.permissions?.view_services_list?.full_access ? <>\r\n                    <ServicesList servicesList={servicesList} onDeleteService={onDeleteService} getAllServicesExists={getAllServicesExists} />\r\n\r\n                </> : \"No access to view services , contact admin\"\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function BroadcastTickets() {\r\n    return (\r\n        <div>\r\n            Admin BroadcastTickets\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../../Styles/style.css';\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\n\r\n\r\nimport CenterRegistrationApi from '../../components/centerRegistration/Api/api';\r\nimport CenterComponentApi from '../../components/centerComponent/api/api';\r\nimport { IndianStates } from '../../assets/IndianStates';\r\nimport AdminApi from '../../components/AdminApi/Api/api';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nclass AddTechnician extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clientName: '',\r\n            officialEmail: '',\r\n            clientPocPersonName: '',\r\n            clientPocPersonDesignation: '',\r\n            clientPocPhone: '',\r\n            addressLine: '',\r\n            city: '',\r\n            state: '',\r\n            pincode: '',\r\n            country: 'INDIA',\r\n            gstNumber: '',\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n            servicesList: [],\r\n\r\n            isRegistering: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        if (name == \"pincode\") {\r\n            if (value.length <= 6) {\r\n                this.setState({\r\n                    pincode: value\r\n                })\r\n            }\r\n\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { clientName, officialEmail, clientPocPersonName, clientPocPersonDesignation, clientPocPhone,\r\n            addressLine, city, state, pincode, country, gstNumber } = this.state;\r\n\r\n        if (!(clientName &&\r\n            officialEmail &&\r\n            clientPocPersonName &&\r\n            clientPocPersonDesignation &&\r\n            clientPocPhone &&\r\n            addressLine &&\r\n            city &&\r\n            state &&\r\n            pincode &&\r\n            country &&\r\n            gstNumber\r\n        )) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n\r\n        let payload = {\r\n            \"client_name\": clientName,\r\n            \"official_email\": officialEmail,\r\n\r\n            \"client_poc\": {\r\n                \"person_name\": clientPocPersonName,\r\n                \"person_designation\": clientPocPersonDesignation,\r\n                \"phone\": {\r\n                    \"country_code\": \"+91\",\r\n                    \"mobile_number\": clientPocPhone\r\n                },\r\n            },\r\n            \"address_details\": {\r\n                \"address_line\": addressLine,\r\n                \"city\": city,\r\n                \"state\": state,\r\n                \"pincode\": pincode,\r\n                \"country\": country\r\n            },\r\n            \"gst_number\": gstNumber,\r\n        }\r\n\r\n        new AdminApi().addClient(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Client Created successfully\");\r\n\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.componentDidMount();\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues, isFormValid,\r\n            clientName, officialEmail, clientPocPersonName, clientPocPersonDesignation, clientPocPhone,\r\n            addressLine, city, state, pincode, country, gstNumber\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">Add a Client</h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={12}>\r\n                            <TextField\r\n                                helperText=\"Please provide client's name\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Client Name\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"clientName\"\r\n                                value={clientName}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !clientName}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={12}>\r\n                            <TextField\r\n                                helperText=\"Please provide official email\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Official Email\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"officialEmail\"\r\n                                value={officialEmail}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !officialEmail}\r\n                                type=\"email\"\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={12}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Point of Contact Person Name\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"clientPocPersonName\"\r\n                                value={clientPocPersonName}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !clientPocPersonName}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={12}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Point of contact person designation\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"clientPocPersonDesignation\"\r\n                                value={clientPocPersonDesignation}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !clientPocPersonDesignation}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Point of contact phone number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"clientPocPhone\"\r\n                                value={clientPocPhone}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !clientPocPhone}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Address\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"addressLine\"\r\n                                value={addressLine}\r\n                                onChange={this.handleChange}\r\n                            // error={isFormValid && !addressLine}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"City\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"city\"\r\n                                value={city}\r\n                                onChange={this.handleChange}\r\n                            // error={isFormValid && !city}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"State\"\r\n                                    name=\"state\"\r\n                                    onChange={this.handleChange}\r\n                                    value={state}\r\n                                // error={isFormValid && !state}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Service Area Pincode (main)\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"pincode\"\r\n                                type=\"number\"\r\n                                value={pincode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !pincode}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Country\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"country\"\r\n                                value={country}\r\n                                onChange={this.handleChange}\r\n                                // error={isFormValid && !country}\r\n                                disabled\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"GST Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"gstNumber\"\r\n                                value={gstNumber}\r\n                                onChange={this.handleChange}\r\n                            // error={isFormValid && !gstNumber}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >SUBMIT\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTechnician;","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../../Styles/style.css';\r\nimport AdminApiModule from '../../components/AdminApi/Api/api';\r\nimport Button from '@mui/material/Button';\r\nimport AddClient from '../Admin/AddClient';\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n};\r\n\r\nclass Clients extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columnsList: [\r\n                {\r\n                    name: \"clientId\",\r\n                    label: \"Client Id\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"clientName\",\r\n                    label: \"Client Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"officialEmail\",\r\n                    label: \"Official Email\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"pocName\",\r\n                    label: \"POC Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"pocDesignation\",\r\n                    label: \"POC Designation\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"pocPhone\",\r\n                    label: \"POC Phone\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"addressLine\",\r\n                    label: \"Address Line\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"city\",\r\n                    label: \"City\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"state\",\r\n                    label: \"State\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"pincode\",\r\n                    label: \"Pincode\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"country\",\r\n                    label: \"Country\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"gstNumber\",\r\n                    label: \"GST Number\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"createdAt\",\r\n                    label: \"Created At\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"action\",\r\n                    label: \"Actions\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            console.log({\r\n                                value, tableMeta, updateValue\r\n                            })\r\n                            return <>\r\n                                <Button onClick={() => this.deleteClient(value?._id)} variant=\"contained\" color=\"primary\" >Delete</Button>\r\n                            </>\r\n                        }\r\n                    }\r\n                },\r\n            ],\r\n            clientsList: []\r\n        };\r\n        this.deleteClient = this.deleteClient.bind(this)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getAllClients();\r\n    }\r\n\r\n    getParsedData = (data) => {\r\n        let parsedData = data && data.length > 0 && data.map((item) => {\r\n            return {\r\n                clientId: item?.client_id || '-',\r\n                clientName: item?.client_name,\r\n                officialEmail: item?.official_email,\r\n                pocName: item?.client_poc?.person_name,\r\n                pocDesignation: item?.client_poc?.person_designation,\r\n                pocPhone: item?.client_poc?.phone?.country_code + item?.client_poc?.phone?.mobile_number,\r\n                addressLine: item?.address_details?.address_line,\r\n                city: item?.address_details?.city,\r\n                state: item?.address_details?.state,\r\n                pincode: item?.address_details?.pincode,\r\n                country: item?.address_details?.country,\r\n                gstNumber: item?.gst_number,\r\n                createdAt: item?.createdAt,\r\n                action: item\r\n            }\r\n        });\r\n\r\n        return parsedData;\r\n    }\r\n\r\n    getAllClients() {\r\n        new AdminApiModule().getAllClients().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.length > 0) {\r\n                parsedData = this.getParsedData(res.data);\r\n            }\r\n\r\n            console.log(\"parsed data\", parsedData)\r\n\r\n            this.setState({\r\n                clientsList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    deleteClient = (clientId) => {\r\n        console.log(\"client id is\", clientId);\r\n\r\n        let payload = {\r\n            clientId: clientId\r\n        }\r\n        new AdminApiModule().deleteClient(payload).then(res => {\r\n            if (res) {\r\n                // showDialog(true, \"success\", 'Client deleted successfully')\r\n            }\r\n            this.getAllClients();\r\n        }).catch(err => {\r\n            console.log(err)\r\n            // showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <div className='add-button-div'>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                    // onClick={() => this.handleRegister()}\r\n                    // disabled={this.state.isRegistering}\r\n                    >Add a Client\r\n                    </Button>\r\n                </div> */}\r\n\r\n                {\r\n                    this.props.reduxState?.adminDetails?.role_id?.permissions?.view_clients?.full_access ? <>\r\n                        <div>\r\n                            <MUIDataTable\r\n                                title={\"Clients\"}\r\n                                data={this.state.clientsList}\r\n                                columns={this.state.columnsList}\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n                    </> : \"No access to view client contact admin\"\r\n                }\r\n                <br />\r\n\r\n                {\r\n                    this.props.reduxState?.adminDetails?.role_id?.permissions?.add_clients ? <>\r\n                        <div>\r\n                            <AddClient />\r\n                        </div>\r\n                    </> : \"No access add client contact admin\"\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reduxState: state.userReducer,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(Clients));\r\n\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport BeachAccessIcon from '@mui/icons-material/BeachAccess';\r\n\r\nconst style = {\r\n    flex: 1,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n\r\n    },\r\n    dialogInputBox: {\r\n        height: 70,\r\n        padding: 10,\r\n        width: 300,\r\n\r\n    },\r\n    gridStyle: {\r\n\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\",\r\n        margin: 10,\r\n        justifyContent: \"center\"\r\n    },\r\n    dialogAlignBox: {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default function ViewTicketFeedBack({\r\n    open,\r\n    handleClose,\r\n    viewfeedback\r\n}) {\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n\r\n                    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                        {\r\n                            viewfeedback?.length ? viewfeedback?.map(ite => {\r\n                                return <ListItem>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <ImageIcon />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={ite?.question + \" ? \"} secondary={ite?.answer} />\r\n                                </ListItem>\r\n                            }) : \"No feed back given\"\r\n                        }\r\n\r\n                    </List>\r\n\r\n                </Box >\r\n            </Modal >\r\n\r\n        </div >\r\n    )\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '65%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    height: '80%',\r\n    overflowY: 'scroll'\r\n};\r\n\r\nconst styleListDivider = {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    bgcolor: 'background.paper',\r\n};\r\n\r\nconst styleListItem = {\r\n    textAlignLeft: {\r\n        textAlign: 'left'\r\n    },\r\n    textAlignEnd: {\r\n        textAlign: 'end'\r\n    }\r\n}\r\n\r\nconst ListDividers = ({ roleObject }) => {\r\n    console.log(\"roleObject is\", roleObject)\r\n\r\n    return (\r\n        <List sx={styleListDivider} component=\"nav\" aria-label=\"mailbox folders\">\r\n            {Object.keys(roleObject).map((key) => (\r\n\r\n                <div>\r\n                    <ListItem button>\r\n\r\n                        <ListItemText sx={styleListItem.textAlignLeft}>{key}</ListItemText>\r\n                        {/* <ListItemText>{(roleObject[key]).toString()}</ListItemText> */}\r\n                        <ListItemText sx={styleListItem.textAlignEnd}>\r\n                            {(roleObject[key]) ?\r\n                                <IconButton color=\"success\">\r\n                                    <CheckCircleIcon />\r\n                                </IconButton> :\r\n                                <IconButton color=\"error\">\r\n                                    <CancelIcon />\r\n                                </IconButton>}\r\n                        </ListItemText>\r\n\r\n\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            ))}\r\n\r\n        </List>\r\n    );\r\n}\r\nexport default function ViewRole({ isViewRoleOpen, handleCloseViewRole, roleObject }) {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={isViewRoleOpen}\r\n                onClose={handleCloseViewRole}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <h2>Permissions</h2>\r\n                    <ListDividers roleObject={roleObject} />\r\n                </Box>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../../../Styles/style.css';\r\nimport AdminApiModule from '../../../components/AdminApi/Api/api';\r\nimport ViewFeedBackPOpup from '../../../components/Components/ViewFeedBackPopup'\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { withRouter } from \"react-router\";\r\nimport ViewRole from './ViewRole';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Roles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rolesList: [],\r\n            isRoleEdit: false,\r\n\r\n            viewfeedback: [],\r\n            isOpenFeedBackPopup: false,\r\n            isViewRoleOpen: false,\r\n            selectedRole: {}\r\n        };\r\n    }\r\n\r\n    parseRoleObject = (roleObject) => {\r\n        let resultObject = {\r\n            // roleName: roleObject?.role_name,\r\n            addCenter: roleObject?.permissions?.add_center,\r\n            updateCenterFullAccess: roleObject?.permissions?.update_center?.full_access,\r\n            deleteCenter: roleObject?.permissions?.delete_center,\r\n            viewCenterDetailsFullAccess: roleObject?.permissions?.view_center_details?.full_access,\r\n            viewCenterDetailsViewPincode: roleObject?.permissions?.view_center_details?.view_pincode,\r\n            addTechnician: roleObject?.permissions?.add_technician,\r\n            updateTechnicianFullAccess: roleObject?.permissions?.update_technician?.full_access,\r\n            deleteTechnician: roleObject?.permissions?.delete_technician,\r\n            viewTechnicianDetailsFullAccess: roleObject?.permissions?.view_technician_details?.full_access,\r\n            viewTechnicianDetailsTechnicianPhone: roleObject?.permissions?.view_technician_details?.technician_phone,\r\n            viewDashboardFullAccess: roleObject?.permissions?.view_dashboard_full_access,\r\n            addNewServices: roleObject?.permissions?.add_new_services,\r\n            updateServicesFullAccess: roleObject?.permissions?.update_services?.full_access,\r\n            inActiveActive: roleObject?.permissions?.inactive_active,\r\n            viewServicesListFullAccess: roleObject?.permissions?.view_services_list?.full_access,\r\n            addTicket: roleObject?.permissions?.add_ticket,\r\n            editTicketFullAccess: roleObject?.permissions?.edit_ticket?.full_access,\r\n            deleteTicket: roleObject?.permissions?.delete_ticket,\r\n            viewTicketFullAccess: roleObject?.permissions?.view_ticket?.full_access,\r\n            addClients: roleObject?.permissions?.add_clients,\r\n            editClientsFullAccess: roleObject?.permissions?.edit_clients?.full_access,\r\n            viewClientsFullAccess: roleObject?.permissions?.view_clients?.full_access,\r\n            viewBroadcastedListFullAccess: roleObject?.permissions?.view_broadcastedList,\r\n            addRole: roleObject?.permissions?.add_role,\r\n            editRoleFullAccess: roleObject?.permissions?.edit_role_permissions?.full_access,\r\n            deleteRole: roleObject?.permissions?.delete_role,\r\n            viewRoleFullAccess: roleObject?.permissions?.view_role?.full_access\r\n        };\r\n        return resultObject;\r\n    }\r\n\r\n    handleViewRole = (roleObject) => {\r\n        let roleObjectValue = this.parseRoleObject(roleObject);\r\n        console.log(\"roleObjectValue is\", roleObjectValue);\r\n        this.setState({ isViewRoleOpen: true, selectedRole: roleObjectValue });\r\n    }\r\n\r\n    handleCloseViewRole = () => {\r\n        this.setState({ isViewRoleOpen: false });\r\n    }\r\n\r\n    toggleOpenFeedBackPopup = (viewfeedback) => {\r\n        this.setState({ isOpenFeedBackPopup: true, viewfeedback })\r\n    }\r\n\r\n    toggleCloseFeedBackPopup = () => {\r\n        this.setState({ isOpenFeedBackPopup: false, viewfeedback: [] })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getAllAvailableRoles();\r\n    }\r\n\r\n    getFormattedServices = (services) => {\r\n        console.log(services)\r\n        let secondary_services_list = [];\r\n        services && services.length > 0 && services.map((item) => {\r\n            secondary_services_list.push(item.secondary_services_id.service_name);\r\n        })\r\n        return secondary_services_list.length > 0 ? secondary_services_list.join(\", \") : \"\";\r\n    }\r\n\r\n    getParsedData = (data) => {\r\n        let parsedData = data && data.length > 0 && data.map((item) => {\r\n            return {\r\n                center_id: item.center_obj_id?.qr_details?.qr_id,\r\n                center_name: item.center_obj_id?.center_name,\r\n                ticket_id: item?.ticket_obj_id?._id,\r\n                technicianName: item?.ticket_obj_id?.assigned_ids?.assigned_technician_id?.personal_details?.name,\r\n                technicianPhone: item?.ticket_obj_id?.assigned_ids?.assigned_technician_id?.personal_details?.phone?.mobile_number,\r\n                Address: item?.ticket_obj_id?.address_details?.house_number + \" \" + item?.ticket_obj_id?.address_details?.locality + \" \" + item?.ticket_obj_id?.address_details?.city + \" \" + item?.ticket_obj_id?.address_details?.state + \" \" + item?.ticket_obj_id?.address_details?.country,\r\n                customer_name: item?.ticket_obj_id?.personal_details?.name,\r\n                customer_number: item?.ticket_obj_id?.personal_details?.alternate_phone?.mobile_number,\r\n                FeedBack: JSON.stringify(item?.feedBackResponse),\r\n                viewfeedback: item?.feedBackResponse,\r\n                over_all_rating: item?.over_all_rating,\r\n                is_aldready_submitted: item?.is_aldready_submitted ? \"Yes\" : \"No\",\r\n                View_ticket: item?.ticket_obj_id?._id,\r\n            }\r\n        });\r\n\r\n        return parsedData;\r\n    }\r\n\r\n    getAllAvailableRoles() {\r\n        new AdminApiModule().getAllAvailableRoles().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.length > 0) {\r\n                parsedData = res.data;\r\n            }\r\n            this.setState({\r\n                rolesList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleAddRole = () => {\r\n        this.props.history.push('/add-role');\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({ isRoleEdit: false });\r\n    };\r\n\r\n    handleEditRole = (id) => {\r\n        this.props.history.push('/add-role?edit=' + id)\r\n    }\r\n\r\n    render() {\r\n        const { rolesList } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='add-service-button'>\r\n                    {\r\n                        this.props.reduxState?.adminDetails?.role_id?.permissions?.add_role &&  <Button variant=\"contained\" className='text-transform-none' onClick={this.handleAddRole}>\r\n                        Add a Role\r\n                    </Button>\r\n                    }\r\n                   \r\n                </div>\r\n\r\n                <div>\r\n\r\n                    {\r\n                        this.props.reduxState?.adminDetails?.role_id?.permissions?.view_role?.full_access ? <>\r\n                            <TableContainer component={Paper}>\r\n                                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Role Name</TableCell>\r\n                                            <TableCell>Action</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {rolesList && rolesList.length > 0 && rolesList.map((row) => (\r\n                                            <TableRow\r\n                                                key={row._id}\r\n                                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                            >\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.role_name}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    <Button variant=\"outlined\" onClick={() => this.handleEditRole(row._id)}>\r\n                                                        Edit Role\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    <Button variant=\"outlined\" onClick={() => this.handleViewRole(row)}>\r\n                                                        View Role\r\n                                                    </Button>\r\n                                                </TableCell>\r\n\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n\r\n                        </> : \"No access to view role , contact admin\"\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <ViewRole isViewRoleOpen={this.state.isViewRoleOpen}\r\n                        handleCloseViewRole={this.handleCloseViewRole}\r\n                        roleObject={this.state.selectedRole}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reduxState: state.userReducer,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(Roles));\r\n\r\n","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../../Styles/style.css';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport AdminApiModule from '../../components/AdminApi/Api/api';\r\nimport { withRouter } from \"react-router\";\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport CenterRegistrationApi from '../../components/centerRegistration/Api/api';\r\nimport CenterComponentApi from '../../components/centerComponent/api/api';\r\nimport { IndianStates } from '../../assets/IndianStates';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nconst AVAILABLE_TIME_PREFERENCES = [\r\n    'IMMEDIATELY',\r\n    'WITHIN_24_HOURS',\r\n    'SPECIFIC_DATE_AND_TIME',\r\n]\r\n\r\nclass AddTicket extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            serviceRequired: '',\r\n            specificRequirement: '',\r\n            name: '',\r\n            phoneNumber: '',\r\n            alternatePhoneNumber: '',\r\n            houseNumber: '',\r\n            locality: '',\r\n            city: '',\r\n            state: '',\r\n            country: 'INDIA',\r\n            pincode: '',\r\n            timePreference: '',\r\n            authorizedForClient: '',\r\n            offerCode: 'OniT 2022',\r\n            is_paid: false,\r\n            closing_ticket_price: \"\",\r\n            admin_remarks: \"\",\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            specific_date_time: new Date(),\r\n            isFormValid: false,\r\n            servicesList: [],\r\n            clientsList: [],\r\n\r\n            isRegistering: false,\r\n            isEditDetailsExists: false,\r\n            doesTicketExists: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllServicesExists();\r\n        this.getAllClients();\r\n\r\n        let editTicketId = new URLSearchParams(this.props.location.search).get(\"edit\")\r\n\r\n        console.log(editTicketId, \"edit ticket id\")\r\n\r\n        if (editTicketId != null) {\r\n            this.getTicketDetails(editTicketId)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onChangeSpecificDateAndTime(newValue) {\r\n        this.setState({ specific_date_time: newValue })\r\n    }\r\n\r\n\r\n    getTicketObjIdForEdit() {\r\n        return new URLSearchParams(this.props.location.search).get(\"edit\")\r\n    }\r\n\r\n    getTicketDetails(editTicketId) {\r\n        let payload = {\r\n            ticket_obj_id: editTicketId\r\n        }\r\n        this.setState({\r\n            isEditDetailsExists: true,\r\n        })\r\n\r\n        new AdminApiModule().getAllTickets(payload).then(res => {\r\n            if (res?.data?.length) {\r\n                this.setState({\r\n                    doesTicketExists: true,\r\n                })\r\n\r\n                this.updateTicketDetails(res?.data?.[0])\r\n            }\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    updateTicketDetails(ticketDetails) {\r\n        this.setState({\r\n            serviceRequired: ticketDetails?.service_provided_for?._id,\r\n            specificRequirement: ticketDetails?.specific_requirement,\r\n            name: ticketDetails?.personal_details?.name,\r\n            phoneNumber: ticketDetails?.personal_details?.primary_phone?.mobile_number,\r\n            alternatePhoneNumber: ticketDetails?.personal_details?.alternate_phone?.mobile_number,\r\n            houseNumber: ticketDetails?.address_details?.house_number,\r\n            locality: ticketDetails?.address_details?.locality,\r\n            city: ticketDetails?.address_details?.city,\r\n            state: ticketDetails?.address_details?.state,\r\n            country: 'INDIA',\r\n            pincode: ticketDetails?.address_details?.pincode,\r\n            timePreference: ticketDetails?.time_preference?.time_preference_type,\r\n            authorizedForClient: ticketDetails?.authorized_client_id?._id,\r\n            offerCode: 'OniT 2022',\r\n            is_paid: ticketDetails?.admin_setting?.is_paid,\r\n            closing_ticket_price: ticketDetails?.closing_ticket_price,\r\n            admin_remarks: ticketDetails?.remarks.admin_remarks,\r\n            specific_date_time: ticketDetails?.time_preference?.specific_date_time\r\n        })\r\n    }\r\n\r\n    getAllServicesExists() {\r\n        new CenterRegistrationApi().getAllServices().then(res => {\r\n            this.setState({\r\n                servicesList: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getAllClients() {\r\n        new AdminApiModule().getAllClients().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.length > 0) {\r\n                parsedData = res.data;\r\n            }\r\n\r\n            this.setState({\r\n                clientsList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleChangeCheckBox = (e) => {\r\n        this.setState({ is_paid: e.target.checked })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { serviceRequired, specificRequirement, name, phoneNumber, alternatePhoneNumber,\r\n            houseNumber, locality, city, state, is_paid, country, pincode, timePreference, authorizedForClient, offerCode } = this.state;\r\n\r\n\r\n        if (!(serviceRequired &&\r\n            name &&\r\n            phoneNumber &&\r\n            houseNumber &&\r\n            pincode &&\r\n            timePreference &&\r\n            offerCode\r\n        )) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n\r\n        if (this.state.timePreference == \"SPECIFIC_DATE_AND_TIME\") {\r\n            if (!this.state.specific_date_time) {\r\n                this.showDialog(true, \"error\", \"Please fill in Specific date and time\")\r\n                return\r\n\r\n            }\r\n        }\r\n\r\n        let payload = {\r\n            personal_details: {\r\n                primary_phone: {\r\n                    country_code: \"+91\",\r\n                    mobile_number: phoneNumber\r\n                },\r\n                alternate_phone: {\r\n                    country_code: alternatePhoneNumber.length > 0 ? \"+91\" : \"\",\r\n                    mobile_number: alternatePhoneNumber\r\n                },\r\n                name: name,\r\n            },\r\n            specific_requirement: specificRequirement,\r\n            service_provided_for: serviceRequired,\r\n            address_details: {\r\n                house_number: houseNumber,\r\n                locality: locality,\r\n                city: city,\r\n                state: state,\r\n                pincode: pincode,\r\n                country: country,\r\n            },\r\n            time_preference: {\r\n                time_preference_type: timePreference,\r\n                specific_date_time: this.state.specific_date_time,\r\n            },\r\n            offers_applied: {\r\n                offer_code: offerCode\r\n            },\r\n            is_paid\r\n        };\r\n\r\n        if (authorizedForClient) {\r\n            payload['authorized_client_id'] = authorizedForClient\r\n        }\r\n\r\n\r\n        if (this.state.isEditDetailsExists) {\r\n\r\n            payload.ticket_obj_id = this.getTicketObjIdForEdit()\r\n            payload.closing_ticket_price = this.state.closing_ticket_price || \"\"\r\n            payload.admin_remarks = this.state.admin_remarks || \"\"\r\n            delete payload.is_paid\r\n            delete payload.authorized_client_id\r\n\r\n            new AdminApiModule().updateTicket(payload).then(res => {\r\n\r\n                this.showDialog(true, \"success\", \"Ticket updated successfully\");\r\n\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n\r\n                this.props.history.push('/Tickets')\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.showDialog(true, \"error\", err?.response?.data?.message);\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        new AdminApiModule().createTicket(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Ticket Created successfully\");\r\n\r\n            this.handleResetValues()\r\n\r\n            setTimeout(() => {\r\n                this.showDialog(true, \"info\", \"Add more ticket\");\r\n            }, 2000);\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleResetValues() {\r\n        this.setState({\r\n            isRegistering: false,\r\n\r\n            serviceRequired: '',\r\n            specificRequirement: '',\r\n            name: '',\r\n            phoneNumber: '',\r\n            alternatePhoneNumber: '',\r\n            houseNumber: '',\r\n            locality: '',\r\n            city: '',\r\n            state: '',\r\n            country: 'INDIA',\r\n            pincode: '',\r\n            timePreference: '',\r\n            offerCode: '',\r\n            authorizedForClient: '',\r\n            isFormValid: false,\r\n            admin_remarks: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues, isFormValid,\r\n            serviceRequired, specificRequirement, name, phoneNumber, alternatePhoneNumber,\r\n            houseNumber, locality, city, state, country, pincode, timePreference, authorizedForClient, offerCode } = this.state;\r\n\r\n        if (this.state.isEditDetailsExists && !this.state.doesTicketExists) {\r\n\r\n            return <>\r\n                \"Page not found !!!\"\r\n            </>\r\n        }\r\n        if (this.state.isEditDetailsExists) {\r\n            if (!this.props.reduxState?.adminDetails?.role_id?.permissions?.edit_ticket?.full_access) {\r\n              return <>\r\n                No permission to update ticket , contact admin\r\n              </>\r\n            }\r\n      \r\n          } else {\r\n      \r\n            if (!this.props.reduxState?.adminDetails?.role_id?.permissions?.add_ticket) {\r\n              return <>\r\n                No permission to add ticket , contact admin\r\n              </>\r\n            }\r\n          }\r\n      \r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">{\r\n                    this.state.isEditDetailsExists ? \"Update ticket\" :\r\n                        \"Add Ticket\"}</h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Service You Required</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Service You Required\"\r\n                                    name=\"serviceRequired\"\r\n                                    onChange={this.handleChange}\r\n                                    value={serviceRequired}\r\n                                    error={isFormValid && !serviceRequired}\r\n\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Specific Requirement - it helps\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"specificRequirement\"\r\n                                value={specificRequirement}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !specificRequirement}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Name (Contact Person)\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"name\"\r\n                                value={name}\r\n                                disabled={this.state.isEditDetailsExists}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !name}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                disabled={this.state.isEditDetailsExists}\r\n\r\n                                name=\"phoneNumber\"\r\n                                value={phoneNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !phoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Alternate Phone Number\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"alternatePhoneNumber\"\r\n                                value={alternatePhoneNumber}\r\n                                disabled={this.state.isEditDetailsExists}\r\n\r\n                                onChange={this.handleChange}\r\n                                // error={isFormValid && !alternatePhoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"House Number / Street\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"houseNumber\"\r\n                                value={houseNumber}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !houseNumber}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Locality\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"locality\"\r\n                                value={locality}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !locality}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"City\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"city\"\r\n                                value={city}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !city}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"State\"\r\n                                    name=\"state\"\r\n                                    onChange={this.handleChange}\r\n                                    value={state}\r\n                                    error={isFormValid && !state}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Country\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"country\"\r\n                                value={country}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !country}\r\n                                disabled\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Pincode\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"pincode\"\r\n                                value={pincode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !pincode}\r\n                                inputProps={{ maxLength: 6 }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Time Preference</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Time Preference\"\r\n                                    name=\"timePreference\"\r\n                                    onChange={this.handleChange}\r\n                                    value={timePreference}\r\n                                    error={isFormValid && !timePreference}\r\n\r\n                                >\r\n                                    {AVAILABLE_TIME_PREFERENCES?.map(ite => {\r\n                                        return <MenuItem value={ite}>\r\n                                            {ite}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {\r\n                            this.state.timePreference == \"SPECIFIC_DATE_AND_TIME\" ? <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n\r\n                                    <DateTimePicker\r\n                                        renderInput={(params) => <TextField {...params} />}\r\n                                        label=\"Select date and time\"\r\n                                        value={this.state.specific_date_time}\r\n                                        onChange={(newValue) => {\r\n                                            this.onChangeSpecificDateAndTime(newValue);\r\n                                        }}\r\n                                        minDate={new Date()}\r\n                                        minTime={new Date(0, 0, 0, 8)}\r\n                                        maxTime={new Date(0, 0, 0, 20)}\r\n                                    />\r\n                                </LocalizationProvider>\r\n\r\n                            </Grid> : \"\"\r\n                        }\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Offer Code\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"offerCode\"\r\n                                value={offerCode}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !offerCode}\r\n                            />\r\n                        </Grid>\r\n\r\n                        {\r\n                            this.state.isEditDetailsExists ? <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <TextField\r\n                                    id=\"demo-helper-text-misaligned\"\r\n                                    label=\"Closing price\"\r\n                                    style={stylesCss.inputBox}\r\n                                    name=\"closing_ticket_price\"\r\n                                    type=\"number\"\r\n                                    value={this.state.closing_ticket_price}\r\n                                    onChange={this.handleChange}\r\n                                    error={isFormValid && !this.state.closing_ticket_price}\r\n                                />\r\n                            </Grid> : \"\"\r\n                        }\r\n                        {\r\n                            this.state.isEditDetailsExists ? <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <TextField\r\n                                    id=\"demo-helper-text-misaligned\"\r\n                                    label=\"Add admin comments\"\r\n                                    style={stylesCss.inputBox}\r\n                                    name=\"admin_remarks\"\r\n                                    type=\"text\"\r\n                                    value={this.state.admin_remarks}\r\n                                    onChange={this.handleChange}\r\n                                    error={isFormValid && !this.state.admin_remarks}\r\n                                />\r\n                            </Grid> : \"\"\r\n                        }\r\n                        {\r\n                            this.state.isEditDetailsExists ? \" \" : <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                    <InputLabel id=\"demo-simple-select-helper-label\">Authorize for particular client</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-helper-label\"\r\n                                        id=\"demo-simple-select-helper\"\r\n                                        label=\"Authorize for particular client\"\r\n                                        name=\"authorizedForClient\"\r\n                                        onChange={this.handleChange}\r\n                                        value={authorizedForClient}\r\n                                    // error={isFormValid && !authorizedForClient}\r\n\r\n                                    >\r\n                                        {this.state.clientsList?.map(ite => {\r\n                                            return <MenuItem value={ite._id}>\r\n                                                {ite.client_name}\r\n                                            </MenuItem>\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        }\r\n\r\n                        {\r\n                            this.state.isEditDetailsExists ? \"\" : <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                                <FormGroup>\r\n                                    <FormControlLabel control={<Switch checked={this.state.is_paid} onChange={this.handleChangeCheckBox} />} label=\"Pay during Acceptance\" />\r\n                                </FormGroup>\r\n                            </Grid>\r\n                        }\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >{this.state.isEditDetailsExists ? \"Update \" : \"SUBMIT\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  reduxState: state.userReducer,\r\n})\r\nexport default connect(mapStateToProps, null)(withRouter(AddTicket));\r\n\r\n","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../../Styles/style.css';\r\nimport AdminApiModule from '../../components/AdminApi/Api/api';\r\nimport { Button } from '@mui/material';\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n};\r\n\r\nclass BroadCastedList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [\r\n                {\r\n                    name: \"center_id\",\r\n                    label: \"Center Id\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"center_name\",\r\n                    label: \"Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                }, {\r\n                    name: \"center_phone\",\r\n                    label: \"Center phone number\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"ticket_id\",\r\n                    label: \"ticket id\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"customer_name\",\r\n                    label: \"customer_name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"customer_number\",\r\n                    label: \"customer_number\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Address\",\r\n                    label: \"Address\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            return <>\r\n                                {\r\n                                    value.status_of_ticket == \"ACCEPTED\" ? value?.ticket_obj_id?.address_details?.house_number + \" \" + value?.ticket_obj_id?.address_details?.locality + \" \" + value?.ticket_obj_id?.address_details?.city + \" \" + value?.ticket_obj_id?.address_details?.state + \" \" + value?.ticket_obj_id?.address_details?.country : \"-\"\r\n                                }\r\n                            </>\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    name: \"status_of_broadcast\",\r\n                    label: \"Status of broadcast\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n\r\n            ],\r\n            broadCastedList: []\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getAllBroadCastedList();\r\n    }\r\n\r\n    getFormattedServices = (services) => {\r\n        console.log(services)\r\n        let secondary_services_list = [];\r\n        services && services.length > 0 && services.map((item) => {\r\n            secondary_services_list.push(item.secondary_services_id.service_name);\r\n        })\r\n        return secondary_services_list.length > 0 ? secondary_services_list.join(\", \") : \"\";\r\n    }\r\n\r\n    getParsedData = (data) => {\r\n        let parsedData = data && data.length > 0 && data.map((item) => {\r\n            return {\r\n                center_id: item.center_obj_id?.qr_details?.qr_id,\r\n                center_name: item.center_obj_id?.center_name,\r\n                ticket_id: item?.ticket_obj_id?._id,\r\n                Address: item,\r\n                center_phone: item.center_obj_id?.personal_details?.phone?.mobile_number,\r\n                customer_name: item?.ticket_obj_id?.personal_details?.name,\r\n                customer_number: item?.ticket_obj_id?.personal_details?.alternate_phone?.mobile_number,\r\n                // broadcast_id: item?._id,\r\n                status_of_broadcast: item?.status_of_ticket\r\n            }\r\n        });\r\n\r\n        return parsedData;\r\n    }\r\n\r\n    getAllBroadCastedList() {\r\n        new AdminApiModule().getAllBroadCastedList().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.length > 0) {\r\n                parsedData = this.getParsedData(res.data);\r\n            }\r\n            this.setState({\r\n                broadCastedList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MUIDataTable\r\n                    title={\"Broadcasted list\"}\r\n                    data={this.state.broadCastedList}\r\n                    columns={this.state.columns}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BroadCastedList;\r\n","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../../Styles/style.css';\r\nimport { Alert, FormControlLabel, FormGroup, InputAdornment, Snackbar, Switch, Typography } from '@mui/material'\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Chip from '@mui/material/Chip';\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport CenterRegistrationApi from '../../components/centerRegistration/Api/api'\r\nimport { IndianStates } from '../../assets/IndianStates';\r\nimport th from 'date-fns/esm/locale/th/index.js';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n  inputBox: {\r\n    width: '100%',\r\n    marginBottom: \"10px\"\r\n  },\r\n  gridStyle: {\r\n    width: '80%',\r\n    margin: 'auto'\r\n  },\r\n  paddingInnerGrids: {\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n    paddingTop: \"10px\"\r\n  }\r\n}\r\n\r\nclass CenterRegistration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      center_name: \"\",\r\n      personal_details: {\r\n        phone: {\r\n          country_code: \"+91\",\r\n          mobile_number: \"\",\r\n        },\r\n        email: \"\",\r\n        name: \"\",\r\n        user_name: \"\",\r\n        about: \"\",\r\n      },\r\n      primary_services: \"\",\r\n      secondary_services: {\r\n        secondary_services_id: \"\",\r\n        priority: \"\",\r\n      },\r\n      address_details: {\r\n        // longitude: \"\",\r\n        // latitude: \"\",\r\n        address_line: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        pincode: \"\",\r\n        additional_pincode: \"\",\r\n        country: \"INDIA\",\r\n        // short_code_for_place: \"\",\r\n        // google_geo_location: \"\",\r\n      },\r\n      no_of_technicians: \"\",\r\n      automate_qr_code: false,\r\n      qr_code: \"\",\r\n      upi_id: \"\",\r\n      toast: {\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n\r\n      },\r\n      isFormValid: false,\r\n      servicesList: [],\r\n\r\n      sendingOtp: false,\r\n      isOtpSentSuccess: false,\r\n      otpEntered: '',\r\n\r\n      isVerifyingOtp: false,\r\n      isOtpVerfied: false,\r\n\r\n      isRegistering: false,\r\n\r\n      allClientsList: [],\r\n      clients_ids_list: [],\r\n\r\n      login_into_application: false,\r\n      accepting_broadcast_ticket: false,\r\n\r\n      doesCenterExists: false,\r\n      isEditDetailsExists: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllServicesExists()\r\n    this.getAllClients()\r\n\r\n    let path = window.location.hash.split('?')\r\n    console.log(path, \"path\", new URLSearchParams(this.props.location.search).get(\"edit\"))\r\n    let editCenterId = new URLSearchParams(this.props.location.search).get(\"edit\")\r\n\r\n    if (editCenterId != null) {\r\n      this.getCenterDetails(editCenterId)\r\n    }\r\n\r\n  }\r\n\r\n  getCenterIdForEdit() {\r\n    return new URLSearchParams(this.props.location.search).get(\"edit\")\r\n  }\r\n\r\n  getCenterDetails(id) {\r\n    let payload = {\r\n      center_obj_id: id,\r\n    }\r\n\r\n    this.setState({\r\n      isEditDetailsExists: true,\r\n    })\r\n\r\n    new CenterRegistrationApi().getCenterDetails(payload).then(res => {\r\n\r\n      if (res?.data?.length) {\r\n        this.setState({\r\n          doesCenterExists: true,\r\n        })\r\n        this.updateStateOfEditData(res?.data?.[0])\r\n      }\r\n\r\n\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n  updateStateOfEditData(centerDetails) {\r\n    this.setState({\r\n      center_name: centerDetails?.center_name,\r\n      personal_details: {\r\n        phone: {\r\n          country_code: \"+91\",\r\n          mobile_number: centerDetails?.personal_details?.phone?.mobile_number,\r\n        },\r\n        email: centerDetails?.personal_details?.email,\r\n        name: centerDetails?.personal_details?.name,\r\n        user_name: centerDetails?.personal_details?.user_name,\r\n        about: centerDetails?.personal_details?.about,\r\n      },\r\n      primary_services: centerDetails?.services?.primary_services?._id,\r\n      secondary_services: {\r\n        secondary_services_id: centerDetails?.services?.secondary_services?.[0]?.secondary_services_id?._id,\r\n        priority: centerDetails?.services?.secondary_services?.[0]?.secondary_services_id?.priority,\r\n      },\r\n      address_details: {\r\n        // longitude: centerDetails?.address_details?.longitude,\r\n        // latitude: centerDetails?.address_details?.latitude,\r\n        address_line: centerDetails?.address_details?.address_line,\r\n        city: centerDetails?.address_details?.city,\r\n        state: centerDetails?.address_details?.state,\r\n        pincode: centerDetails?.address_details?.pincode,\r\n        additional_pincode: centerDetails?.address_details?.additional_pincode,\r\n        country: \"INDIA\",\r\n        // short_code_for_place: centerDetails?.address_details?.short_code_for_place,\r\n        // google_geo_location: centerDetails?.address_details?.google_geo_location,\r\n      },\r\n      upi_id: centerDetails?.payment_details?.upi_id,\r\n      no_of_technicians: centerDetails?.no_of_technicians,\r\n      clients_ids_list: centerDetails?.clients_ids_list?.map(ite => ite._id),\r\n      login_into_application: centerDetails?.disabled_for?.login_into_application,\r\n      accepting_broadcast_ticket: centerDetails?.disabled_for?.accepting_broadcast_ticket,\r\n\r\n    })\r\n  }\r\n\r\n  getAllClients() {\r\n    new CenterRegistrationApi().getAllClients().then(res => {\r\n      this.setState({\r\n        allClientsList: res.data\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  getAllServicesExists() {\r\n    new CenterRegistrationApi().getAllActiveServices().then(res => {\r\n      this.setState({\r\n        servicesList: res.data\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  showDialog = (open, type, msg) => {\r\n    this.setState({\r\n      toast: {\r\n        open: open,\r\n        msg: msg,\r\n        duration: 5000,\r\n        type: type\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  closeDialog = (open = false) => {\r\n    this.setState({\r\n      toast: {\r\n        open: open,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  handleInputChangeClients = (event) => {\r\n\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    console.log(value)\r\n\r\n    this.setState({\r\n      clients_ids_list: typeof value === 'string' ? value.split(',') : value\r\n    })\r\n\r\n\r\n  }\r\n\r\n  handleChangeInputOuter = (e) => {\r\n    let { name, value } = e.target\r\n\r\n    if (name === \"primary_services\") {\r\n      this.setState({\r\n        secondary_services: {\r\n          ...this.state.secondary_services,\r\n          secondary_services_id: value\r\n        }\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    }, () => {\r\n      console.log(this.state)\r\n    })\r\n  }\r\n\r\n  handleChangePersonalDetails = (e) => {\r\n    let { name, value } = e.target\r\n\r\n    this.setState({\r\n      personal_details: {\r\n        phone: {\r\n          ...this.state.personal_details.phone,\r\n          [name]: value\r\n\r\n        }\r\n      }\r\n    }, () => {\r\n      console.log(this.state)\r\n    })\r\n  }\r\n\r\n  handleResetStateValues = () => {\r\n    this.setState({\r\n      center_name: \"\",\r\n      personal_details: {\r\n        phone: {\r\n          country_code: \"+91\",\r\n          mobile_number: \"\",\r\n        },\r\n        email: \"\",\r\n        name: \"\",\r\n        user_name: \"\",\r\n        about: \"\",\r\n      },\r\n      primary_services: \"\",\r\n      secondary_services: {\r\n        secondary_services_id: \"\",\r\n        priority: \"\",\r\n      },\r\n      address_details: {\r\n        // longitude: \"\",\r\n        // latitude: \"\",\r\n        address_line: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        pincode: \"\",\r\n        additional_pincode: \"\",\r\n        country: \"INDIA\",\r\n        // short_code_for_place: \"\",\r\n        // google_geo_location: \"\",\r\n      },\r\n      no_of_technicians: \"\",\r\n      qr_code: \"\",\r\n      upi_id: \"\",\r\n\r\n      isFormValid: false,\r\n\r\n      sendingOtp: false,\r\n      isOtpSentSuccess: false,\r\n      otpEntered: '',\r\n\r\n      isVerifyingOtp: false,\r\n      isOtpVerfied: false,\r\n\r\n      isRegistering: false,\r\n      clients_ids_list: []\r\n    })\r\n  }\r\n\r\n  handleChangeAddressDetails = (e) => {\r\n\r\n    let { name, value } = e.target\r\n\r\n    if (name === \"pincode\") {\r\n      if (value.length <= 6) {\r\n        this.setState({\r\n          address_details: {\r\n            ...this.state.address_details,\r\n            additional_pincode: value\r\n          }\r\n        }, () => {\r\n          this.setState({\r\n            address_details: {\r\n              ...this.state.address_details,\r\n              [name]: value\r\n            }\r\n          })\r\n        })\r\n\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      address_details: {\r\n        ...this.state.address_details,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChangeSecondaryServiceDetails = (e) => {\r\n\r\n    let { name, value } = e.target\r\n\r\n    this.setState({\r\n      secondary_services: {\r\n        ...this.state.secondary_services,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  handleRegister = () => {\r\n\r\n    if (!(this.state.center_name &&\r\n      this.state.personal_details.phone.mobile_number &&\r\n      this.state.primary_services &&\r\n      this.state.secondary_services.secondary_services_id &&\r\n      this.state.address_details.address_line &&\r\n      this.state.address_details.city &&\r\n      this.state.address_details.state &&\r\n      this.state.address_details.pincode &&\r\n      this.state.address_details.country &&\r\n      (this.state.no_of_technicians === 0 || this.state.no_of_technicians) &&\r\n      this.state.address_details.additional_pincode)) {\r\n\r\n      this.setState({\r\n        isFormValid: true\r\n      })\r\n\r\n      this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n      return\r\n    }\r\n\r\n    let payload = {\r\n      center_name: this.state.center_name,\r\n      personal_details: this.state.personal_details,\r\n      primary_services: this.state.primary_services,\r\n      secondary_services: [\r\n        {\r\n          secondary_services_id: this.state.secondary_services.secondary_services_id,\r\n          priority: 1,\r\n\r\n        }\r\n      ],\r\n      address_details: this.state.address_details,\r\n      no_of_technicians: this.state.no_of_technicians,\r\n      clients_ids_list: this.state.clients_ids_list\r\n    }\r\n\r\n    this.setState({\r\n      isRegistering: true,\r\n    })\r\n\r\n    if (this.state.isEditDetailsExists) {\r\n\r\n      payload.center_obj_id = this.getCenterIdForEdit()\r\n      payload = {\r\n        ...payload,\r\n        login_into_application: this.state.login_into_application,\r\n        accepting_broadcast_ticket: this.state.accepting_broadcast_ticket,\r\n        upi_id: this.state.upi_id\r\n      }\r\n      new CenterRegistrationApi().updateCenterAdmin(payload).then(res => {\r\n\r\n        this.showDialog(true, \"success\", \"Center Updated \");\r\n\r\n        this.setState({\r\n          isRegistering: false,\r\n        })\r\n\r\n      }).catch(err => {\r\n        console.log(err)\r\n        this.setState({\r\n          isRegistering: false,\r\n        })\r\n        this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    payload = {\r\n      ...payload,\r\n      qr_code: this.state.qr_code,\r\n      automate_qr_code: this.state.automate_qr_code\r\n    }\r\n\r\n    new CenterRegistrationApi().adminCreateCenter(payload).then(res => {\r\n\r\n      this.showDialog(true, \"success\", \"Center added ! Add more centers \");\r\n\r\n      this.setState({\r\n        isRegistering: false,\r\n      })\r\n\r\n      this.handleResetStateValues()\r\n\r\n    }).catch(err => {\r\n      console.log(err)\r\n      this.setState({\r\n        isRegistering: false,\r\n      })\r\n      this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n  handleChangeCheckBox = (e, name) => {\r\n    this.setState({ [name]: e.target.checked })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const { toast: snackBarValues, isFormValid } = this.state\r\n\r\n    if (this.state.isEditDetailsExists && !this.state.doesCenterExists) {\r\n\r\n      return <>\r\n        \"Page not found !!!\"\r\n      </>\r\n    }\r\n\r\n    if (this.state.isEditDetailsExists) {\r\n      if (!this.props.reduxState?.adminDetails?.role_id?.permissions?.update_center?.full_access) {\r\n        return <>\r\n          No permission to update center , contact admin\r\n        </>\r\n      }\r\n\r\n    } else {\r\n\r\n      if (!this.props.reduxState?.adminDetails?.role_id?.permissions?.add_center) {\r\n        return <>\r\n          No permission to add center , contact admin\r\n        </>\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n\r\n        {\r\n          snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n            <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n              {snackBarValues.msg}\r\n            </Alert>\r\n          </Snackbar>\r\n        }\r\n        <h2 className=\"text-align-center\">{this.state.isEditDetailsExists ? \"Update center\" : \"Add Center\"}</h2>\r\n        <Item>\r\n          <Grid container  >\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please provide your Shop / Center (Name)\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Shop / Center (Name)\"\r\n                name=\"center_name\"\r\n                onChange={this.handleChangeInputOuter}\r\n                style={stylesCss.inputBox}\r\n                error={isFormValid && !this.state.center_name}\r\n                value={this.state.center_name}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please provide your Shop / Center (Name)\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"What's App Number\"\r\n                name=\"mobile_number\"\r\n                disabled={this.state.isOtpSentSuccess}\r\n                onChange={this.handleChangePersonalDetails}\r\n                style={stylesCss.inputBox}\r\n                error={isFormValid && !this.state.personal_details.phone.mobile_number}\r\n                value={this.state.personal_details.phone.mobile_number}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Typography>+91</Typography>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                inputProps={{ maxLength: 10 }}\r\n\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n              <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Main Service You Offer / Need</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"Main Service You Offer / Need\"\r\n                  name=\"primary_services\"\r\n                  input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\r\n                  onChange={this.handleChangeInputOuter}\r\n                  error={isFormValid && !this.state.primary_services}\r\n                  value={this.state.primary_services}\r\n\r\n\r\n                >\r\n                  {this.state.servicesList?.map(ite => {\r\n                    return <MenuItem value={ite._id}>\r\n                      {ite.service_name}\r\n                    </MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* change herer */}\r\n            <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n              <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Choose clients</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"Choose clients\"\r\n                  name=\"clients_ids_list\"\r\n                  multiple\r\n                  onChange={this.handleInputChangeClients}\r\n                  error={isFormValid && !this.state.clients_ids_list.length}\r\n                  value={this.state.clients_ids_list}\r\n                >\r\n                  {this.state.allClientsList?.map(ite => {\r\n                    return <MenuItem value={ite._id}>\r\n                      {ite.client_name}\r\n                    </MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n              <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Other Service You Offer / Need</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"Other Service You Offer / Need\"\r\n                  name=\"secondary_services_id\"\r\n                  onChange={this.handleChangeSecondaryServiceDetails}\r\n                  error={isFormValid && !this.state.secondary_services.secondary_services_id}\r\n                  value={this.state.secondary_services.secondary_services_id}\r\n\r\n                // multiple\r\n                >\r\n                  {this.state.servicesList?.map(ite => {\r\n                    return <MenuItem value={ite._id}>\r\n                      {ite.service_name}\r\n                    </MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please enter your address\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Address\"\r\n                name=\"address_line\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                style={stylesCss.inputBox}\r\n                error={isFormValid && !this.state.address_details.address_line}\r\n                value={this.state.address_details.address_line}\r\n\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please enter your city\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"City\"\r\n                name=\"city\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                error={isFormValid && !this.state.address_details.city}\r\n                value={this.state.address_details.city}\r\n\r\n                style={stylesCss.inputBox}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"State\"\r\n                  name=\"state\"\r\n                  onChange={this.handleChangeAddressDetails}\r\n                  value={this.state.address_details.state}\r\n                  error={isFormValid && !this.state.address_details.state}\r\n\r\n                >\r\n                  {IndianStates?.map(ite => {\r\n                    return <MenuItem value={ite.value}>\r\n                      {ite.value}\r\n                    </MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                error={isFormValid && !this.state.address_details.country}\r\n                value={this.state.address_details.country}\r\n                style={stylesCss.inputBox}\r\n                disabled\r\n              />\r\n            </Grid>\r\n\r\n            {\r\n              this.state.isEditDetailsExists && <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                <FormGroup>\r\n                  <FormControlLabel control={<Switch checked={this.state.login_into_application} onChange={(e) => this.handleChangeCheckBox(e, \"login_into_application\")} />} label=\"Disable login\" />\r\n                </FormGroup>\r\n              </Grid>\r\n            }\r\n\r\n            {\r\n              this.state.isEditDetailsExists && <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                <FormGroup>\r\n                  <FormControlLabel control={<Switch checked={this.state.accepting_broadcast_ticket} onChange={(e) => this.handleChangeCheckBox(e, \"accepting_broadcast_ticket\")} />} label=\"Disable accepting ticket\" />\r\n                </FormGroup>\r\n              </Grid>\r\n            }\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please enter your pincode\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Service Area Pincode (main)\"\r\n                name=\"pincode\"\r\n                type=\"number\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                error={isFormValid && !this.state.address_details.pincode}\r\n                value={this.state.address_details.pincode}\r\n\r\n                style={stylesCss.inputBox}\r\n                inputProps={{ maxLength: 6 }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please enter your additional pincode\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Addtional Service Area Pincode (other)\"\r\n                name=\"additional_pincode\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                error={isFormValid && !this.state.address_details.additional_pincode}\r\n                value={this.state.address_details.additional_pincode}\r\n\r\n                style={stylesCss.inputBox}\r\n                inputProps={{ maxLength: 6 }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n              <FormControl style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Technician Associate</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"Technician Associate\"\r\n                  name=\"no_of_technicians\"\r\n                  onChange={this.handleChangeInputOuter}\r\n                  error={isFormValid && this.state.no_of_technicians === \"\"}\r\n                  value={this.state.no_of_technicians}\r\n\r\n                >\r\n                  {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(ite => {\r\n                    return <MenuItem value={ite}>{ite}</MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {\r\n              this.state.isEditDetailsExists ? \"\" : <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                <FormGroup>\r\n                  <FormControlLabel control={<Switch checked={this.state.automate_qr_code} onChange={(e) => this.handleChangeCheckBox(e, \"automate_qr_code\")} />} label=\"Automate qr code\" />\r\n                </FormGroup>\r\n              </Grid>\r\n            }\r\n            {\r\n              !this.state.isEditDetailsExists ? !this.state.automate_qr_code ? <>\r\n                <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n\r\n                  <TextField\r\n                    helperText=\"Please enter your additional pincode\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"Enter qr code\"\r\n                    name=\"qr_code\"\r\n                    onChange={(e) => {\r\n                      this.setState({ qr_code: e.target.value })\r\n                    }}\r\n                    value={this.state.qr_code}\r\n                    style={stylesCss.inputBox}\r\n                  />\r\n                </Grid>\r\n              </> : \"\"\r\n                : \"\"\r\n            }\r\n            {\r\n              this.state.isEditDetailsExists ? <>\r\n                <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n\r\n                  <TextField\r\n                    helperText=\"Please enter your additional pincode\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"Enter upi id\"\r\n                    name=\"upi_id\"\r\n                    onChange={(e) => {\r\n                      this.setState({ upi_id: e.target.value })\r\n                    }}\r\n                    value={this.state.upi_id}\r\n                    style={stylesCss.inputBox}\r\n                  />\r\n                </Grid>\r\n              </> : \"\"\r\n            }\r\n\r\n            {\r\n              this.state.isOtpSentSuccess && !this.state.isOtpVerfied ? <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                <TextField\r\n                  id=\"demo-helper-text-misaligned\"\r\n                  label=\"Enter otp\"\r\n                  name=\"otpEntered\"\r\n                  onChange={this.handleChangeInputOuter}\r\n                  value={this.state.otpEntered}\r\n\r\n                  style={stylesCss.inputBox}\r\n                />\r\n              </Grid> : ''\r\n            }\r\n\r\n\r\n\r\n            <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n\r\n              {<Button\r\n                onClick={() => this.handleRegister()}\r\n                variant=\"contained\"\r\n                disabled={this.state.isRegistering}\r\n              >{this.state.isRegistering ? this.state.isEditDetailsExists ? \"Updating....\" : \"Adding ....\" : this.state.isEditDetailsExists ? \"Update center\" : \"Add center\"}</Button>}\r\n            </Grid>\r\n          </Grid >\r\n        </Item>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  reduxState: state.userReducer,\r\n})\r\nexport default connect(mapStateToProps, null)(withRouter(CenterRegistration));\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../../config/config\";\r\n\r\nclass paymentModule {\r\n    constructor() {\r\n        this.base_url = BASE_URL;\r\n    }\r\n\r\n    getAllCenters() {\r\n        return new Promise((resolve, reject) => {\r\n            axios({\r\n                method: \"get\",\r\n                url: `${this.base_url}center/get-all-orders`,\r\n            })\r\n                .then((res) => {\r\n                    resolve(res.data)\r\n                })\r\n                .catch((err) => {\r\n                    reject(err)\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default paymentModule;","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../Styles/style.css';\r\n\r\nimport OrdersApi from '../components/payments/api/api'\r\n\r\nconst columns = [\r\n    {\r\n        name: \"ticketId\",\r\n        label: \"ticket Id\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"ticketAddress\",\r\n        label: \"ticket Address\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"sumPriceToPay\",\r\n        label: \"sum paid\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"receipt\",\r\n        label: \"receipt\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    }, {\r\n        name: \"payment_status\",\r\n        label: \"payment status\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    }\r\n];\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n    download: false,\r\n    print: false\r\n};\r\n\r\nclass Orders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mappedOrdersList: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllOrders()\r\n    }\r\n\r\n    getAllOrders() {\r\n        new OrdersApi().getAllCenters().then(res => {\r\n\r\n            let mappedOrders = res?.data?.map(ite => {\r\n                return {\r\n                    ticketId: ite?.ticket_obj_id?._id,\r\n                    ticketAddress: ite?.ticket_obj_id?.address_details?.house_number,\r\n                    sumPriceToPay: ite?.sumPriceToPay / 100,\r\n                    receipt: ite?.receipt,\r\n                    payment_status: ite?.payment_status,\r\n                }\r\n            })\r\n\r\n            this.setState({ mappedOrdersList: mappedOrders })\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MUIDataTable\r\n                    title={\"Orders\"}\r\n                    data={this.state.mappedOrdersList}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Orders;","import React, { useEffect, useState } from 'react'\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    useLocation\r\n} from \"react-router-dom\";\r\nimport AdminApiModule from '../../components/AdminApi/Api/api';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Chip from '@mui/material/Chip';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport moment from 'moment'\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function ViewTicket() {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n\r\n    let ticketId = new URLSearchParams(location.search).get(\"ticketId\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [doesTicketExists, setDoesTicketExists] = useState(false)\r\n    const [ticketDetails, setTicketDetails] = useState({})\r\n    const [feedBackList, setFeedBackList] = useState({})\r\n    const [broadCastList, setBroadCastList] = useState([])\r\n    const startLoading = () => {\r\n        setIsLoading(true)\r\n    }\r\n\r\n\r\n    const stopLoading = () => {\r\n        setIsLoading(false)\r\n    }\r\n\r\n    console.log(ticketId, \"ticketId\");\r\n\r\n    useEffect(() => {\r\n        getAllTickets(ticketId)\r\n    }, [])\r\n\r\n    const getAllTickets = (ticketId) => {\r\n        startLoading()\r\n\r\n        let payload = {\r\n            ticket_obj_id: ticketId\r\n        }\r\n        new AdminApiModule().getSingleTicket(payload).then(res => {\r\n            if (res?.data?.results?.length) {\r\n                setDoesTicketExists(true)\r\n                setTicketDetails(res?.data?.results?.[0])\r\n                setFeedBackList(res?.data?.feedBackList?.[0])\r\n                setBroadCastList(res?.data?.broadCastList)\r\n            }\r\n\r\n            stopLoading()\r\n        }).catch(err => {\r\n            stopLoading()\r\n\r\n        })\r\n    }\r\n\r\n    if (isLoading) {\r\n        <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={isLoading}\r\n            onClick={stopLoading}\r\n        >\r\n            <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n    }\r\n\r\n    if (!doesTicketExists) {\r\n        return <>InValid ticket id </>\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n\r\n\r\n\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n\r\n                        <>\r\n                            Ticket Id : {ticketDetails?._id}\r\n                        </>\r\n                        <br />\r\n                        <>\r\n                            Ticket status : {ticketDetails?.ticket_status}\r\n                        </>\r\n                        <br />\r\n                        <>\r\n                            Ticket closing price : {ticketDetails?.closing_ticket_price ? ticketDetails?.closing_ticket_price : \"NIL\"}\r\n                        </>\r\n                        <br />\r\n\r\n                        <>\r\n                            Ticket created by : {ticketDetails?.ticket_created_by}\r\n                        </>\r\n                    </Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item><>\r\n                        Service provided for : <Chip label={ticketDetails?.service_provided_for?.service_name} variant=\"outlined\" />\r\n\r\n                    </></Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item><>\r\n                        Is Technician Assigned :  <Chip label={ticketDetails?.is_technician_assigned ? \"Assigned \" : \"Not Assigned\"} variant=\"outlined\" />\r\n                        <br />\r\n                        Broad cast status :  <Chip label={ticketDetails?.broadcast_status} variant=\"outlined\" />\r\n\r\n                    </></Item>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <Typography\r\n                            sx={{ display: 'inline' }}\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"text.primary\"\r\n                        >\r\n                            {\"Customer Details\"}\r\n                        </Typography>\r\n\r\n                        <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary=\"Customer Name\"\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                sx={{ display: 'inline' }}\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                color=\"text.primary\"\r\n                                            >\r\n                                                {ticketDetails?.personal_details?.name}\r\n                                            </Typography>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary=\"Customer Phone\"\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                sx={{ display: 'inline' }}\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                color=\"text.primary\"\r\n                                            >\r\n                                                {ticketDetails?.personal_details?.primary_phone?.country_code + \"  \" + ticketDetails?.personal_details?.primary_phone?.mobile_number}\r\n                                            </Typography>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                            <Divider variant=\"inset\" component=\"li\" />\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary=\"Address details\"\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                            <Typography\r\n                                                sx={{ display: 'inline' }}\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                color=\"text.primary\"\r\n                                            >\r\n                                                {\"House Number\" + \" -  \" + ticketDetails?.address_details?.house_number}\r\n                                            </Typography>\r\n                                            <br />\r\n                                            <Typography\r\n                                                sx={{ display: 'inline' }}\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                color=\"text.primary\"\r\n                                            >\r\n                                                {\"locality\" + \" -  \" + ticketDetails?.address_details?.locality}\r\n                                            </Typography>\r\n                                            <br />\r\n                                            <Typography\r\n                                                sx={{ display: 'inline' }}\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                color=\"text.primary\"\r\n                                            >\r\n                                                {\"pincode\" + \" -  \" + ticketDetails?.address_details?.pincode}\r\n                                            </Typography>\r\n                                            <br />\r\n                                            <Typography\r\n                                                sx={{ display: 'inline' }}\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                color=\"text.primary\"\r\n                                            >\r\n                                                {\"city\" + \" -  \" + ticketDetails?.address_details?.city}\r\n                                            </Typography>\r\n                                            <br />\r\n                                            <Typography\r\n                                                sx={{ display: 'inline' }}\r\n                                                component=\"span\"\r\n                                                variant=\"body2\"\r\n                                                color=\"text.primary\"\r\n                                            >\r\n                                                {\"state\" + \" -  \" + ticketDetails?.address_details?.state}\r\n                                            </Typography>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        </List></Item>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <List\r\n                            sx={{ width: '100%', maxWidth: 500, bgcolor: 'background.paper' }}\r\n                            subheader={<ListSubheader>Assigned Details</ListSubheader>}\r\n                        >\r\n\r\n                            {\r\n                                ticketDetails?.is_technician_assigned ? <>\r\n                                    <ListItem>\r\n                                        <ListItemIcon style={{ fontWeight: \"bold\" }}>\r\n                                            Assigned Center Name       :-\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id=\"switch-list-label-wifi\" primary={\"     \" + ticketDetails?.assigned_ids?.assigned_center_id?.center_name} />\r\n\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon style={{ fontWeight: \"bold\" }}>\r\n                                            Assigned Center Phone number   :-\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id=\"switch-list-label-wifi\" primary={\"     \" + ticketDetails?.assigned_ids?.assigned_center_id?.personal_details?.phone?.mobile_number} />\r\n\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon style={{ fontWeight: \"bold\" }}>\r\n                                            Assigned Center address :-\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id=\"switch-list-label-wifi\" primary={\"     \" + ticketDetails?.assigned_ids?.assigned_center_id?.address_details?.address_line + \" - \" + ticketDetails?.assigned_ids?.assigned_center_id?.address_details?.city + \" - \" + ticketDetails?.assigned_ids?.assigned_center_id?.address_details?.state + \" - \" + ticketDetails?.assigned_ids?.assigned_center_id?.address_details?.country + \" - \" + ticketDetails?.assigned_ids?.assigned_center_id?.address_details?.additional_pincode} />\r\n\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon style={{ fontWeight: \"bold\" }}>\r\n                                            Assigned Technician Name :-\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id=\"switch-list-label-bluetooth\" primary={ticketDetails?.assigned_ids?.assigned_technician_id?.personal_details?.name} />\r\n\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon style={{ fontWeight: \"bold\" }}>\r\n                                            Assigned Technician phone number :-\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id=\"switch-list-label-bluetooth\" primary={ticketDetails?.assigned_ids?.assigned_technician_id?.personal_details?.phone?.mobile_number} />\r\n\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemIcon style={{ fontWeight: \"bold\" }}>\r\n                                            Assigned Technician address :-\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id=\"switch-list-label-bluetooth\" primary={ticketDetails?.assigned_ids?.assigned_technician_id?.address_details_permanent?.address_line + \" - \" + ticketDetails?.assigned_ids?.assigned_technician_id?.address_details_permanent?.city + \" - \" + ticketDetails?.assigned_ids?.assigned_technician_id?.address_details_permanent?.country + \" - \" + ticketDetails?.assigned_ids?.assigned_technician_id?.address_details_permanent?.state} />\r\n\r\n                                    </ListItem>\r\n\r\n                                </> : \"Not assigned\"\r\n                            }\r\n\r\n                        </List>\r\n                    </Item>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <Item>\r\n                        <List\r\n                            sx={{ width: '100%', maxWidth: 500, bgcolor: 'background.paper' }}\r\n                            subheader={<ListSubheader>Remarks</ListSubheader>}\r\n                        >\r\n                            <ListItem>\r\n                                <ListItemIcon style={{ fontWeight: \"bold\" }}>\r\n                                    Ticket closure remarks      :-\r\n                                </ListItemIcon>\r\n                                <ListItemText id=\"switch-list-label-wifi\" primary={\"     \" + ticketDetails?.remarks?.close_ticket_remarks} />\r\n\r\n                            </ListItem>\r\n                            Additional Remarks\r\n\r\n                            {\r\n                                ticketDetails?.remarks?.additional_remarks?.map((ite, index) => {\r\n                                    return <>\r\n                                        <ListItem>\r\n                                            <ListItemIcon style={{ fontWeight: \"bold\" }}>\r\n                                                {index + 1}\r\n                                            </ListItemIcon>\r\n                                            <ListItemText id=\"switch-list-label-wifi\" primary={\"     \" + ite?.remarks} />\r\n\r\n                                        </ListItem>\r\n\r\n                                    </>\r\n\r\n                                })\r\n                            }\r\n\r\n                        </List>\r\n                    </Item>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <>Feed back list</>\r\n                    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                        {\r\n                            feedBackList?.feedBackResponse?.length ? feedBackList?.feedBackResponse?.map(ite => {\r\n                                return <ListItem>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <ImageIcon />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={ite?.question + \" ? \"} secondary={ite?.answer} />\r\n                                </ListItem>\r\n                            }) : \"No feed back given\"\r\n                        }\r\n\r\n                    </List>\r\n\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <>Broad cast list</>\r\n                    <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                        {\r\n                            broadCastList?.length ?\r\n                                <>\r\n                                    {\r\n                                        broadCastList?.map(item => {\r\n                                            return <ListItem>\r\n                                                <ListItemText primary={\"Broad casted on\"} secondary={moment(item?.createdAt).format(\r\n                                                    'Do MMM, h a',\r\n                                                )} />\r\n\r\n                                                <ListItemText primary={\"Center Id\"} secondary={item.center_obj_id?.qr_details?.qr_id} />\r\n                                                <ListItemText primary={\"center_name\"} secondary={item.center_obj_id?.center_name} />\r\n                                                <ListItemText primary={\"center_phone\"} secondary={item.center_obj_id?.personal_details?.phone?.mobile_number} />\r\n                                                <ListItemText primary={\"Status of broadcast\"} secondary={item?.status_of_ticket} />\r\n\r\n                                            </ListItem>\r\n                                        })\r\n                                    }\r\n                                </>\r\n                                : \"No feed back given\"\r\n                        }\r\n\r\n                    </List>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../Styles/style.css';\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\n\r\n\r\nimport FeedBackApi from '../components/centerRegistration/Api/api'\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n\tbackgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n\t...theme.typography.body2,\r\n\tpadding: theme.spacing(1),\r\n\ttextAlign: 'center',\r\n\tcolor: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\n\r\nconst stylesCss = {\r\n\tinputBox: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: \"10px\"\r\n\t},\r\n\tgridStyle: {\r\n\t\twidth: '80%',\r\n\t\tmargin: 'auto'\r\n\t},\r\n\tpaddingInnerGrids: {\r\n\t\tpaddingRight: \"10px\",\r\n\t\tpaddingLeft: \"10px\",\r\n\t\tpaddingTop: \"10px\"\r\n\t}\r\n}\r\n\r\nexport default function Feedback() {\r\n\r\n\tconst [disabled, setDisabled] = useState(true)\r\n\tconst [invalidFeedBackLink, setInvalidFeedbackLink] = useState(false)\r\n\tconst [isFeedBackAldreadySubmitted, setIsFeedBackAldreadySubmitted] = useState(false)\r\n\tconst [submitFeedBack, setSubmitFeedBack] = useState(false)\r\n\tconst [is_link_expired, setis_link_expired] = useState(false)\r\n\tconst [setOfQuestions, setsetOfQuestions] = useState([{\r\n\t\tquestion: \"Ease in finding us and time taken for booking the service\",\r\n\t\tanswer: \"\"\r\n\t}, {\r\n\t\tquestion: \"Transparency after booking - fixing appointment, visit and closure of ticket\",\r\n\t\tanswer: \"\"\r\n\t}, {\r\n\t\tquestion: \"Availability of tools and equipment, knowledge of the product with service provider\",\r\n\t\tanswer: \"\"\r\n\r\n\t}, {\r\n\t\tquestion: \"Price you paid for the service\",\r\n\t\tanswer: \"\"\r\n\r\n\t}, {\r\n\t\tquestion: \"Overall, your service experience with ONIT\",\r\n\t\tanswer: \"\"\r\n\r\n\t}])\r\n\r\n\r\n\tconst [loading, setLoading] = useState(true)\r\n\r\n\tuseEffect(() => {\r\n\t\tlet token = window.location.hash.split('/')[2]\r\n\r\n\t\tconsole.log(token, \"token\")\r\n\t\tcheckIfFeedBackExists(token)\r\n\r\n\t}, [])\r\n\r\n\r\n\tconst checkIfFeedBackExists = (token) => {\r\n\r\n\t\tsetLoading(true)\r\n\t\tnew FeedBackApi().checkIfFeedBackExistsForThisId({ token: token }).then(res => {\r\n\t\t\tsetInvalidFeedbackLink(res.data.invalidFeedBackLink)\r\n\t\t\tsetIsFeedBackAldreadySubmitted(res.data.isFeedBackAldreadySubmitted)\r\n\t\t\tsetSubmitFeedBack(res.data.submitFeedBack)\r\n\t\t\tsetis_link_expired(res.data.is_link_expired)\r\n\t\t\tsetLoading(false)\r\n\r\n\t\t\tif (res.data.isFeedBackExists?.feedBackResponse?.length) {\r\n\t\t\t\tsetsetOfQuestions(res.data.isFeedBackExists?.feedBackResponse)\r\n\r\n\t\t\t\tconsole.log(res.data.isFeedBackExists?.feedBackResponse, \"Feedback\")\r\n\t\t\t}\r\n\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log(err)\r\n\t\t\tsetLoading(false)\r\n\r\n\t\t})\r\n\t}\r\n\r\n\tconst onChangeOfAnswer = (index, answer) => {\r\n\t\tlet temp = setOfQuestions\r\n\t\ttemp[index]['answer'] = answer\r\n\t\tsetsetOfQuestions(temp)\r\n\t\tconsole.log(setOfQuestions, \"setOfQuestions\")\r\n\r\n\t\tlet ans = checkIfItsValidToSubmit()\r\n\t\tif (ans) {\r\n\t\t\tsetDisabled(false)\r\n\t\t} else {\r\n\t\t\tsetDisabled(true)\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst submitFeedBackOnClick = () => {\r\n\r\n\t\tlet payload = {\r\n\t\t\ttoken: window.location.hash.split('/')[2],\r\n\t\t\tfeedBackResponse: setOfQuestions\r\n\t\t}\r\n\r\n\t\tnew FeedBackApi().submitFeedBack(payload).then(res => {\r\n\r\n\t\t\tcheckIfFeedBackExists(payload.token)\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log(err)\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tconst checkIfItsValidToSubmit = () => {\r\n\t\tlet count = 5, answered = 0;\r\n\t\tsetOfQuestions?.map(ite => {\r\n\t\t\tlet sample = ite.answer != \"\" ? answered += 1 : \"\"\r\n\t\t})\r\n\r\n\t\tif (count == answered) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn <>\r\n\t\t\t<h2 className=\"text-align-center\">Loading page...</h2>\r\n\t\t</>\r\n\r\n\t}\r\n\r\n\tif (invalidFeedBackLink || is_link_expired) {\r\n\r\n\t\treturn <>\r\n\t\t\t<h2 className=\"text-align-center\">Invalid Feedback Link</h2>\r\n\t\t</>\r\n\t}\r\n\r\n\t// if (isFeedBackAldreadySubmitted) {\r\n\t// \treturn <>\r\n\t// \t\t<h2 className=\"text-align-center\">FeedBack is Submitted !!</h2>\r\n\t// \t</>\r\n\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\r\n\t\t\t<h2 className=\"text-align-center\">Feed back</h2>\r\n\t\t\t<Grid container style={{ width: \"60%\", margin: \"auto\" }} >\r\n\t\t\t\t{\r\n\t\t\t\t\tsetOfQuestions?.map((ite, index) => {\r\n\t\t\t\t\t\treturn <>\r\n\t\t\t\t\t\t\t<Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h4\">\r\n\t\t\t\t\t\t\t\t\t{ite.question}\r\n\t\t\t\t\t\t\t\t</Typography>;\r\n\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\r\n\t\t\t\t\t\t\t<Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tid=\"demo-helper-text-misaligned\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Answer\"\r\n\t\t\t\t\t\t\t\t\tname=\"center_name\"\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChangeOfAnswer(index, e.target.value)}\r\n\t\t\t\t\t\t\t\t\t// style={stylesCss.inputBox}\r\n\t\t\t\t\t\t\t\t\t// error={isFormValid && !this.state.center_name}\r\n\t\t\t\t\t\t\t\t\tdefaultValue={ite.answer}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]?.map(ite => {\r\n\t\t\t\t\t\t\t\t\t\treturn <MenuItem value={ite}>\r\n\t\t\t\t\t\t\t\t\t\t\t{ite}\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => submitFeedBackOnClick()}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\tstyle={{ marginTop: \"40px\" }}\r\n\t\t\t\t\tvariant='contained'> Submit Feedback</Button>\r\n\t\t\t</Grid>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { Component } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nimport '../../Styles/style.css';\r\nimport AdminApiModule from '../../components/AdminApi/Api/api';\r\nimport ViewFeedBackPOpup from '../../components/Components/ViewFeedBackPopup'\r\nimport { Button } from '@mui/material';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst options = {\r\n    filterType: 'dropdown',\r\n};\r\n\r\nclass Centers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            feedBackList: [],\r\n            columns: [\r\n                {\r\n                    name: \"center_id\",\r\n                    label: \"Center Id\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"center_name\",\r\n                    label: \"Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"ticket_id\",\r\n                    label: \"ticket id\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"technicianName\",\r\n                    label: \"Technician Name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"technicianPhone\",\r\n                    label: \"Technician Phone\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"customer_name\",\r\n                    label: \"customer_name\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"customer_number\",\r\n                    label: \"customer_number\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Address\",\r\n                    label: \"Address\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"FeedBack\",\r\n                    label: \"FeedBack\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"is_aldready_submitted\",\r\n                    label: \"is FeedBack submitted\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"over_all_rating\",\r\n                    label: \"Over all rating\",\r\n                    options: {\r\n                        filter: true,\r\n                        sort: false,\r\n                    }\r\n                },\r\n                {\r\n                    name: \"viewfeedback\",\r\n                    label: \"view feedback\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            return <>\r\n                                {\r\n                                    <>\r\n                                        <Button className=\"text-transform-none\" variant=\"contained\"\r\n                                            onClick={() => this.toggleOpenFeedBackPopup(value)}>\r\n                                            View Feedback\r\n                                        </Button>\r\n                                    </>\r\n\r\n\r\n                                }\r\n\r\n                            </>\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    name: \"View_ticket\",\r\n                    label: \"view Ticket\",\r\n                    options: {\r\n                        customBodyRender: (value, tableMeta, updateValue) => {\r\n                            return <>\r\n                                {\r\n                                    <>\r\n\r\n                                        <Button variant=\"contained\" onClick={() => this.handleViewTicket(value)}  >View Ticket</Button>\r\n                                    </>\r\n\r\n\r\n                                }\r\n\r\n                            </>\r\n                        }\r\n                    }\r\n                },\r\n            ],\r\n            viewfeedback: [],\r\n            isOpenFeedBackPopup: false\r\n        };\r\n    }\r\n\r\n\r\n\r\n    handleViewTicket = (id) => {\r\n        this.props.history.push('/view-ticket?ticketId=' + id)\r\n\r\n    }\r\n\r\n\r\n    toggleOpenFeedBackPopup = (viewfeedback) => {\r\n        this.setState({ isOpenFeedBackPopup: true, viewfeedback })\r\n    }\r\n\r\n    toggleCloseFeedBackPopup = () => {\r\n        this.setState({ isOpenFeedBackPopup: false, viewfeedback: [] })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getAllFeedBack();\r\n    }\r\n\r\n    getFormattedServices = (services) => {\r\n        console.log(services)\r\n        let secondary_services_list = [];\r\n        services && services.length > 0 && services.map((item) => {\r\n            secondary_services_list.push(item.secondary_services_id.service_name);\r\n        })\r\n        return secondary_services_list.length > 0 ? secondary_services_list.join(\", \") : \"\";\r\n    }\r\n\r\n    getParsedData = (data) => {\r\n        let parsedData = data && data.length > 0 && data.map((item) => {\r\n            return {\r\n                center_id: item.center_obj_id?.qr_details?.qr_id,\r\n                center_name: item.center_obj_id?.center_name,\r\n                ticket_id: item?.ticket_obj_id?._id,\r\n                technicianName: item?.ticket_obj_id?.assigned_ids?.assigned_technician_id?.personal_details?.name,\r\n                technicianPhone: item?.ticket_obj_id?.assigned_ids?.assigned_technician_id?.personal_details?.phone?.mobile_number,\r\n                Address: item?.ticket_obj_id?.address_details?.house_number + \" \" + item?.ticket_obj_id?.address_details?.locality + \" \" + item?.ticket_obj_id?.address_details?.city + \" \" + item?.ticket_obj_id?.address_details?.state + \" \" + item?.ticket_obj_id?.address_details?.country,\r\n                customer_name: item?.ticket_obj_id?.personal_details?.name,\r\n                customer_number: item?.ticket_obj_id?.personal_details?.alternate_phone?.mobile_number,\r\n                FeedBack: JSON.stringify(item?.feedBackResponse),\r\n                viewfeedback: item?.feedBackResponse,\r\n                over_all_rating: item?.over_all_rating,\r\n                is_aldready_submitted: item?.is_aldready_submitted ? \"Yes\" : \"No\",\r\n                View_ticket: item?.ticket_obj_id?._id,\r\n            }\r\n        });\r\n\r\n        return parsedData;\r\n    }\r\n\r\n    getAllFeedBack() {\r\n        new AdminApiModule().getAllFeedBack().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.length > 0) {\r\n                parsedData = this.getParsedData(res.data);\r\n            }\r\n            this.setState({\r\n                feedBackList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MUIDataTable\r\n                    title={\"FeedBackList\"}\r\n                    data={this.state.feedBackList}\r\n                    columns={this.state.columns}\r\n                    options={options}\r\n                />\r\n\r\n                <ViewFeedBackPOpup\r\n                    open={this.state.isOpenFeedBackPopup}\r\n                    handleClose={this.toggleCloseFeedBackPopup}\r\n                    viewfeedback={this.state.viewfeedback}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Centers);\r\n","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../../../Styles/style.css';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport AdminApiModule from '../../../components/AdminApi/Api/api';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\n\r\n\r\nimport CenterRegistrationApi from '../../../components/centerRegistration/Api/api';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nclass AddRole extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roleName: '',\r\n            addCenter: false,\r\n            updateCenterFullAccess: false,\r\n            deleteCenter: false,\r\n            viewCenterDetailsFullAccess: false,\r\n            viewCenterDetailsViewPincode: false,\r\n            addTechnician: false,\r\n            updateTechnicianFullAccess: false,\r\n            deleteTechnician: false,\r\n            viewTechnicianDetailsFullAccess: false,\r\n            viewTechnicianDetailsTechnicianPhone: false,\r\n            viewDashboardFullAccess: false,\r\n            addNewServices: false,\r\n            updateServicesFullAccess: false,\r\n            inActiveActive: false,\r\n            viewServicesListFullAccess: false,\r\n            addTicket: false,\r\n            editTicketFullAccess: false,\r\n            deleteTicket: false,\r\n            viewTicketFullAccess: false,\r\n            addClients: false,\r\n            editClientsFullAccess: false,\r\n            viewClientsFullAccess: false,\r\n            viewBroadcastedListFullAccess: false,\r\n            addRole: false,\r\n            editRoleFullAccess: false,\r\n            deleteRole: false,\r\n            viewRoleFullAccess: false,\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n\r\n            isRegistering: false,\r\n            isEditDetailsExists: false,\r\n            doesRoleExists: false,\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"hey man\", this.props.reduxState)\r\n\r\n        let editRoleId = new URLSearchParams(this.props.location.search).get(\"edit\")\r\n\r\n        console.log(editRoleId, \"edit role id\")\r\n\r\n        if (editRoleId != null) {\r\n            this.getRoleDetails(editRoleId)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getRoleObjIdForEdit() {\r\n        return new URLSearchParams(this.props.location.search).get(\"edit\")\r\n    }\r\n\r\n    getRoleDetails(editRoleId) {\r\n        let payload = {\r\n            role_obj_id: editRoleId\r\n        }\r\n        this.setState({\r\n            isEditDetailsExists: true,\r\n        })\r\n\r\n        new AdminApiModule().getAllAvailableRoles(payload).then(res => {\r\n            if (res?.data?.length) {\r\n                this.setState({\r\n                    doesRoleExists: true,\r\n                })\r\n\r\n                this.updateRoleDetails(res?.data?.[0])\r\n            }\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    updateRoleDetails(roleDetails) {\r\n        console.log(\"roleDetails are\", roleDetails?.add_center)\r\n        this.setState({\r\n            roleName: roleDetails?.role_name,\r\n            addCenter: roleDetails?.permissions?.add_center,\r\n            updateCenterFullAccess: roleDetails?.permissions?.update_center?.full_access,\r\n            deleteCenter: roleDetails?.permissions?.delete_center,\r\n            viewCenterDetailsFullAccess: roleDetails?.permissions?.view_center_details?.full_access,\r\n            viewCenterDetailsViewPincode: roleDetails?.permissions?.view_center_details?.view_pincode,\r\n            addTechnician: roleDetails?.permissions?.add_technician,\r\n            updateTechnicianFullAccess: roleDetails?.permissions?.update_technician?.full_access,\r\n            deleteTechnician: roleDetails?.permissions?.delete_technician,\r\n            viewTechnicianDetailsFullAccess: roleDetails?.permissions?.view_technician_details?.full_access,\r\n            viewTechnicianDetailsTechnicianPhone: roleDetails?.permissions?.view_technician_details?.technician_phone,\r\n            viewDashboardFullAccess: roleDetails?.permissions?.view_dashboard_full_access,\r\n            addNewServices: roleDetails?.permissions?.add_new_services,\r\n            updateServicesFullAccess: roleDetails?.permissions?.update_services?.full_access,\r\n            inActiveActive: roleDetails?.permissions?.inactive_active,\r\n            viewServicesListFullAccess: roleDetails?.permissions?.view_services_list?.full_access,\r\n            addTicket: roleDetails?.permissions?.add_ticket,\r\n            editTicketFullAccess: roleDetails?.permissions?.edit_ticket?.full_access,\r\n            deleteTicket: roleDetails?.permissions?.delete_ticket,\r\n            viewTicketFullAccess: roleDetails?.permissions?.view_ticket?.full_access,\r\n            addClients: roleDetails?.permissions?.add_clients,\r\n            editClientsFullAccess: roleDetails?.permissions?.edit_clients?.full_access,\r\n            viewClientsFullAccess: roleDetails?.permissions?.view_clients?.full_access,\r\n            viewBroadcastedListFullAccess: roleDetails?.permissions?.view_broadcastedList,\r\n            addRole: roleDetails?.permissions?.add_role,\r\n            editRoleFullAccess: roleDetails?.permissions?.edit_role_full_access,\r\n            deleteRole: roleDetails?.permissions?.delete_role,\r\n            viewRoleFullAccess: roleDetails?.permissions?.view_role?.full_access\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleChangeCheckBox = (e) => {\r\n        this.setState({ is_paid: e.target.checked })\r\n\r\n        let { name, value, checked } = e.target\r\n        this.setState({\r\n            [name]: checked,\r\n        }, () => {\r\n            console.log(this.state, \"values are\")\r\n        })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { roleName,\r\n            addCenter, updateCenterFullAccess, deleteCenter, viewCenterDetailsFullAccess, viewCenterDetailsViewPincode,\r\n            addTechnician, updateTechnicianFullAccess, deleteTechnician, viewTechnicianDetailsFullAccess, viewTechnicianDetailsTechnicianPhone, viewDashboardFullAccess, addNewServices, updateServicesFullAccess, inActiveActive,\r\n            viewServicesListFullAccess, addTicket, editTicketFullAccess, deleteTicket, viewTicketFullAccess, addClients, editClientsFullAccess, viewClientsFullAccess, viewBroadcastedListFullAccess, addRole, editRoleFullAccess, deleteRole, viewRoleFullAccess } = this.state;\r\n\r\n\r\n        if (!(roleName)) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n\r\n        let payload = {\r\n            role_name: roleName,\r\n            role_created_user: this.props?.reduxState?.adminDetails?._id,\r\n            permissions: {\r\n                //center\r\n                add_center: addCenter,\r\n                update_center: {\r\n                    full_access: updateCenterFullAccess,\r\n                },\r\n                delete_center: deleteCenter,\r\n                view_center_details: {\r\n                    full_access: viewCenterDetailsFullAccess,\r\n                    view_pincode: viewCenterDetailsViewPincode,\r\n                },\r\n\r\n                //technician roles\r\n                add_technician: addTechnician,\r\n                update_technician: {\r\n                    full_access: updateTechnicianFullAccess,\r\n                },\r\n                delete_technician: deleteTechnician,\r\n                view_technician_details: {\r\n                    full_access: viewTechnicianDetailsFullAccess,\r\n                    technician_phone: viewTechnicianDetailsTechnicianPhone,\r\n                },\r\n\r\n                //dashboard\r\n                view_dashboard_full_access: viewDashboardFullAccess,\r\n\r\n                //services\r\n                add_new_services: addNewServices,\r\n                update_services: {\r\n                    full_access: updateServicesFullAccess,\r\n                },\r\n                inactive_active: inActiveActive,\r\n                view_services_list: {\r\n                    full_access: viewServicesListFullAccess,\r\n                },\r\n\r\n                //tickets\r\n                add_ticket: addTicket,\r\n                edit_ticket: {\r\n                    full_access: editTicketFullAccess,\r\n                },\r\n                delete_ticket: deleteTicket,\r\n                view_ticket: {\r\n                    full_access: viewTicketFullAccess,\r\n                },\r\n\r\n                //clients \r\n                add_clients: addClients,\r\n                edit_clients: {\r\n                    full_access: editClientsFullAccess,\r\n                },\r\n                view_clients: {\r\n                    full_access: viewClientsFullAccess,\r\n                },\r\n\r\n                //broadcastedList\r\n                view_broadcastedList: viewBroadcastedListFullAccess,\r\n\r\n                //roles\r\n                add_role: addRole,\r\n                edit_role_permissions: {\r\n                    full_access: editRoleFullAccess,\r\n                },\r\n                delete_role: deleteRole,\r\n                view_role: {\r\n                    full_access: viewRoleFullAccess,\r\n                },\r\n            }\r\n        };\r\n\r\n        if (this.state.isEditDetailsExists) {\r\n\r\n            payload.role_obj_id = this.getRoleObjIdForEdit()\r\n\r\n            payload['role_name'] = roleName || false\r\n            payload['permissions.add_center'] = addCenter || false\r\n            payload['permissions.update_center.full_access'] = updateCenterFullAccess || false\r\n            payload['permissions.delete_center'] = deleteCenter || false\r\n            payload['permissions.view_center_details.full_access'] = viewCenterDetailsFullAccess || false\r\n            payload['permissions.view_center_details.view_pincode'] = viewCenterDetailsViewPincode || false\r\n            payload['permissions.add_technician'] = addTechnician || false\r\n            payload['permissions.update_technician.full_access'] = updateTechnicianFullAccess || false\r\n            payload['permissions.delete_technician'] = deleteTechnician || false\r\n            payload['permissions.view_technician_details.full_access'] = viewTechnicianDetailsFullAccess || false\r\n            payload['permissions.view_technician_details.technician_phone'] = viewTechnicianDetailsTechnicianPhone || false\r\n            payload['permissions.view_dashboard_full_access'] = viewDashboardFullAccess || false\r\n            payload['permissions.add_new_services'] = addNewServices || false\r\n            payload['permissions.update_services.full_access'] = updateServicesFullAccess || false\r\n            payload['permissions.inactive_active'] = inActiveActive || false\r\n            payload['permissions.view_services_list.full_access'] = viewServicesListFullAccess || false\r\n            payload['permissions.add_ticket'] = addTicket || false\r\n            payload['permissions.edit_ticket.full_access'] = editTicketFullAccess || false\r\n            payload['permissions.delete_ticket'] = deleteTicket || false\r\n            payload['permissions.view_ticket.full_access'] = viewTicketFullAccess || false\r\n            payload['permissions.add_clients'] = addClients || false\r\n            payload['permissions.edit_clients.full_access'] = editClientsFullAccess || false\r\n            payload['permissions.view_clients.full_access'] = viewClientsFullAccess || false\r\n            payload['permissions.view_broadcastedList'] = viewBroadcastedListFullAccess || false\r\n            payload['permissions.add_role'] = addRole || false\r\n            payload['permissions.edit_role_permissions.full_access'] = editRoleFullAccess || false\r\n            payload['permissions.delete_role'] = deleteRole || false\r\n            payload['permissions.view_role.full_access'] = viewRoleFullAccess || false\r\n\r\n            new AdminApiModule().adminUpdateRole(payload).then(res => {\r\n\r\n                this.showDialog(true, \"success\", \"Role updated successfully\");\r\n\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n\r\n                this.props.history.push('/roles')\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.showDialog(true, \"error\", err?.response?.data?.message);\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        new AdminApiModule().adminAddRole(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Role Created successfully\");\r\n\r\n            this.handleResetValues()\r\n            this.props.history.push('/roles');\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleResetValues() {\r\n        this.setState({\r\n            isRegistering: false,\r\n\r\n            roleName: '',\r\n            addCenter: false,\r\n            updateCenterFullAccess: false,\r\n            deleteCenter: false,\r\n            viewCenterDetailsFullAccess: false,\r\n            viewCenterDetailsViewPincode: false,\r\n            addTechnician: false,\r\n            updateTechnicianFullAccess: false,\r\n            deleteTechnician: false,\r\n            viewTechnicianDetailsFullAccess: false,\r\n            viewTechnicianDetailsTechnicianPhone: false,\r\n            viewDashboardFullAccess: false,\r\n            addNewServices: false,\r\n            updateServicesFullAccess: false,\r\n            inActiveActive: false,\r\n            viewServicesListFullAccess: false,\r\n            addTicket: false,\r\n            editTicketFullAccess: false,\r\n            deleteTicket: false,\r\n            viewTicketFullAccess: false,\r\n            addClients: false,\r\n            editClientsFullAccess: false,\r\n            viewClientsFullAccess: false,\r\n            viewBroadcastedListFullAccess: false,\r\n            addRole: false,\r\n            editRoleFullAccess: false,\r\n            deleteRole: false,\r\n            viewRoleFullAccess: false,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues, isFormValid, roleName,\r\n            addCenter, updateCenterFullAccess, deleteCenter, viewCenterDetailsFullAccess, viewCenterDetailsViewPincode,\r\n            addTechnician, updateTechnicianFullAccess, deleteTechnician, viewTechnicianDetailsFullAccess, viewTechnicianDetailsTechnicianPhone, viewDashboardFullAccess, addNewServices, updateServicesFullAccess, inActiveActive,\r\n            viewServicesListFullAccess, addTicket, editTicketFullAccess, deleteTicket, viewTicketFullAccess, addClients, editClientsFullAccess, viewClientsFullAccess, viewBroadcastedListFullAccess, addRole, editRoleFullAccess, deleteRole, viewRoleFullAccess } = this.state;\r\n\r\n        if (this.state.isEditDetailsExists && !this.state.doesRoleExists) {\r\n\r\n            return <>\r\n                \"Page not found !!!\"\r\n            </>\r\n        }\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">{\r\n                    this.state.isEditDetailsExists ? \"Update Role\" :\r\n                        \"Add Role\"}</h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={12}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Role Name\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"roleName\"\r\n                                value={roleName}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !roleName}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"addCenter\" checked={addCenter} onChange={this.handleChangeCheckBox} />} label=\"Add Center\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"updateCenterFullAccess\" checked={updateCenterFullAccess} onChange={this.handleChangeCheckBox} />} label=\"Update Center Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"deleteCenter\" checked={deleteCenter} onChange={this.handleChangeCheckBox} />} label=\"Delete Center\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewCenterDetailsFullAccess\" checked={viewCenterDetailsFullAccess} onChange={this.handleChangeCheckBox} />} label=\"View Center Details Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewCenterDetailsViewPincode\" checked={viewCenterDetailsViewPincode} onChange={this.handleChangeCheckBox} />} label=\"View Center Details Only Pincode\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"addTechnician\" checked={addTechnician} onChange={this.handleChangeCheckBox} />} label=\"Add Technician\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"updateTechnicianFullAccess\" checked={updateTechnicianFullAccess} onChange={this.handleChangeCheckBox} />} label=\"Update Technician Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"deleteTechnician\" checked={deleteTechnician} onChange={this.handleChangeCheckBox} />} label=\"Delete Technician\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewTechnicianDetailsFullAccess\" checked={viewTechnicianDetailsFullAccess} onChange={this.handleChangeCheckBox} />} label=\"View Technician Details Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewTechnicianDetailsTechnicianPhone\" checked={viewTechnicianDetailsTechnicianPhone} onChange={this.handleChangeCheckBox} />} label=\"View Technician Details Technician Phone\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewDashboardFullAccess\" checked={viewDashboardFullAccess} onChange={this.handleChangeCheckBox} />} label=\"View Dashboard Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"addNewServices\" checked={addNewServices} onChange={this.handleChangeCheckBox} />} label=\"Add New Services\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"updateServicesFullAccess\" checked={updateServicesFullAccess} onChange={this.handleChangeCheckBox} />} label=\"Update Services Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"inActiveActive\" checked={inActiveActive} onChange={this.handleChangeCheckBox} />} label=\"InActive Active\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewServicesListFullAccess\" checked={viewServicesListFullAccess} onChange={this.handleChangeCheckBox} />} label=\"View Services List Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"addTicket\" checked={addTicket} onChange={this.handleChangeCheckBox} />} label=\"Add Ticket\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"editTicketFullAccess\" checked={editTicketFullAccess} onChange={this.handleChangeCheckBox} />} label=\"Edit Ticket Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"deleteTicket\" checked={deleteTicket} onChange={this.handleChangeCheckBox} />} label=\"Delete Ticket\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewTicketFullAccess\" checked={viewTicketFullAccess} onChange={this.handleChangeCheckBox} />} label=\"View Ticket Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"addClients\" checked={addClients} onChange={this.handleChangeCheckBox} />} label=\"Add Clients\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"editClientsFullAccess\" checked={editClientsFullAccess} onChange={this.handleChangeCheckBox} />} label=\"Edit Clients Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewClientsFullAccess\" checked={viewClientsFullAccess} onChange={this.handleChangeCheckBox} />} label=\"View Clients Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewBroadcastedListFullAccess\" checked={viewBroadcastedListFullAccess} onChange={this.handleChangeCheckBox} />} label=\"View Broadcasted List Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"addRole\" checked={addRole} onChange={this.handleChangeCheckBox} />} label=\"Add Role\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"editRoleFullAccess\" checked={editRoleFullAccess} onChange={this.handleChangeCheckBox} />} label=\"Edit Role Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"deleteRole\" checked={deleteRole} onChange={this.handleChangeCheckBox} />} label=\"Delete Role\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={<Switch name=\"viewRoleFullAccess\" checked={viewRoleFullAccess} onChange={this.handleChangeCheckBox} />} label=\"View Role Full Access\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >{this.state.isEditDetailsExists ? \"Update \" : \"Save\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// export default withRouter(AddRole);\r\nconst mapStateToProps = (state) => ({\r\n    reduxState: state.userReducer,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(AddRole));","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '65%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    height: '80%',\r\n    overflowY: 'scroll'\r\n};\r\n\r\nconst styleListDivider = {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    bgcolor: 'background.paper',\r\n};\r\n\r\nconst styleListItem = {\r\n    textAlignLeft: {\r\n        textAlign: 'left'\r\n    },\r\n    textAlignEnd: {\r\n        textAlign: 'end'\r\n    }\r\n}\r\n\r\nconst ListDividers = ({ roleObject }) => {\r\n    console.log(\"roleObject is\", roleObject)\r\n\r\n    return (\r\n        <List sx={styleListDivider} component=\"nav\" aria-label=\"mailbox folders\">\r\n            {Object.keys(roleObject).map((key) => (\r\n\r\n                <div>\r\n                    <ListItem button>\r\n\r\n                        <ListItemText sx={styleListItem.textAlignLeft}>{key}</ListItemText>\r\n                        {/* <ListItemText>{(roleObject[key]).toString()}</ListItemText> */}\r\n                        <ListItemText sx={styleListItem.textAlignEnd}>\r\n                            {(roleObject[key]) ?\r\n                                <IconButton color=\"success\">\r\n                                    <CheckCircleIcon />\r\n                                </IconButton> :\r\n                                <IconButton color=\"error\">\r\n                                    <CancelIcon />\r\n                                </IconButton>}\r\n                        </ListItemText>\r\n\r\n\r\n                    </ListItem>\r\n                    <Divider />\r\n                </div>\r\n            ))}\r\n\r\n        </List>\r\n    );\r\n}\r\nexport default function ViewUser({ isViewRoleOpen, handleCloseViewRole, roleObject }) {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={isViewRoleOpen}\r\n                onClose={handleCloseViewRole}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <h2>Permissions</h2>\r\n                    <ListDividers roleObject={roleObject} />\r\n                </Box>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react'\r\n\r\nimport '../../../Styles/style.css';\r\nimport AdminApiModule from '../../../components/AdminApi/Api/api';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { withRouter } from \"react-router\";\r\nimport ViewUser from './ViewUser';\r\n\r\nclass AdminUsers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usersList: [],\r\n            isUserEdit: false,\r\n\r\n            viewfeedback: [],\r\n            isViewUserOpen: false,\r\n            selectedUser: {},\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n        };\r\n    }\r\n\r\n    parseUserObject = (userObject) => {\r\n        let resultObject = {\r\n            userName: userObject?.user_name,\r\n            password: userObject?.password,\r\n            phoneNumber: userObject?.phone?.mobile_number,\r\n            roleName: userObject?.role_id.role_name,\r\n           \r\n        };\r\n        return resultObject;\r\n    }\r\n\r\n    handleViewUser = (userObject) => {\r\n        let userObjectValue = this.parseUserObject(userObject);\r\n        console.log(\"userObjectValue is\", userObjectValue);\r\n        this.setState({ isViewUserOpen: true, selectedUser: userObjectValue });\r\n    }\r\n\r\n    handleCloseViewUser = () => {\r\n        this.setState({ isViewUserOpen: false });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getAllUsers();\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getFormattedServices = (services) => {\r\n        console.log(services)\r\n        let secondary_services_list = [];\r\n        services && services.length > 0 && services.map((item) => {\r\n            secondary_services_list.push(item.secondary_services_id.service_name);\r\n        })\r\n        return secondary_services_list.length > 0 ? secondary_services_list.join(\", \") : \"\";\r\n    }\r\n\r\n    getAllUsers() {\r\n        new AdminApiModule().getAllUsers().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.allUsers && res.data.allUsers.length > 0) {\r\n                parsedData = res.data.allUsers;\r\n            }\r\n            this.setState({\r\n                usersList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleAddUser = () => {\r\n        this.props.history.push('/add-user');\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({ isUserEdit: false });\r\n    };\r\n\r\n    handleDeleteUser = (id) => {\r\n        let payload = {\r\n            user_object_id: id\r\n        }\r\n        new AdminApiModule().adminRemoveUser(payload).then(res => {\r\n            if (res) {\r\n                this.showDialog(true, \"success\", 'User deleted successfully')\r\n            }\r\n            this.getAllUsers();\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { usersList } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='add-service-button'>\r\n                    <Button variant=\"contained\" className='text-transform-none' onClick={this.handleAddUser}>\r\n                        Add a User\r\n                    </Button>\r\n                </div>\r\n\r\n                <div>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>User Name</TableCell>\r\n                                    <TableCell>Mobile Number</TableCell>\r\n                                    <TableCell>Role Given</TableCell>\r\n\r\n                                    <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {console.log(\"usersList is\", usersList)}\r\n                                {usersList && usersList.length > 0 && usersList.map((row) => (\r\n                                    <TableRow\r\n                                        key={row._id}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.user_name}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.phone.country_code + row.phone.mobile_number}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row?.role_id?.role_name}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            <Button variant=\"outlined\" onClick={() => this.handleDeleteUser(row._id)}>\r\n                                                Delete User\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            <Button variant=\"outlined\" onClick={() => this.handleViewUser(row)}>\r\n                                                View User\r\n                                            </Button>\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n\r\n                <div>\r\n                    <ViewUser isViewUserOpen={this.state.isViewUserOpen}\r\n                        handleCloseViewUser={this.handleCloseViewUser}\r\n                        userObject={this.state.selectedUser}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminUsers);\r\n","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../../../Styles/style.css';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport AdminApiModule from '../../../components/AdminApi/Api/api';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\n\r\n\r\nimport CenterRegistrationApi from '../../../components/centerRegistration/Api/api';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nclass AddUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            phoneNumber: '',\r\n            roleChosenId: '',\r\n\r\n            rolesList: [],\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n\r\n            isRegistering: false,\r\n            isEditDetailsExists: false,\r\n            doesUserExists: false,\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllRolesExists();\r\n\r\n        console.log(\"hey man\", this.props.reduxState)\r\n\r\n        let editUserId = new URLSearchParams(this.props.location.search).get(\"edit\")\r\n\r\n        console.log(editUserId, \"edit user id\")\r\n\r\n        if (editUserId != null) {\r\n            this.getUserDetails(editUserId)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getAllRolesExists() {\r\n        new AdminApiModule().getAllAvailableRoles().then(res => {\r\n            this.setState({\r\n                rolesList: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getUserObjIdForEdit() {\r\n        return new URLSearchParams(this.props.location.search).get(\"edit\")\r\n    }\r\n\r\n    getUserDetails(editUserId) {\r\n        let payload = {\r\n            user_obj_id: editUserId\r\n        }\r\n        this.setState({\r\n            isEditDetailsExists: true,\r\n        })\r\n\r\n        new AdminApiModule().getAllUsers(payload).then(res => {\r\n            if (res?.data?.length) {\r\n                this.setState({\r\n                    doesUserExists: true,\r\n                })\r\n\r\n                this.updateUserDetails(res?.data?.[0])\r\n            }\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    updateUserDetails(userDetails) {\r\n        this.setState({\r\n            userName: userDetails?.user_name,\r\n            password: userDetails?.password,\r\n            phoneNumber: userDetails?.phone_number,\r\n            roleChosenId: userDetails?.role_id,\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { userName, password, phoneNumber, roleChosenId } = this.state;\r\n\r\n\r\n        if (!(userName)) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n\r\n        let payload = {\r\n            user_name: userName,\r\n            password: password,\r\n            country_code: \"+91\",\r\n            phone_number: phoneNumber,\r\n            role_id: roleChosenId\r\n        };\r\n\r\n        if (this.state.isEditDetailsExists) {\r\n\r\n            payload.user_obj_id = this.getUserObjIdForEdit()\r\n\r\n            payload['user_name'] = userName || ''\r\n            payload['password'] = password || ''\r\n            payload['phone_number'] = phoneNumber || ''\r\n            payload['role_id'] = roleChosenId || ''\r\n           \r\n            new AdminApiModule().adminUpdateRole(payload).then(res => {\r\n\r\n                this.showDialog(true, \"success\", \"User updated successfully\");\r\n\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n\r\n                this.props.history.push('/users')\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.showDialog(true, \"error\", err?.response?.data?.message);\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        new AdminApiModule().adminCreateUser(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"User Created successfully\");\r\n\r\n            this.handleResetValues()\r\n            this.props.history.push('/users');\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleResetValues() {\r\n        this.setState({\r\n            isRegistering: false,\r\n\r\n            userName: '',\r\n            password: '',\r\n            phoneNumber: '',\r\n            roleChosenId: '',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues, isFormValid, userName, password, phoneNumber, roleChosenId } = this.state;\r\n\r\n        if (this.state.isEditDetailsExists && !this.state.doesUserExists) {\r\n\r\n            return <>\r\n                \"Page not found !!!\"\r\n            </>\r\n        }\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">{\r\n                    this.state.isEditDetailsExists ? \"Update User\" :\r\n                        \"Add User\"}</h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"User Name\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"userName\"\r\n                                value={userName}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !userName}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Password\"\r\n                                style={stylesCss.inputBox}\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={this.handleChange}\r\n                                error={isFormValid && !password}\r\n                                type=\"password\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Mobile Number\"\r\n                                name=\"phoneNumber\"\r\n                                onChange={this.handleChange}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !phoneNumber}\r\n                                value={phoneNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Choose Role</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Choose Role\"\r\n                                    name=\"roleChosenId\"\r\n                                    onChange={this.handleChange}\r\n                                    error={isFormValid && !roleChosenId}\r\n                                    value={roleChosenId}\r\n                                >\r\n                                    {this.state.rolesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.role_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >{this.state.isEditDetailsExists ? \"Update \" : \"Save\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// export default withRouter(AddRole);\r\nconst mapStateToProps = (state) => ({\r\n    reduxState: state.userReducer,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(AddUser));","import React, { Component } from 'react'\r\n\r\nimport '../../../Styles/style.css';\r\nimport AdminApiModule from '../../../components/AdminApi/Api/api';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass AdminCenterOnboarders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            centerOnboardersList: [],\r\n            isCenterOnboarderEdit: false,\r\n\r\n            viewfeedback: [],\r\n            isViewCenterOnboarderOpen: false,\r\n            selectedCenterOnboarder: {},\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getAllCenterOnBoarders();\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getFormattedList = (array) => {\r\n        let result = [];\r\n        array && array.length > 0 && array.map((item) => {\r\n            result.push(item);\r\n        })\r\n        return result.length > 0 ? result.join(\", \") : \"\";\r\n    }\r\n\r\n    getAllCenterOnBoarders() {\r\n        new AdminApiModule().getAllCenterOnBoarder().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.length > 0) {\r\n                parsedData = res.data;\r\n            }\r\n            this.setState({\r\n                centerOnboardersList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleAddCenterOnboarder = () => {\r\n        this.props.history.push('/admin-add-center-onboarder');\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({ isCenterOnboarderEdit: false });\r\n    };\r\n\r\n    handleUpdateOnboarder = (id) => {\r\n        this.props.history.push('/admin-add-center-onboarder?edit=' + id)\r\n    }\r\n\r\n    render() {\r\n        const { centerOnboardersList } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='add-service-button'>\r\n                    <Button variant=\"contained\" className='text-transform-none' onClick={this.handleAddCenterOnboarder}>\r\n                        Add a Center Onboarder\r\n                    </Button>\r\n                </div>\r\n\r\n                <div>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Center Onboarder Id</TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Mobile Number</TableCell>\r\n                                    <TableCell>Primary Services</TableCell>\r\n                                    <TableCell>Allowed States</TableCell>\r\n                                    <TableCell>Allowed Cities</TableCell>\r\n\r\n\r\n                                    <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {centerOnboardersList && centerOnboardersList.length > 0 && centerOnboardersList.map((row) => (\r\n                                    <TableRow\r\n                                        key={row._id}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.center_onboarder_id || '-'}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.phone_details.country_code + row.phone_details.mobile_number}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row?.services?.primary_services?.service_name}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {this.getFormattedList(row?.allowed_states)}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {this.getFormattedList(row?.allowed_cities)}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            <Button variant=\"outlined\" onClick={() => this.handleUpdateOnboarder(row._id)}>\r\n                                                Edit Onboarder\r\n                                            </Button>\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminCenterOnboarders);\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst ListItem = styled('li')(({ theme }) => ({\r\n    margin: theme.spacing(0.5),\r\n}));\r\n\r\nexport default function ChipsArray({ chipData, handleDelete }) {\r\n    return (\r\n        <Paper\r\n            sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap',\r\n                listStyle: 'none',\r\n                p: 0.5,\r\n                m: 0,\r\n            }}\r\n            component=\"ul\"\r\n        >\r\n            {chipData && chipData.length > 0 && chipData.map((data) => {\r\n\r\n                return (\r\n                    <ListItem key={data.key}>\r\n                        <Chip\r\n                            label={data.label}\r\n                            onDelete={data.label === 'React' ? undefined : handleDelete(data)}\r\n                        />\r\n                    </ListItem>\r\n                );\r\n            })}\r\n        </Paper>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../../../Styles/style.css';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport AdminApiModule from '../../../components/AdminApi/Api/api';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\n\r\n\r\nimport CenterRegistrationApi from '../../../components/centerRegistration/Api/api';\r\nimport { connect } from 'react-redux';\r\nimport { IndianStates } from '../../../assets/IndianStates';\r\nimport Chips from '../../CenterOnboarding/components/chips';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nclass AddCenterOnboarder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            countryCode: \"+91\",\r\n            mobileNumber: \"\",\r\n            // primary_services: \"\",\r\n            // secondary_services: {\r\n            //     secondary_services_id: \"\",\r\n            //     priority: \"\",\r\n            // },\r\n            // allowedStates: [],\r\n            // allowedCities: [],\r\n\r\n            // cityValue: '',\r\n\r\n            uniqueId: '',\r\n\r\n            // servicesList: [],\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n\r\n            isRegistering: false,\r\n            isEditDetailsExists: false,\r\n            doesCenterOnboarderExists: false,\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.getAllServicesExists()\r\n        console.log(\"hey man\", this.props.reduxState)\r\n\r\n        let editCenterOnboarderId = new URLSearchParams(this.props.location.search).get(\"edit\")\r\n\r\n        console.log(editCenterOnboarderId, \"edit center onboarder id\")\r\n\r\n        if (editCenterOnboarderId != null) {\r\n            this.getCenterOnboarderDetails(editCenterOnboarderId)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // getAllServicesExists() {\r\n    //     new CenterRegistrationApi().getAllActiveServices().then(res => {\r\n    //         this.setState({\r\n    //             servicesList: res.data\r\n    //         })\r\n    //     }).catch(err => {\r\n    //         console.log(err)\r\n    //     })\r\n    // }\r\n\r\n    getCenterOnboarderObjIdForEdit() {\r\n        return new URLSearchParams(this.props.location.search).get(\"edit\")\r\n    }\r\n\r\n    getCenterOnboarderDetails(editCenterOnboarderId) {\r\n        let payload = {\r\n            center_onboarder_id: editCenterOnboarderId\r\n        }\r\n        this.setState({\r\n            isEditDetailsExists: true,\r\n        })\r\n\r\n        new AdminApiModule().getAllCenterOnBoarder(payload).then(res => {\r\n            if (res?.data?.length) {\r\n                this.setState({\r\n                    doesCenterOnboarderExists: true,\r\n                })\r\n\r\n                this.updateCenterOnboarderDetails(res?.data?.[0])\r\n            }\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    mapArrayToKeyLabel = (arr) => {\r\n        return arr && arr.length > 0 && arr.map((item) => {\r\n            return {\r\n                key: item,\r\n                label: item\r\n            }\r\n        })\r\n    }\r\n\r\n    updateCenterOnboarderDetails(centerOnboarderDetails) {\r\n        this.setState({\r\n            name: centerOnboarderDetails?.name,\r\n            countryCode: \"+91\",\r\n            mobileNumber: centerOnboarderDetails?.phone_details?.mobile_number,\r\n            // primary_services: centerOnboarderDetails?.services?.primary_services?._id,\r\n            // allowedStates: centerOnboarderDetails?.allowed_states.length > 0 ? this.mapArrayToKeyLabel(centerOnboarderDetails?.allowed_states) : [],\r\n            // allowedCities: centerOnboarderDetails?.allowed_cities.length > 0 ? this.mapArrayToKeyLabel(centerOnboarderDetails?.allowed_cities) : [],\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleChangeStates = (e) => {\r\n\r\n        let { name, value } = e.target\r\n\r\n        let arr = [...this.state.allowedStates];\r\n        arr.push({ key: value, label: value });\r\n        this.setState({\r\n            allowedStates: arr\r\n        })\r\n    }\r\n\r\n    getArrayOfStrings = (data) => {\r\n        return data && data.length > 0 && data.map(item => item.label);\r\n    }\r\n\r\n    handleRegister = () => {\r\n\r\n        if (!(this.state.name &&\r\n            this.state.mobileNumber \r\n            // && this.state.primary_services &&\r\n            // this.state.allowedStates &&\r\n            // this.state.allowedCities\r\n            )) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n\r\n        let payload = {\r\n            name: this.state.name,\r\n            phone_details: {\r\n                country_code: \"+91\",\r\n                mobile_number: this.state.mobileNumber,\r\n            },\r\n            // allowed_cities: this.getArrayOfStrings(this.state.allowedCities),\r\n            // allowed_states: this.getArrayOfStrings(this.state.allowedStates),\r\n            // primary_services: this.state.primary_services\r\n        }\r\n\r\n        if (this.state.isEditDetailsExists) {\r\n\r\n            payload.center_onboarder_id = this.getCenterOnboarderObjIdForEdit()\r\n\r\n            payload['name'] = this.state.name || ''\r\n\r\n            if (this.state.mobileNumber) {\r\n                payload['phone_details'] = {\r\n                    country_code: \"+91\",\r\n                    mobile_number: this.state.mobileNumber,\r\n                }\r\n            }\r\n            // payload['allowed_cities'] = (this.state.allowedCities && this.state.allowedCities.length > 0 && this.getArrayOfStrings(this.state.allowedCities)) || ''\r\n            // payload['allowed_states'] = (this.state.allowedStates && this.state.allowedStates.length > 0 && this.getArrayOfStrings(this.state.allowedStates)) || ''\r\n            // payload['primary_services'] = this.state.primary_services || ''\r\n\r\n            new AdminApiModule().adminUpdateCenterOnBoarder(payload).then(res => {\r\n\r\n                this.showDialog(true, \"success\", \"Center Onboarder updated successfully\");\r\n\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n\r\n                this.props.history.push('/admin-center-onboarders')\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.showDialog(true, \"error\", err?.response?.data?.message);\r\n                this.setState({\r\n                    isRegistering: false,\r\n                })\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        new AdminApiModule().adminCreateCenterOnBoarder(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Center Onboarder Created successfully\");\r\n\r\n            this.handleResetValues()\r\n            this.props.history.push('/admin-center-onboarders');\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleResetValues() {\r\n        this.setState({\r\n            isRegistering: false,\r\n\r\n            name: \"\",\r\n            countryCode: \"+91\",\r\n            mobileNumber: \"\",\r\n            // primary_services: \"\",\r\n            // secondary_services: {\r\n            //     secondary_services_id: \"\",\r\n            //     priority: \"\",\r\n            // },\r\n            // allowedStates: [],\r\n            // allowedCities: [],\r\n        });\r\n    }\r\n\r\n    handleDeleteChipData = (chipToDelete, elementName) => () => {\r\n        console.log(\"chipToDelete is\", chipToDelete);\r\n        let arr = [];\r\n        if (elementName === \"allowedStates\") {\r\n            arr = this.state.allowedStates.filter((chip) => chip.key !== chipToDelete.key)\r\n        }\r\n        else if (elementName === \"allowedCities\") {\r\n            arr = this.state.allowedCities.filter((chip) => chip.key !== chipToDelete.key)\r\n        }\r\n        this.setState({ [elementName]: arr });\r\n    };\r\n\r\n    handleAddAllowedCities = (value) => {\r\n        let isCityAlreadyExists = this.state.allowedCities && this.state.allowedCities.length > 0 &&\r\n            this.state.allowedCities.find(item => item.label === value);\r\n\r\n        if (isCityAlreadyExists) {\r\n            this.showDialog(true, \"error\", \"City already entered\");\r\n            return;\r\n\r\n        };\r\n\r\n        let arr = [...this.state.allowedCities];\r\n        arr.push({ key: value, label: value });\r\n        this.setState({\r\n            allowedCities: arr,\r\n            cityValue: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { toast: snackBarValues, isFormValid,\r\n            name, countryCode, mobileNumber, allowedStates, allowedCities, cityValue } = this.state;\r\n\r\n        if (this.state.isEditDetailsExists && !this.state.doesCenterOnboarderExists) {\r\n\r\n            return <>\r\n                \"Page not found !!!\"\r\n            </>\r\n        }\r\n        return (\r\n            <div>\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">{\r\n                    this.state.isEditDetailsExists ? \"Update Center Onboarder\" :\r\n                        \"Add Center Onboarder\"}</h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please provide your Shop / Center (Name)\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Shop / Center (Name)\"\r\n                                name=\"name\"\r\n                                onChange={this.handleChange}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !name}\r\n                                value={name}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please provide your mobile number\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Mobile Number\"\r\n                                name=\"mobileNumber\"\r\n                                disabled={this.state.isOtpSentSuccess}\r\n                                onChange={this.handleChange}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !mobileNumber}\r\n                                value={mobileNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/* <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Main Service You Offer / Need</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Main Service You Offer / Need\"\r\n                                    name=\"primary_services\"\r\n                                    onChange={this.handleChange}\r\n                                    error={isFormValid && !this.state.primary_services}\r\n                                    value={this.state.primary_services}\r\n\r\n\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <Chips chipData={allowedStates} handleDelete={(chipToDelete) => this.handleDeleteChipData(chipToDelete, \"allowedStates\")} />\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"State\"\r\n                                    name=\"state\"\r\n                                    onChange={this.handleChangeStates}\r\n                                    value={allowedStates}\r\n                                    error={isFormValid && !allowedStates}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <Chips chipData={allowedCities} handleDelete={(chipToDelete) => this.handleDeleteChipData(chipToDelete, \"allowedCities\")} />\r\n                            <TextField\r\n                                helperText=\"Allowed Cities\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Allowed Cities\"\r\n                                name=\"cityValue\"\r\n                                onChange={this.handleChange}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !cityValue}\r\n                                value={cityValue}\r\n\r\n                                InputProps={{\r\n                                    endAdornment: <Button\r\n                                        onClick={() => this.handleAddAllowedCities(cityValue)}\r\n                                        variant=\"contained\"\r\n                                    >Add</Button>\r\n                                }}\r\n                            />\r\n\r\n                        </Grid> */}\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => this.handleRegister()}\r\n                                disabled={this.state.isRegistering}\r\n                            >{this.state.isEditDetailsExists ? \"Update \" : \"Save\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// export default withRouter(AddRole);\r\nconst mapStateToProps = (state) => ({\r\n    reduxState: state.userReducer,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(AddCenterOnboarder));","import axios from \"axios\";\r\nimport { BASE_URL } from \"../../config/config\";\r\n\r\nclass CenterOnboardApiModule {\r\n  constructor() {\r\n    this.base_url = BASE_URL;\r\n  }\r\n\r\n  SendOtpOnboarder(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}centerOnboarding/sendotp-onboarder`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  RegisterOnboarder(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}centerOnboarding/register-onboarder`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  SendOtpOnboarderLogin(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}centerOnboarding/send-otp-login`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  VerifyOtpOnboarder(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}centerOnboarding/verify-otp-login`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  OnboarderCreateCenter(data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${this.base_url}centerOnboarding/create-center`,\r\n        data: data\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  OnboarderGetAllCenters(payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `${this.base_url}centerOnboarding/get-center`,\r\n        params: payload\r\n      })\r\n        .then((res) => {\r\n          resolve(res.data)\r\n        })\r\n        .catch((err) => {\r\n          reject(err)\r\n        });\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default CenterOnboardApiModule;","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../../Styles/style.css';\r\nimport { Alert, InputAdornment, Snackbar, Typography } from '@mui/material'\r\n\r\nimport CenterOnboardApi from '../../components/CenterOnboardApi/Api/api'\r\nimport CenterRegistrationApi from '../../components/centerRegistration/Api/api'\r\n\r\nimport { IndianStates } from '../../assets/IndianStates';\r\nimport Chips from './components/chips';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n    inputBox: {\r\n        width: '100%',\r\n        marginBottom: \"10px\"\r\n    },\r\n    gridStyle: {\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    paddingInnerGrids: {\r\n        paddingRight: \"10px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\"\r\n    }\r\n}\r\n\r\nclass CenterOnboardRegistration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            countryCode: \"+91\",\r\n            mobileNumber: \"\",\r\n            primary_services: \"\",\r\n            secondary_services: {\r\n                secondary_services_id: \"\",\r\n                priority: \"\",\r\n            },\r\n            allowedStates: [],\r\n            allowedCities: [],\r\n\r\n            cityValue: '',\r\n\r\n            uniqueId: '',\r\n\r\n            servicesList: [],\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n            isFormValid: false,\r\n\r\n            sendingOtp: false,\r\n            isOtpSentSuccess: false,\r\n            otpEntered: '',\r\n\r\n            isVerifyingOtp: false,\r\n            isOtpVerfied: false,\r\n\r\n            isRegistering: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllServicesExists()\r\n    }\r\n\r\n    getAllServicesExists() {\r\n        new CenterRegistrationApi().getAllActiveServices().then(res => {\r\n            this.setState({\r\n                servicesList: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        }, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleChangeStates = (e) => {\r\n\r\n        let { name, value } = e.target\r\n\r\n        let arr = [...this.state.allowedStates];\r\n        arr.push({ key: value, label: value });\r\n        this.setState({\r\n            allowedStates: arr\r\n        })\r\n    }\r\n\r\n    getArrayOfStrings = (data) => {\r\n        return data && data.length > 0 && data.map(item => item.label);\r\n    }\r\n\r\n    handleSendOtp = () => {\r\n        if (!(this.state.name &&\r\n            this.state.mobileNumber &&\r\n            this.state.primary_services &&\r\n            this.state.allowedStates &&\r\n            this.state.allowedCities)) {\r\n\r\n            this.setState({\r\n                isFormValid: true\r\n            })\r\n\r\n            this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            sendingOtp: true,\r\n\r\n        })\r\n\r\n        let payload = {\r\n            name: this.state.name,\r\n            country_code: \"+91\",\r\n            mobile_number: this.state.mobileNumber,\r\n            allowed_cities: this.getArrayOfStrings(this.state.allowedCities),\r\n            allowed_states: this.getArrayOfStrings(this.state.allowedStates),\r\n            primary_services: this.state.primary_services\r\n        }\r\n\r\n        new CenterOnboardApi().SendOtpOnboarder(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"otp sent successfully\");\r\n\r\n            this.setState({\r\n                sendingOtp: false,\r\n                isOtpSentSuccess: true,\r\n                uniqueId: res?.data?.uniqueId\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                sendingOtp: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    handleVerifyOtp = () => {\r\n\r\n        let { otpEntered } = this.state\r\n        if (!otpEntered) {\r\n            this.showDialog(true, \"error\", \"otp not entered\")\r\n            return\r\n        }\r\n\r\n        let payload = {\r\n            uniqueId: this.state.uniqueId,\r\n            otp: otpEntered\r\n        }\r\n\r\n        this.setState({\r\n            isVerifyingOtp: true,\r\n\r\n        })\r\n\r\n\r\n        new CenterOnboardApi().RegisterOnboarder(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Registered successfully , register \");\r\n\r\n            this.setState({\r\n                isVerifyingOtp: false,\r\n                isOtpVerfied: true\r\n            })\r\n\r\n            setTimeout(() => {\r\n                this.props.history.push(\"/center-onboard-login\")\r\n            }, 5000);\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isVerifyingOtp: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleRegister = () => {\r\n\r\n        let payload = {\r\n            name: this.state.name,\r\n            country_code: \"+91\",\r\n            mobile_number: this.state.mobileNumber,\r\n            allowed_cities: this.state.allowedCities,\r\n            allowed_states: this.state.allowedStates,\r\n            primary_services: this.state.primary_services,\r\n        }\r\n\r\n        this.setState({\r\n            isRegistering: true,\r\n        })\r\n        new CenterOnboardApi().RegisterOnboarder(payload).then(res => {\r\n\r\n            this.showDialog(true, \"success\", \"Registered successfully , Please Login \");\r\n\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n\r\n            setTimeout(() => {\r\n                this.props.history.push(\"/center-onboard-login\")\r\n            }, 5000);\r\n            // this.handleRegister()\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.setState({\r\n                isRegistering: false,\r\n            })\r\n            this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    handleDeleteChipData = (chipToDelete, elementName) => () => {\r\n        console.log(\"chipToDelete is\", chipToDelete);\r\n        let arr = [];\r\n\r\n        if (elementName === \"allowedStates\") {\r\n            arr = this.state.allowedStates.filter((chip) => chip.key !== chipToDelete.key)\r\n        }\r\n        else if (elementName === \"allowedCities\") {\r\n            arr = this.state.allowedCities.filter((chip) => chip.key !== chipToDelete.key)\r\n        }\r\n        this.setState({ [elementName]: arr });\r\n    };\r\n\r\n    handleAddAllowedCities = (value) => {\r\n        let isCityAlreadyExists = this.state.allowedCities && this.state.allowedCities.length > 0 &&\r\n            this.state.allowedCities.find(item => item.label === value);\r\n\r\n        if (isCityAlreadyExists) {\r\n            this.showDialog(true, \"error\", \"City already entered\");\r\n            return;\r\n\r\n        };\r\n\r\n        let arr = [...this.state.allowedCities];\r\n        arr.push({ key: value, label: value });\r\n        this.setState({\r\n            allowedCities: arr,\r\n            cityValue: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { toast: snackBarValues, isFormValid,\r\n            name, countryCode, mobileNumber, allowedStates, allowedCities,\r\n            cityValue } = this.state\r\n\r\n        return (\r\n            <div>\r\n\r\n                {\r\n                    snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                        open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n                        <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                            {snackBarValues.msg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                }\r\n                <h2 className=\"text-align-center\">Center Onboard Registration</h2>\r\n                <Item>\r\n                    <Grid container  >\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please provide your Shop / Center (Name)\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Shop / Center (Name)\"\r\n                                name=\"name\"\r\n                                onChange={this.handleChange}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !name}\r\n                                value={name}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <TextField\r\n                                helperText=\"Please provide your mobile number\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Mobile Number\"\r\n                                name=\"mobileNumber\"\r\n                                disabled={this.state.isOtpSentSuccess}\r\n                                onChange={this.handleChange}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !mobileNumber}\r\n                                value={mobileNumber}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Typography>+91</Typography>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                                inputProps={{ maxLength: 10 }}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Main Service You Offer / Need</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"Main Service You Offer / Need\"\r\n                                    name=\"primary_services\"\r\n                                    onChange={this.handleChange}\r\n                                    error={isFormValid && !this.state.primary_services}\r\n                                    value={this.state.primary_services}\r\n\r\n\r\n                                >\r\n                                    {this.state.servicesList?.map(ite => {\r\n                                        return <MenuItem value={ite._id}>\r\n                                            {ite.service_name}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <Chips chipData={allowedStates} handleDelete={(chipToDelete) => this.handleDeleteChipData(chipToDelete, \"allowedStates\")} />\r\n                            <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    label=\"State\"\r\n                                    name=\"state\"\r\n                                    onChange={this.handleChangeStates}\r\n                                    value={allowedStates}\r\n                                    error={isFormValid && !allowedStates}\r\n\r\n                                >\r\n                                    {IndianStates?.map(ite => {\r\n                                        return <MenuItem value={ite.value}>\r\n                                            {ite.value}\r\n                                        </MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                            <Chips chipData={allowedCities} handleDelete={(chipToDelete) => this.handleDeleteChipData(chipToDelete, \"allowedCities\")} />\r\n                            <TextField\r\n                                helperText=\"Allowed Cities\"\r\n                                id=\"demo-helper-text-misaligned\"\r\n                                label=\"Allowed Cities\"\r\n                                name=\"cityValue\"\r\n                                onChange={this.handleChange}\r\n                                style={stylesCss.inputBox}\r\n                                error={isFormValid && !cityValue}\r\n                                value={cityValue}\r\n\r\n                                InputProps={{\r\n                                    endAdornment: <Button\r\n                                        onClick={() => this.handleAddAllowedCities(cityValue)}\r\n                                        variant=\"contained\"\r\n                                    >Add</Button>\r\n                                }}\r\n                            />\r\n\r\n                        </Grid>\r\n\r\n                        {\r\n                            this.state.isOtpSentSuccess ? <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                                <TextField\r\n                                    id=\"demo-helper-text-misaligned\"\r\n                                    label=\"Enter otp\"\r\n                                    name=\"otpEntered\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.otpEntered}\r\n\r\n                                    style={stylesCss.inputBox}\r\n                                />\r\n                            </Grid> : ''\r\n                        }\r\n\r\n\r\n\r\n                        <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                            {!this.state.isOtpSentSuccess && <Button\r\n                                onClick={() => this.handleSendOtp()}\r\n                                variant=\"contained\"\r\n                                disabled={this.state.sendingOtp}\r\n                            >{this.state.sendingOtp ? \"Sending otp\" : \"Send Otp\"}</Button>}\r\n\r\n\r\n                            {this.state.isOtpSentSuccess ? <Button\r\n                                onClick={() => this.handleVerifyOtp()}\r\n                                variant=\"contained\"\r\n                                disabled={this.state.isVerifyingOtp}\r\n\r\n                            >{this.state.isVerifyingOtp ? \"Registering...\" : \"Register\"}</Button> : ''}\r\n                        </Grid>\r\n                    </Grid >\r\n                </Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CenterOnboardRegistration;\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Alert, InputAdornment, Snackbar } from '@mui/material'\r\n\r\nimport CenterOnboardApi from '../../components/CenterOnboardApi/Api/api'\r\n\r\nimport { PLEASE_ENTER_MOBILE_NUMBER, MOBILE_NUMBER_TEN_CHARACTERS, OTP_SENT_SUCCESSFULLY, OTP_NOT_ENTERED, LOGGED_IN_SUCCESSFULLY } from '../../components/centerRegistration/Api/const'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport NavBar from '../../components/NavBar/navbar'\r\n/**\r\n * redux -> import details\r\n */\r\nimport { setLoginDetails, setLogoutDetails } from '../../store/CenterOnboardStore/action'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst styles = {\r\n    layout: {\r\n        width: 400,\r\n        textAlign: 'center',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        margin: 'auto',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n    inputBox: {\r\n        width: 350,\r\n        textAlign: 'center',\r\n        marginTop: 10,\r\n\r\n    },\r\n    btnLayout: {\r\n        width: 350,\r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        height: 50,\r\n        marginBottom: 20,\r\n    },\r\n    btnHorLayout: {\r\n        width: 350,\r\n        textAlign: 'center',\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        height: 40,\r\n        marginBottom: 20,\r\n    },\r\n}\r\n\r\n\r\nexport default function CenterOnboardLogin() {\r\n\r\n    const [mobileNumber, setMobileNumber] = useState(\"\");\r\n\r\n    const [snackBarValues, setSnackBarValues] = useState({\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n    })\r\n\r\n    const globalState = useSelector((state) => state.centerOnboardReducer)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n\r\n    const showDialog = (open, type, msg) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: msg,\r\n            duration: 5000,\r\n            type: type\r\n        })\r\n\r\n    }\r\n\r\n    const closeDialog = (open = false) => {\r\n        setSnackBarValues({\r\n            open: open,\r\n            msg: \"\",\r\n            duration: 5000,\r\n            type: \"\"\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleOnChangeMobile = (e) => {\r\n        let value = e.target.value\r\n        console.log(value.length, \" value \")\r\n        if (value.length > 10) {\r\n            return\r\n        }\r\n        setMobileNumber(e.target.value);\r\n    }\r\n\r\n\r\n    const [isOtpSent, setIsOtpSent] = useState(false)\r\n    const [otpEntered, setOtpEntered] = useState('')\r\n    const [isOtpSending, setIsOtpSending] = useState(false)\r\n    const [isLoggingIn, setIsLoggingIn] = useState(false)\r\n\r\n    const handleOnChangeOtp = (e) => {\r\n        setOtpEntered(e.target.value)\r\n    }\r\n\r\n    const onClickSendOtp = () => {\r\n\r\n        if (!mobileNumber) {\r\n            showDialog(true, \"error\", PLEASE_ENTER_MOBILE_NUMBER)\r\n            return\r\n        }\r\n\r\n        if (!(mobileNumber.toString().length == 10)) {\r\n            showDialog(true, \"error\", MOBILE_NUMBER_TEN_CHARACTERS)\r\n            return\r\n\r\n        }\r\n\r\n        let payload = {\r\n            country_code: \"+91\",\r\n            mobile_number: mobileNumber\r\n        }\r\n        let params = {\r\n            action: \"login\"\r\n        }\r\n\r\n        setIsOtpSending(true)\r\n\r\n        new CenterOnboardApi().SendOtpOnboarderLogin(payload, params).then(res => {\r\n\r\n            showDialog(true, \"success\", OTP_SENT_SUCCESSFULLY)\r\n            setIsOtpSent(true)\r\n            setIsOtpSending(false)\r\n        }).catch(err => {\r\n            console.log(err)\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n            setIsOtpSending(false)\r\n\r\n\r\n        })\r\n    }\r\n\r\n    const onClickLogin = () => {\r\n\r\n        if (!otpEntered) {\r\n            showDialog(true, \"error\", OTP_NOT_ENTERED)\r\n            return\r\n        }\r\n\r\n        let payload = {\r\n            country_code: \"+91\",\r\n            mobile_number: mobileNumber,\r\n            otp: otpEntered\r\n        }\r\n        setIsLoggingIn(true)\r\n\r\n        new CenterOnboardApi().VerifyOtpOnboarder(payload).then(res => {\r\n\r\n            showDialog(true, \"success\", LOGGED_IN_SUCCESSFULLY)\r\n            console.log(\"res is\", res);\r\n            dispatch(\r\n                setLoginDetails({\r\n                    centerOnboardDetails: res.data.latest_details,\r\n                    isCenterOnboardLoggedIn: true,\r\n                    userTokens: {\r\n                        accessToken: res.data.token,\r\n                    }\r\n                }),\r\n            )\r\n            console.log(\"redirect it\")\r\n            history.push('/center-onboard-view-centers')\r\n\r\n            setIsOtpSent(true)\r\n            setIsLoggingIn(false)\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n            showDialog(true, \"error\", err?.response?.data?.message)\r\n            setIsLoggingIn(false)\r\n\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card style={styles.layout} sx={{ minWidth: 200 }}>\r\n\r\n            {\r\n                snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={closeDialog}>\r\n                    <Alert onClose={closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n                        {snackBarValues.msg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            }\r\n\r\n            {/* <NavBar /> */}\r\n\r\n            <CardContent>\r\n                <Typography sx={{ fontSize: 25 }} color=\"text.secondary\" align=\"center\" gutterBottom>\r\n                    Center Onboard Login\r\n                </Typography>\r\n                <TextField\r\n                    // helperText=\"Enter mobile\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"Enter registered Phone Number *\"\r\n                    style={styles.inputBox}\r\n                    type=\"number\"\r\n                    disabled={isOtpSent}\r\n                    onChange={handleOnChangeMobile}\r\n                    value={mobileNumber}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Typography >\r\n                                    +91\r\n                                </Typography>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n\r\n                {\r\n                    isOtpSent && <>\r\n                        <TextField\r\n                            // helperText=\"Enter Otp\"\r\n                            id=\"demo-helper-text-misaligned\"\r\n                            label=\"Enter Otp\"\r\n                            style={styles.inputBox}\r\n                            type=\"number\"\r\n                            onChange={handleOnChangeOtp}\r\n                        />\r\n                    </>\r\n                }\r\n            </CardContent>\r\n            <CardActions>\r\n                {!isOtpSent && <Button style={styles.btnLayout}\r\n                    onClick={() => onClickSendOtp()}\r\n                    disabled={isOtpSending}\r\n                    variant=\"contained\">{isOtpSending ? \"Sending otp\" : \"Send otp\"}\r\n                </Button>}\r\n                {isOtpSent && <Button style={styles.btnHorLayout}\r\n                    onClick={() => onClickSendOtp()}\r\n                    disabled={isOtpSending}\r\n                    variant=\"contained\">\r\n                    {isOtpSending ? \"Resending\" : \"Resend otp\"}</Button>}\r\n\r\n                {isOtpSent && <Button style={styles.btnHorLayout}\r\n                    onClick={() => onClickLogin()}\r\n                    disabled={isLoggingIn}\r\n                    variant=\"contained\">\r\n                    {isLoggingIn ? \"Logging In , please wait\" : \"Login\"}</Button>}\r\n\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport '../../../Styles/style.css';\r\nimport { Alert, FormControlLabel, FormGroup, InputAdornment, Snackbar, Switch, Typography } from '@mui/material'\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Chip from '@mui/material/Chip';\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport CenterRegistrationApi from '../../../components/centerRegistration/Api/api'\r\nimport CenterOnboardApi from '../../../components/CenterOnboardApi/Api/api';\r\n\r\nimport { IndianStates } from '../../../assets/IndianStates';\r\nimport th from 'date-fns/esm/locale/th/index.js';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst stylesCss = {\r\n  inputBox: {\r\n    width: '100%',\r\n    marginBottom: \"10px\"\r\n  },\r\n  gridStyle: {\r\n    width: '80%',\r\n    margin: 'auto'\r\n  },\r\n  paddingInnerGrids: {\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n    paddingTop: \"10px\"\r\n  }\r\n}\r\n\r\nclass CenterRegistration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      center_name: \"\",\r\n      personal_details: {\r\n        phone: {\r\n          country_code: \"+91\",\r\n          mobile_number: \"\",\r\n        },\r\n        email: \"\",\r\n        name: \"\",\r\n        user_name: \"\",\r\n        about: \"\",\r\n      },\r\n      primary_services: \"\",\r\n      secondary_services: {\r\n        secondary_services_id: \"\",\r\n        priority: \"\",\r\n      },\r\n      address_details: {\r\n        // longitude: \"\",\r\n        // latitude: \"\",\r\n        address_line: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        pincode: \"\",\r\n        additional_pincode: \"\",\r\n        country: \"INDIA\",\r\n        // short_code_for_place: \"\",\r\n        // google_geo_location: \"\",\r\n      },\r\n      no_of_technicians: \"\",\r\n      automate_qr_code: false,\r\n      qr_code: \"\",\r\n      upi_id: \"\",\r\n      toast: {\r\n        open: false,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n\r\n      },\r\n      isFormValid: false,\r\n      servicesList: [],\r\n\r\n      sendingOtp: false,\r\n      isOtpSentSuccess: false,\r\n      otpEntered: '',\r\n\r\n      isVerifyingOtp: false,\r\n      isOtpVerfied: false,\r\n\r\n      isRegistering: false,\r\n\r\n      allClientsList: [],\r\n      clients_ids_list: [],\r\n\r\n      login_into_application: false,\r\n      accepting_broadcast_ticket: false,\r\n\r\n      doesCenterExists: false,\r\n      isEditDetailsExists: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllServicesExists()\r\n    this.getAllClients()\r\n\r\n    let path = window.location.hash.split('?')\r\n    console.log(path, \"path\", new URLSearchParams(this.props.location.search).get(\"edit\"))\r\n    let editCenterId = new URLSearchParams(this.props.location.search).get(\"edit\")\r\n\r\n    if (editCenterId != null) {\r\n      this.getCenterDetails(editCenterId)\r\n    }\r\n\r\n  }\r\n\r\n  getCenterIdForEdit() {\r\n    return new URLSearchParams(this.props.location.search).get(\"edit\")\r\n  }\r\n\r\n  getCenterDetails(id) {\r\n    let payload = {\r\n      center_obj_id: id,\r\n    }\r\n\r\n    this.setState({\r\n      isEditDetailsExists: true,\r\n    })\r\n\r\n    new CenterRegistrationApi().getCenterDetails(payload).then(res => {\r\n\r\n      if (res?.data?.length) {\r\n        this.setState({\r\n          doesCenterExists: true,\r\n        })\r\n        this.updateStateOfEditData(res?.data?.[0])\r\n      }\r\n\r\n\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n  updateStateOfEditData(centerDetails) {\r\n    this.setState({\r\n      center_name: centerDetails?.center_name,\r\n      personal_details: {\r\n        phone: {\r\n          country_code: \"+91\",\r\n          mobile_number: centerDetails?.personal_details?.phone?.mobile_number,\r\n        },\r\n        email: centerDetails?.personal_details?.email,\r\n        name: centerDetails?.personal_details?.name,\r\n        user_name: centerDetails?.personal_details?.user_name,\r\n        about: centerDetails?.personal_details?.about,\r\n      },\r\n      primary_services: centerDetails?.services?.primary_services?._id,\r\n      secondary_services: {\r\n        secondary_services_id: centerDetails?.services?.secondary_services?.[0]?.secondary_services_id?._id,\r\n        priority: centerDetails?.services?.secondary_services?.[0]?.secondary_services_id?.priority,\r\n      },\r\n      address_details: {\r\n        // longitude: centerDetails?.address_details?.longitude,\r\n        // latitude: centerDetails?.address_details?.latitude,\r\n        address_line: centerDetails?.address_details?.address_line,\r\n        city: centerDetails?.address_details?.city,\r\n        state: centerDetails?.address_details?.state,\r\n        pincode: centerDetails?.address_details?.pincode,\r\n        additional_pincode: centerDetails?.address_details?.additional_pincode,\r\n        country: \"INDIA\",\r\n        // short_code_for_place: centerDetails?.address_details?.short_code_for_place,\r\n        // google_geo_location: centerDetails?.address_details?.google_geo_location,\r\n      },\r\n      upi_id: centerDetails?.payment_details?.upi_id,\r\n      no_of_technicians: centerDetails?.no_of_technicians,\r\n      clients_ids_list: centerDetails?.clients_ids_list?.map(ite => ite._id),\r\n      login_into_application: centerDetails?.disabled_for?.login_into_application,\r\n      accepting_broadcast_ticket: centerDetails?.disabled_for?.accepting_broadcast_ticket,\r\n\r\n    })\r\n  }\r\n\r\n  getAllClients() {\r\n    new CenterRegistrationApi().getAllClients().then(res => {\r\n      this.setState({\r\n        allClientsList: res.data\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  getAllServicesExists() {\r\n    new CenterRegistrationApi().getAllActiveServices().then(res => {\r\n      this.setState({\r\n        servicesList: res.data\r\n      })\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  showDialog = (open, type, msg) => {\r\n    this.setState({\r\n      toast: {\r\n        open: open,\r\n        msg: msg,\r\n        duration: 5000,\r\n        type: type\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  closeDialog = (open = false) => {\r\n    this.setState({\r\n      toast: {\r\n        open: open,\r\n        msg: \"\",\r\n        duration: 5000,\r\n        type: \"\"\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  handleInputChangeClients = (event) => {\r\n\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    console.log(value)\r\n\r\n    this.setState({\r\n      clients_ids_list: typeof value === 'string' ? value.split(',') : value\r\n    })\r\n\r\n\r\n  }\r\n\r\n  handleChangeInputOuter = (e) => {\r\n    let { name, value } = e.target\r\n\r\n    if (name === \"primary_services\") {\r\n      this.setState({\r\n        secondary_services: {\r\n          ...this.state.secondary_services,\r\n          secondary_services_id: value\r\n        }\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    }, () => {\r\n      console.log(this.state)\r\n    })\r\n  }\r\n\r\n  handleChangePersonalDetails = (e) => {\r\n    let { name, value } = e.target\r\n\r\n    this.setState({\r\n      personal_details: {\r\n        phone: {\r\n          ...this.state.personal_details.phone,\r\n          [name]: value\r\n\r\n        }\r\n      }\r\n    }, () => {\r\n      console.log(this.state)\r\n    })\r\n  }\r\n\r\n  handleResetStateValues = () => {\r\n    this.setState({\r\n      center_name: \"\",\r\n      personal_details: {\r\n        phone: {\r\n          country_code: \"+91\",\r\n          mobile_number: \"\",\r\n        },\r\n        email: \"\",\r\n        name: \"\",\r\n        user_name: \"\",\r\n        about: \"\",\r\n      },\r\n      primary_services: \"\",\r\n      secondary_services: {\r\n        secondary_services_id: \"\",\r\n        priority: \"\",\r\n      },\r\n      address_details: {\r\n        // longitude: \"\",\r\n        // latitude: \"\",\r\n        address_line: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        pincode: \"\",\r\n        additional_pincode: \"\",\r\n        country: \"INDIA\",\r\n        // short_code_for_place: \"\",\r\n        // google_geo_location: \"\",\r\n      },\r\n      no_of_technicians: \"\",\r\n      qr_code: \"\",\r\n      upi_id: \"\",\r\n\r\n      isFormValid: false,\r\n\r\n      sendingOtp: false,\r\n      isOtpSentSuccess: false,\r\n      otpEntered: '',\r\n\r\n      isVerifyingOtp: false,\r\n      isOtpVerfied: false,\r\n\r\n      isRegistering: false,\r\n      clients_ids_list: []\r\n    })\r\n  }\r\n\r\n  handleChangeAddressDetails = (e) => {\r\n\r\n    let { name, value } = e.target\r\n\r\n    if (name === \"pincode\") {\r\n      if (value.length <= 6) {\r\n        this.setState({\r\n          address_details: {\r\n            ...this.state.address_details,\r\n            additional_pincode: value\r\n          }\r\n        }, () => {\r\n          this.setState({\r\n            address_details: {\r\n              ...this.state.address_details,\r\n              [name]: value\r\n            }\r\n          })\r\n        })\r\n\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      address_details: {\r\n        ...this.state.address_details,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChangeSecondaryServiceDetails = (e) => {\r\n\r\n    let { name, value } = e.target\r\n\r\n    this.setState({\r\n      secondary_services: {\r\n        ...this.state.secondary_services,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  handleRegister = () => {\r\n\r\n    if (!(this.state.center_name &&\r\n      this.state.personal_details.phone.mobile_number &&\r\n      this.state.primary_services &&\r\n      this.state.secondary_services.secondary_services_id &&\r\n      this.state.address_details.address_line &&\r\n      this.state.address_details.city &&\r\n      this.state.address_details.state &&\r\n      this.state.address_details.pincode &&\r\n      this.state.address_details.country &&\r\n      (this.state.no_of_technicians === 0 || this.state.no_of_technicians) &&\r\n      this.state.address_details.additional_pincode)) {\r\n\r\n      this.setState({\r\n        isFormValid: true\r\n      })\r\n\r\n      this.showDialog(true, \"error\", \"Please fill in all required details\")\r\n      return\r\n    }\r\n\r\n    let payload = {\r\n      center_name: this.state.center_name,\r\n      personal_details: this.state.personal_details,\r\n      primary_services: this.state.primary_services,\r\n      secondary_services: [\r\n        {\r\n          secondary_services_id: this.state.secondary_services.secondary_services_id,\r\n          priority: 1,\r\n\r\n        }\r\n      ],\r\n      address_details: this.state.address_details,\r\n      no_of_technicians: this.state.no_of_technicians,\r\n      clients_ids_list: this.state.clients_ids_list\r\n    }\r\n\r\n    this.setState({\r\n      isRegistering: true,\r\n    })\r\n\r\n    if (this.state.isEditDetailsExists) {\r\n\r\n      payload.center_obj_id = this.getCenterIdForEdit()\r\n      payload = {\r\n        ...payload,\r\n        login_into_application: this.state.login_into_application,\r\n        accepting_broadcast_ticket: this.state.accepting_broadcast_ticket,\r\n        upi_id: this.state.upi_id\r\n      }\r\n      new CenterRegistrationApi().updateCenterAdmin(payload).then(res => {\r\n\r\n        this.showDialog(true, \"success\", \"Center Updated \");\r\n\r\n        this.setState({\r\n          isRegistering: false,\r\n        })\r\n\r\n      }).catch(err => {\r\n        console.log(err)\r\n        this.setState({\r\n          isRegistering: false,\r\n        })\r\n        this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    payload = {\r\n      ...payload,\r\n      qr_code: this.state.qr_code,\r\n      automate_qr_code: this.state.automate_qr_code\r\n    }\r\n\r\n    new CenterOnboardApi().OnboarderCreateCenter(payload).then(res => {\r\n\r\n      this.showDialog(true, \"success\", \"Center added ! Add more centers \");\r\n\r\n      this.setState({\r\n        isRegistering: false,\r\n      })\r\n\r\n      this.handleResetStateValues()\r\n\r\n    }).catch(err => {\r\n      console.log(err)\r\n      this.setState({\r\n        isRegistering: false,\r\n      })\r\n      this.showDialog(true, \"error\", err?.response?.data?.message);\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n  handleChangeCheckBox = (e, name) => {\r\n    this.setState({ [name]: e.target.checked })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const { toast: snackBarValues, isFormValid } = this.state\r\n\r\n    return (\r\n      <div>\r\n\r\n        {\r\n          snackBarValues.open && <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={snackBarValues.open} autoHideDuration={snackBarValues.duration} onClose={this.closeDialog}>\r\n            <Alert onClose={this.closeDialog} severity={snackBarValues.type} sx={{ width: '100%' }}>\r\n              {snackBarValues.msg}\r\n            </Alert>\r\n          </Snackbar>\r\n        }\r\n        <h2 className=\"text-align-center\">{this.state.isEditDetailsExists ? \"Update center\" : \"Add Center\"}</h2>\r\n        <Item>\r\n          <Grid container  >\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please provide your Shop / Center (Name)\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Shop / Center (Name)\"\r\n                name=\"center_name\"\r\n                onChange={this.handleChangeInputOuter}\r\n                style={stylesCss.inputBox}\r\n                error={isFormValid && !this.state.center_name}\r\n                value={this.state.center_name}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please provide your Shop / Center (Name)\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"What's App Number\"\r\n                name=\"mobile_number\"\r\n                disabled={this.state.isOtpSentSuccess}\r\n                onChange={this.handleChangePersonalDetails}\r\n                style={stylesCss.inputBox}\r\n                error={isFormValid && !this.state.personal_details.phone.mobile_number}\r\n                value={this.state.personal_details.phone.mobile_number}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Typography>+91</Typography>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                inputProps={{ maxLength: 10 }}\r\n\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n              <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Main Service You Offer / Need</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"Main Service You Offer / Need\"\r\n                  name=\"primary_services\"\r\n                  input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\r\n                  onChange={this.handleChangeInputOuter}\r\n                  error={isFormValid && !this.state.primary_services}\r\n                  value={this.state.primary_services}\r\n\r\n\r\n                >\r\n                  {this.state.servicesList?.map(ite => {\r\n                    return <MenuItem value={ite._id}>\r\n                      {ite.service_name}\r\n                    </MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* change herer */}\r\n            <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n              <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Choose clients</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"Choose clients\"\r\n                  name=\"clients_ids_list\"\r\n                  multiple\r\n                  onChange={this.handleInputChangeClients}\r\n                  error={isFormValid && !this.state.clients_ids_list.length}\r\n                  value={this.state.clients_ids_list}\r\n                >\r\n                  {this.state.allClientsList?.map(ite => {\r\n                    return <MenuItem value={ite._id}>\r\n                      {ite.client_name}\r\n                    </MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n              <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Other Service You Offer / Need</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"Other Service You Offer / Need\"\r\n                  name=\"secondary_services_id\"\r\n                  onChange={this.handleChangeSecondaryServiceDetails}\r\n                  error={isFormValid && !this.state.secondary_services.secondary_services_id}\r\n                  value={this.state.secondary_services.secondary_services_id}\r\n\r\n                // multiple\r\n                >\r\n                  {this.state.servicesList?.map(ite => {\r\n                    return <MenuItem value={ite._id}>\r\n                      {ite.service_name}\r\n                    </MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please enter your address\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Address\"\r\n                name=\"address_line\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                style={stylesCss.inputBox}\r\n                error={isFormValid && !this.state.address_details.address_line}\r\n                value={this.state.address_details.address_line}\r\n\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please enter your city\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"City\"\r\n                name=\"city\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                error={isFormValid && !this.state.address_details.city}\r\n                value={this.state.address_details.city}\r\n\r\n                style={stylesCss.inputBox}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <FormControl md={6} style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">State</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"State\"\r\n                  name=\"state\"\r\n                  onChange={this.handleChangeAddressDetails}\r\n                  value={this.state.address_details.state}\r\n                  error={isFormValid && !this.state.address_details.state}\r\n\r\n                >\r\n                  {IndianStates?.map(ite => {\r\n                    return <MenuItem value={ite.value}>\r\n                      {ite.value}\r\n                    </MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                error={isFormValid && !this.state.address_details.country}\r\n                value={this.state.address_details.country}\r\n                style={stylesCss.inputBox}\r\n                disabled\r\n              />\r\n            </Grid>\r\n\r\n            {\r\n              this.state.isEditDetailsExists && <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                <FormGroup>\r\n                  <FormControlLabel control={<Switch checked={this.state.login_into_application} onChange={(e) => this.handleChangeCheckBox(e, \"login_into_application\")} />} label=\"Disable login\" />\r\n                </FormGroup>\r\n              </Grid>\r\n            }\r\n\r\n            {\r\n              this.state.isEditDetailsExists && <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                <FormGroup>\r\n                  <FormControlLabel control={<Switch checked={this.state.accepting_broadcast_ticket} onChange={(e) => this.handleChangeCheckBox(e, \"accepting_broadcast_ticket\")} />} label=\"Disable accepting ticket\" />\r\n                </FormGroup>\r\n              </Grid>\r\n            }\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please enter your pincode\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Service Area Pincode (main)\"\r\n                name=\"pincode\"\r\n                type=\"number\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                error={isFormValid && !this.state.address_details.pincode}\r\n                value={this.state.address_details.pincode}\r\n\r\n                style={stylesCss.inputBox}\r\n                inputProps={{ maxLength: 6 }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n              <TextField\r\n                helperText=\"Please enter your additional pincode\"\r\n                id=\"demo-helper-text-misaligned\"\r\n                label=\"Addtional Service Area Pincode (other)\"\r\n                name=\"additional_pincode\"\r\n                onChange={this.handleChangeAddressDetails}\r\n                error={isFormValid && !this.state.address_details.additional_pincode}\r\n                value={this.state.address_details.additional_pincode}\r\n\r\n                style={stylesCss.inputBox}\r\n                inputProps={{ maxLength: 6 }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n              <FormControl style={stylesCss.inputBox} sx={{ minWidth: 120 }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Technician Associate</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"Technician Associate\"\r\n                  name=\"no_of_technicians\"\r\n                  onChange={this.handleChangeInputOuter}\r\n                  error={isFormValid && this.state.no_of_technicians === \"\"}\r\n                  value={this.state.no_of_technicians}\r\n\r\n                >\r\n                  {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(ite => {\r\n                    return <MenuItem value={ite}>{ite}</MenuItem>\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {\r\n              this.state.isEditDetailsExists ? \"\" : <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n                <FormGroup>\r\n                  <FormControlLabel control={<Switch checked={this.state.automate_qr_code} onChange={(e) => this.handleChangeCheckBox(e, \"automate_qr_code\")} />} label=\"Automate qr code\" />\r\n                </FormGroup>\r\n              </Grid>\r\n            }\r\n            {\r\n              !this.state.isEditDetailsExists ? !this.state.automate_qr_code ? <>\r\n                <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n\r\n                  <TextField\r\n                    helperText=\"Please enter your additional pincode\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"Enter qr code\"\r\n                    name=\"qr_code\"\r\n                    onChange={(e) => {\r\n                      this.setState({ qr_code: e.target.value })\r\n                    }}\r\n                    value={this.state.qr_code}\r\n                    style={stylesCss.inputBox}\r\n                  />\r\n                </Grid>\r\n              </> : \"\"\r\n                : \"\"\r\n            }\r\n            {\r\n              this.state.isEditDetailsExists ? <>\r\n                <Grid item md={6} style={stylesCss.paddingInnerGrids}>\r\n\r\n                  <TextField\r\n                    helperText=\"Please enter your additional pincode\"\r\n                    id=\"demo-helper-text-misaligned\"\r\n                    label=\"Enter upi id\"\r\n                    name=\"upi_id\"\r\n                    onChange={(e) => {\r\n                      this.setState({ upi_id: e.target.value })\r\n                    }}\r\n                    value={this.state.upi_id}\r\n                    style={stylesCss.inputBox}\r\n                  />\r\n                </Grid>\r\n              </> : \"\"\r\n            }\r\n\r\n            {\r\n              this.state.isOtpSentSuccess && !this.state.isOtpVerfied ? <Grid item style={stylesCss.paddingInnerGrids} md={6}>\r\n                <TextField\r\n                  id=\"demo-helper-text-misaligned\"\r\n                  label=\"Enter otp\"\r\n                  name=\"otpEntered\"\r\n                  onChange={this.handleChangeInputOuter}\r\n                  value={this.state.otpEntered}\r\n\r\n                  style={stylesCss.inputBox}\r\n                />\r\n              </Grid> : ''\r\n            }\r\n\r\n\r\n\r\n            <Grid style={stylesCss.paddingInnerGrids} item md={6}>\r\n\r\n              {<Button\r\n                onClick={() => this.handleRegister()}\r\n                variant=\"contained\"\r\n                disabled={this.state.isRegistering}\r\n              >{this.state.isRegistering ? this.state.isEditDetailsExists ? \"Updating....\" : \"Adding ....\" : this.state.isEditDetailsExists ? \"Update center\" : \"Add center\"}</Button>}\r\n            </Grid>\r\n          </Grid >\r\n        </Item>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  reduxState: state.userReducer,\r\n})\r\nexport default connect(mapStateToProps, null)(withRouter(CenterRegistration));","import React, { Component } from 'react'\r\n\r\nimport '../../../Styles/style.css';\r\nimport CenterOnboardApi from '../../../components/CenterOnboardApi/Api/api';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst dateFormat = { year: \"numeric\", month: \"short\", day: \"numeric\" };\r\n\r\nclass CenterOnboardCenters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            centersList: [],\r\n            isCenterEdit: false,\r\n\r\n            toast: {\r\n                open: false,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.OnboarderGetAllCenters();\r\n    }\r\n\r\n    showDialog = (open, type, msg) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: msg,\r\n                duration: 5000,\r\n                type: type\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    closeDialog = (open = false) => {\r\n        this.setState({\r\n            toast: {\r\n                open: open,\r\n                msg: \"\",\r\n                duration: 5000,\r\n                type: \"\"\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getFormattedList = (element) => {\r\n        console.log(element)\r\n        let result = [];\r\n        element && element.length > 0 && element.map((item) => {\r\n            result.push(item);\r\n        })\r\n        return result.length > 0 ? result.join(\", \") : \"\";\r\n    }\r\n\r\n    OnboarderGetAllCenters() {\r\n        new CenterOnboardApi().OnboarderGetAllCenters().then(res => {\r\n            let parsedData = [];\r\n            if (res && res.data && res.data.length > 0) {\r\n                parsedData = res.data;\r\n            }\r\n            this.setState({\r\n                centersList: parsedData\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleAddCenter = () => {\r\n        this.props.history.push('/center-onboard-add-center');\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({ isCenterEdit: false });\r\n    };\r\n\r\n    handleDeleteCenter = (id) => {\r\n        let payload = {\r\n            user_object_id: id\r\n        }\r\n        new CenterOnboardApi().adminRemoveUser(payload).then(res => {\r\n            if (res) {\r\n                this.showDialog(true, \"success\", 'Center deleted successfully')\r\n            }\r\n            this.OnboarderGetAllCenters();\r\n        }).catch(err => {\r\n            console.log(err)\r\n            this.showDialog(true, \"error\", err?.response?.data?.message)\r\n        })\r\n    }\r\n\r\n    getFormattedServices = (services) => {\r\n        let secondary_services_list = [];\r\n        services && services.length > 0 && services.map((item) => {\r\n          secondary_services_list.push(item?.secondary_services_id?.service_name);\r\n        })\r\n        return secondary_services_list.length > 0 ? secondary_services_list.join(\", \") : \"\";\r\n      }\r\n    \r\n      getFormattedClients = (clients) => {\r\n        let clients_list = [];\r\n        clients && clients.length > 0 && clients.map((item) => {\r\n          clients_list.push(item.client_name);\r\n        })\r\n        return clients_list.length > 0 ? clients_list.join(\", \") : \"\";\r\n      }\r\n\r\n    render() {\r\n        const { centersList } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='add-service-button'>\r\n                    <Button variant=\"contained\" className='text-transform-none' onClick={this.handleAddCenter}>\r\n                        Add a Center\r\n                    </Button>\r\n                </div>\r\n\r\n                <div>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Center Name</TableCell>\r\n                                    <TableCell>Phone</TableCell>\r\n                                    <TableCell>QR Code</TableCell>\r\n                                    <TableCell>Primary Pincode</TableCell>\r\n                                    <TableCell>Secondary Pincode</TableCell>\r\n                                    <TableCell>Primary Skill</TableCell>\r\n                                    <TableCell>Secondary Skill</TableCell>\r\n                                    <TableCell>Status</TableCell>\r\n                                    <TableCell>Created At</TableCell>\r\n                                    <TableCell>Authorized For Clients</TableCell>\r\n                                    <TableCell>Total ticket closed</TableCell>\r\n\r\n                                    <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {console.log(\"centersList is\", centersList)}\r\n                                {centersList && centersList.length > 0 && centersList.map((row) => (\r\n                                    <TableRow\r\n                                        key={row._id}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.center_name}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row?.personal_details?.phone?.country_code + row?.personal_details?.phone?.mobile_number}\r\n                                        </TableCell>\r\n                                        {/* <TableCell component=\"th\" scope=\"row\">\r\n                                            {this.getFormattedList(row?.allowed_pincodes)}\r\n                                        </TableCell> */}\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row?.qr_details?.qr_id}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row?.address_details?.pincode}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row?.address_details?.additional_pincode}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row?.services?.primary_services?.service_name}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {this?.getFormattedServices(row?.services?.secondary_services)}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.is_active}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {new Date(row?.createdAt)?.toLocaleDateString(\"en-US\", dateFormat)}\r\n                                        </TableCell><TableCell component=\"th\" scope=\"row\">\r\n                                            {this.getFormattedClients(row?.clients_ids_list)}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row?.count_details?.closed_ticket_count}\r\n                                        </TableCell>\r\n                                        {/* <TableCell component=\"th\" scope=\"row\">\r\n                                            <Button variant=\"outlined\" onClick={() => this.handleDeleteCenter(row._id)}>\r\n                                                Delete User\r\n                                            </Button>\r\n                                        </TableCell> */}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CenterOnboardCenters);","import { Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Trips from \"./pages/trips\";\r\nimport PublicTicketBooking from \"./pages/PublicTicketBooking\"\r\nimport PublicTicketBookingQr from './pages/publicTicketBookingQr'\r\nimport CenterRegistration from \"./pages/CenterRegistration\"\r\nimport Technicians from './pages/Technicians';\r\nimport Tickets from './pages/Admin/Tickets';\r\nimport Login from \"./pages/login\"\r\nimport Centers from \"./pages/Admin/Centers\"\r\n\r\nimport AddTechnician from \"./pages/AddTechnician\";\r\nimport AddTicket from \"./pages/AddTicket\";\r\nimport AdminTechnician from './pages/Admin/technician'\r\nimport AdminLogin from './pages/Admin/adminLogin'\r\nimport PrivateRoute from './helper/privateRoute';\r\nimport PublicRoute from './helper/publicRoute';\r\nimport AdminPrivateRoute from './helper/privateRouteAdmin'\r\nimport AdminPublicRoute from './helper/adminPublicRoute'\r\nimport CenterOnboardRoute from './helper/privateRouteCenterOnboarding'\r\n\r\nimport TicketsCenter from './pages/ticketCenter'\r\nimport CenterDashboard from './pages/CenterDashboard'\r\nimport BroadCastedRequests from './pages/broadcastedRequests'\r\nimport TicketCreatedByYou from './pages/ticketCreatedByYou'\r\n\r\nimport NavBar from './components/NavBar/navbar'\r\nimport AdminNavBar from './components/NavBar/adminPannel'\r\nimport CenterOnboardNavBar from './components/NavBar/CenterOnboardNavbar'\r\nimport AdminDashboard from './pages/Admin/AdminDashboard'\r\nimport BroadcastTickets from './pages/Admin/BroadcastTickets'\r\nimport AdminClients from './pages/Admin/AdminClients'\r\nimport AdminRoles from './pages/Admin/Roles/AdminRoles'\r\nimport AddTicketAdmin from './pages/Admin/AddNewTicket'\r\nimport AdminBroadCastList from './pages/Admin/broadcastedList'\r\nimport AdminAddCenter from './pages/Admin/AddCenter'\r\nimport PaymentsList from './pages/payments'\r\nimport ViewTicketPage from './pages/Admin/veiwTicket'\r\n\r\nimport FeedBackComponent from './pages/feedBack'\r\nimport AdminFeedBack from './pages/Admin/FeedBack'\r\nimport AddRole from \"./pages/Admin/Roles/AddRole\";\r\nimport AdminUsers from './pages/Admin/Users/AdminUsers'\r\nimport AddUser from \"./pages/Admin/Users/AddUser\";\r\nimport AdminCenterOnboarders from './pages/Admin/AdminCenterOnboarders/AdminCenterOnboarders';\r\nimport AddCenterOnboarder from './pages/Admin/AdminCenterOnboarders/AddCenterOnboarder';\r\n\r\nimport CenterOnboardRegistration from './pages/CenterOnboarding/CenterOnboardRegistration'\r\nimport CenterOnboardLogin from './pages/CenterOnboarding/CenterOnboardLogin'\r\nimport CenterOnboardAddCenter from './pages/CenterOnboarding/components/CenterOnboardAddCenter'\r\nimport CenterOnboardViewCenters from './pages/CenterOnboarding/components/CentersList'\r\n\r\nconst stylesSheet = {\r\n  styleForDiv: {\r\n    marginTop: \"8%\",\r\n    marginLeft: \"20%\",\r\n    marginRight: \"5%\",\r\n\r\n  }\r\n}\r\n\r\nconst Routes = () => (\r\n  <Suspense >\r\n    <Switch>\r\n      {/* <PublicRoute exact path=\"/\" component={Login} /> */}\r\n      <PublicRoute exact path=\"/\">\r\n        <Redirect to=\"/booking\" />\r\n      </PublicRoute>\r\n\r\n      {/* <PrivateRoute path=\"/trips\" component={Trips} /> */}\r\n      <Route path=\"/registration/:centerOnboarderId?\" component={CenterRegistration} />\r\n\r\n      <Route path=\"/feedback/:id\" component={FeedBackComponent} />\r\n      <Route path=\"/booking/:id\" exact component={PublicTicketBookingQr} />\r\n\r\n      <Route path=\"/booking\" exact component={PublicTicketBooking} />\r\n\r\n\r\n      <PublicRoute path=\"/login\" component={Login} />\r\n\r\n      {/* Center Pages Routes Only */}\r\n      <PrivateRoute path=\"/center-dashboard\" component={() => {\r\n        return <>\r\n          <NavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <CenterDashboard />\r\n          </div>\r\n        </>\r\n      }} />\r\n\r\n      <PrivateRoute path=\"/Technicians\" component={() => {\r\n        return <>\r\n          <NavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <Technicians />\r\n          </div>\r\n        </>\r\n      }} />\r\n\r\n\r\n      <PrivateRoute path=\"/brodcast-requests\" component={() => {\r\n        return <>\r\n          <NavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <BroadCastedRequests />\r\n          </div>\r\n        </>\r\n      }} />\r\n\r\n\r\n      <PrivateRoute path=\"/payments\" component={() => {\r\n        return <>\r\n          <NavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <PaymentsList />\r\n          </div>\r\n        </>\r\n      }} />\r\n\r\n      <PrivateRoute path=\"/AddTechnician\" component={() => {\r\n        return <>\r\n          <NavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <AddTechnician />\r\n\r\n          </div>\r\n        </>\r\n      }} />\r\n\r\n      <PrivateRoute path=\"/AddTicket\" component={() => {\r\n        return <>\r\n          <NavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <AddTicket />\r\n          </div>\r\n        </>\r\n      }} />\r\n\r\n      <PrivateRoute path=\"/ticket-created-by-you\" component={() => {\r\n        return <>\r\n          <NavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <TicketCreatedByYou />\r\n          </div>\r\n        </>\r\n      }} />\r\n\r\n      <PrivateRoute component={() => {\r\n        return <>\r\n          <NavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <TicketsCenter />\r\n          </div>\r\n        </>\r\n\r\n      }} path=\"/tickets-center\" />\r\n\r\n\r\n      <AdminPublicRoute path=\"/admin-login\" component={AdminLogin} />\r\n\r\n      {/* Admin Pages Routes Only */}\r\n      <AdminPrivateRoute path=\"/admin-dashboard\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <AdminDashboard />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n\r\n\r\n\r\n      <AdminPrivateRoute path=\"/broad-casted-list\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <AdminBroadCastList />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n      <AdminPrivateRoute path=\"/add-center\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <AdminAddCenter />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/view-ticket\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <ViewTicketPage />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n      <AdminPrivateRoute path=\"/admin-centers\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <Centers />\r\n          </div>\r\n        </>\r\n\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/admin-ticket\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <AddTicketAdmin />\r\n          </div>\r\n        </>\r\n\r\n      }} />\r\n\r\n\r\n      <AdminPrivateRoute path=\"/admin-feedBack\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <AdminFeedBack />\r\n          </div>\r\n        </>\r\n\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/Tickets\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <Tickets />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n\r\n      <AdminPrivateRoute component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <AdminTechnician />\r\n          </div>\r\n        </>\r\n\r\n      }} path=\"/admin-technician\" />\r\n\r\n      <AdminPrivateRoute path=\"/admin-broadcast-tickets\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <BroadcastTickets />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/admin-clients\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <AdminClients />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/roles\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <AdminRoles />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/add-role\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <AddRole />\r\n          </div>\r\n        </>\r\n\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/users\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <AdminUsers />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/add-user\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <AddUser />\r\n          </div>\r\n        </>\r\n\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/admin-center-onboarders\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n            <AdminCenterOnboarders />\r\n          </div>\r\n\r\n        </>\r\n      }} />\r\n\r\n      <AdminPrivateRoute path=\"/admin-add-center-onboarder\" component={() => {\r\n        return <>\r\n          <AdminNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <AddCenterOnboarder />\r\n          </div>\r\n        </>\r\n\r\n      }} />\r\n\r\n      <Route path=\"/center-onboard-registration\" component={CenterOnboardRegistration} />\r\n      <Route path=\"/center-onboard-login\" component={CenterOnboardLogin} />\r\n\r\n      <CenterOnboardRoute path=\"/center-onboard-add-center\" component={() => {\r\n        return <>\r\n          <CenterOnboardNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <CenterOnboardAddCenter />\r\n          </div>\r\n        </>\r\n\r\n      }} />\r\n      <CenterOnboardRoute path=\"/center-onboard-view-centers\" component={() => {\r\n        return <>\r\n          <CenterOnboardNavBar />\r\n          <div style={stylesSheet.styleForDiv}>\r\n\r\n            <CenterOnboardViewCenters />\r\n          </div>\r\n        </>\r\n\r\n      }} />\r\n\r\n    </Switch>\r\n  </Suspense>\r\n);\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./routes\";\r\n/**\r\n * redux imports\r\n */\r\n\r\nimport { wrapper } from './store/store'\r\nimport { useStore } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport setAuthToken from './helper/setAuthToken';\r\n\r\nimport './app.css'\r\n\r\n\r\nconst App = () => {\r\n\r\n    const store = useStore((state) => state)\r\n    /**\r\n       * redux setup\r\n       * theme provider\r\n       * context api\r\n       *\r\n       */\r\n    setAuthToken(store)\r\n\r\n    return process.browser ? (\r\n        <PersistGate persistor={store.__persistor} loading={<div>Loading</div>}>\r\n            <Router>\r\n                <Routes />\r\n            </Router>\r\n        </PersistGate>\r\n    ) : (\r\n        <PersistGate persistor={store}>\r\n            <Router>\r\n                <Routes />\r\n            </Router>\r\n        </PersistGate>\r\n    )\r\n}\r\n\r\nexport default wrapper.withRedux(App)\r\n","import axios from 'axios';\r\nimport { useSelector } from 'react-redux'\r\nimport { setLoginDetails as UserSetLoginDetails } from '../store/UserStore/action';\r\nimport { setLoginDetails as AdminSetLoginDetails } from '../store/AdminStore/action';\r\nimport { setLoginDetails as CenterOnboardSetLoginDetails } from '../store/CenterOnboardStore/action';\r\n\r\n\r\nfunction axiosInterceptor(props, adminState, centerOnboardState) {\r\n  axios.interceptors.response.use(\r\n    response => {\r\n      return response;\r\n    },\r\n    error => {\r\n      console.log({ axiosInterceptorError: error });\r\n      const err = error.response?.data?.message;\r\n\r\n      console.log({ axiosError: err });\r\n\r\n      if (err?.includes('jwt expired') || err?.includes('Permission denied') || err?.includes('User not found') || err?.includes('Token is invalid')) {\r\n\r\n        console.log('adminState is', adminState)\r\n        if (adminState?.adminDetails?.user_name) {\r\n          props.dispatch(\r\n            AdminSetLoginDetails({\r\n              adminDetails: {},\r\n              isAdminLoggedIn: false,\r\n              userTokens: {\r\n                accessToken: \"\"\r\n              },\r\n            })\r\n          )\r\n          // history.push(\"/admin-login\")\r\n          window.location.replace(\"http://onit.fit/#/admin-login\");\r\n        } else if (centerOnboardState?.centerOnboardDetails?.name) {\r\n          props.dispatch(\r\n            CenterOnboardSetLoginDetails({\r\n              centerOnboardDetails: {},\r\n              isCenterOnboardLoggedIn: false,\r\n              userTokens: {\r\n                accessToken: \"\"\r\n              },\r\n            })\r\n          )\r\n          // history.push(\"/admin-login\")\r\n          window.location.replace(\"http://onit.fit/#/admin-login\");\r\n        } else {\r\n          props.dispatch(\r\n            UserSetLoginDetails({\r\n              userDetails: {},\r\n              isUserLoggedIn: false,\r\n              userTokens: {\r\n                accessToken: \"\",\r\n              },\r\n            }),\r\n          )\r\n          // history.push(\"/login\")\r\n          window.location.replace(\"http://onit.fit/#/login\");\r\n\r\n        }\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\nconst SetAuthToken = (props) => {\r\n\r\n  const globalState = useSelector((state) => state.userReducer)\r\n  const adminState = useSelector((state) => state.AdminReducer)\r\n  const centerOnboardState = useSelector((state) => state.centerOnboardReducer)\r\n\r\n  axiosInterceptor(props, adminState, centerOnboardState);\r\n\r\n  /* apply to every requests */\r\n  if (adminState.isAdminLoggedIn) {\r\n    axios.defaults.headers.common['x-access-token'] = adminState?.userTokens?.accessToken;\r\n\r\n  } else if (centerOnboardState?.isCenterOnboardLoggedIn) {\r\n    axios.defaults.headers.common['x-access-token'] = globalState?.userTokens?.accessToken;\r\n\r\n  } else {\r\n    axios.defaults.headers.common['x-access-token'] = globalState?.userTokens?.accessToken;\r\n\r\n  }\r\n\r\n};\r\n\r\nexport default SetAuthToken;\r\n","import { SET_LOGIN_DETAILS, SET_LOGOUT_DETAILS, SET_UPDATED_USER_DETAILS } from \"./type\";\r\n\r\nconst initialState = {\r\n  userDetails: {\r\n\r\n  },\r\n  userTokens: {\r\n    accessToken: '',\r\n  },\r\n  isUserLoggedIn: false,\r\n  centerDetailsPopulated : {}\r\n\r\n};\r\n\r\n// Creating my reducer\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOGIN_DETAILS:\r\n      return { ...state, ...action.payload };\r\n    case SET_LOGOUT_DETAILS:\r\n      return { ...state, ...action.payload };\r\n    case SET_UPDATED_USER_DETAILS:\r\n      return { ...state, userDetails: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_LOGIN_DETAILS, SET_LOGOUT_DETAILS } from \"./type\";\r\n\r\nconst initialState = {\r\n  adminDetails: {\r\n\r\n  },\r\n  userTokens: {\r\n    accessToken: '',\r\n  },\r\n  isAdminLoggedIn: false,\r\n\r\n\r\n};\r\n\r\n// Creating my reducer\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOGIN_DETAILS:\r\n      return { ...action.payload };\r\n    case SET_LOGOUT_DETAILS:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_LOGIN_DETAILS, SET_LOGOUT_DETAILS } from \"./type\";\r\n\r\nconst initialState = {\r\n  centerOnboardDetails: {\r\n\r\n  },\r\n  userTokens: {\r\n    accessToken: '',\r\n  },\r\n  isCenterOnboardLoggedIn: false,\r\n\r\n\r\n};\r\n\r\n// Creating my reducer\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOGIN_DETAILS:\r\n      return { ...action.payload };\r\n    case SET_LOGOUT_DETAILS:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import createWebStorage from 'redux-persist/lib/storage/createWebStorage';\r\n\r\nconst createNoopStorage = () => {\r\n  return {\r\n    getItem(_key) {\r\n      return Promise.resolve(null);\r\n    },\r\n    setItem(_key, value) {\r\n      return Promise.resolve(value);\r\n    },\r\n    removeItem(_key) {\r\n      return Promise.resolve();\r\n    },\r\n  };\r\n};\r\n\r\nconst storage =\r\n  typeof window !== 'undefined'\r\n    ? createWebStorage('local')\r\n    : createNoopStorage();\r\n\r\nexport default storage;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { createWrapper, HYDRATE } from 'next-redux-wrapper'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport userReducer from './UserStore/reducer'\r\nimport AdminReducer from './AdminStore/reducer'\r\nimport centerOnboardReducer from './CenterOnboardStore/reducer'\r\n\r\nimport storage from './sync_storage'\r\n// If you don't bother about the error redux-persist failed to create sync storage. falling back to noop storage...uncomment the next line and comment out the previous import. See more on - https://github.com/vercel/next.js/discussions/15687\r\n// const storage = require('redux-persist/lib/storage').default;\r\n\r\n//COMBINING ALL REDUCERS\r\nconst combinedReducer = combineReducers({\r\n  userReducer,\r\n  AdminReducer,\r\n  centerOnboardReducer\r\n  // OTHER REDUCERS WILL BE ADDED HERE\r\n})\r\n\r\n// BINDING MIDDLEWARE\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension')\r\n    return composeWithDevTools(applyMiddleware(...middleware))\r\n  }\r\n  return applyMiddleware(...middleware)\r\n}\r\n\r\nconst makeStore = ({ isServer }) => {\r\n  if (isServer) {\r\n    //If it's on server side, create a store\r\n    return createStore(combinedReducer, bindMiddleware([thunkMiddleware]))\r\n  } else {\r\n    //If it's on client side, create a store which will persist\r\n    const { persistStore, persistReducer } = require('redux-persist')\r\n\r\n    const persistConfig = {\r\n      key: 'nextjs',\r\n      whitelist: ['userReducer', 'AdminReducer', 'centerOnboardReducer'], // only userReducer will be persisted, add other reducers if needed\r\n      storage, // if needed, use a safer storage\r\n    }\r\n\r\n    const persistedReducer = persistReducer(persistConfig, combinedReducer) // Create a new reducer with our existing reducer\r\n\r\n    const store = createStore(persistedReducer, bindMiddleware([thunkMiddleware])) // Creating the store again\r\n\r\n    store.__persistor = persistStore(store) // This creates a persistor object & push that persisted object to .__persistor, so that we can avail the persistability feature\r\n\r\n    return store\r\n  }\r\n}\r\n\r\n// Export the wrapper & wrap the pages/_app.js with this wrapper only\r\nexport const wrapper = createWrapper(makeStore)\r\n","import React from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./routes\";\r\n// import { LocaleProvider } from \"antd-mobile\";\r\nimport App from './app'\r\n\r\nReactDOM.render(\r\n  // <LocaleProvider locale={enUS}>\r\n  <App />\r\n\r\n  // </LocaleProvider>\r\n  ,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}